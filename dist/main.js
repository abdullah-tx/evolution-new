var ep=Object.create;var Tr=Object.defineProperty;var tp=Object.getOwnPropertyDescriptor;var sp=Object.getOwnPropertyNames;var ip=Object.getPrototypeOf,np=Object.prototype.hasOwnProperty;var Cr=p=>{throw TypeError(p)};var rp=(p,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of sp(i))!np.call(p,s)&&s!==e&&Tr(p,s,{get:()=>i[s],enumerable:!(t=tp(i,s))||t.enumerable});return p};var v=(p,i,e)=>(e=p!=null?ep(ip(p)):{},rp(i||!p||!p.__esModule?Tr(e,"default",{value:p,enumerable:!0}):e,p));var vr=(p,i,e)=>i.has(p)||Cr("Cannot "+e);var Cn=(p,i,e)=>(vr(p,i,"read from private field"),e?e.call(p):i.get(p)),Ar=(p,i,e)=>i.has(p)?Cr("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(p):i.set(p,e),Rr=(p,i,e,t)=>(vr(p,i,"write to private field"),t?t.call(p,e):i.set(p,e),e);var xr=v(require("dayjs")),Or=v(require("fs"));var vn=require("class-validator"),Dr=v(require("dotenv"));Dr.default.config();var We=class{constructor(){this.loadEnv()}get(i){return this.env[i]}loadEnv(){this.env=this.envProcess(),this.env.PRODUCTION=process.env?.NODE_ENV==="PROD",process.env?.DOCKER_ENV==="true"&&(this.env.SERVER.TYPE=process.env.SERVER_TYPE,this.env.SERVER.PORT=Number.parseInt(process.env.SERVER_PORT)||8080)}envProcess(){return{SERVER:{TYPE:process.env.SERVER_TYPE||"http",PORT:Number.parseInt(process.env.SERVER_PORT)||8080,URL:process.env.SERVER_URL,DISABLE_DOCS:process.env?.SERVER_DISABLE_DOCS==="true",DISABLE_MANAGER:process.env?.SERVER_DISABLE_MANAGER==="true"},CORS:{ORIGIN:process.env.CORS_ORIGIN?.split(",")||["*"],METHODS:process.env.CORS_METHODS?.split(",")||["POST","GET","PUT","DELETE"],CREDENTIALS:process.env?.CORS_CREDENTIALS==="true"},SSL_CONF:{PRIVKEY:process.env?.SSL_CONF_PRIVKEY||"",FULLCHAIN:process.env?.SSL_CONF_FULLCHAIN||""},PROVIDER:{ENABLED:process.env?.PROVIDER_ENABLED==="true",HOST:process.env.PROVIDER_HOST,PORT:process.env?.PROVIDER_PORT||"5656",PREFIX:process.env?.PROVIDER_PREFIX||"evolution"},DATABASE:{CONNECTION:{URI:process.env.DATABASE_CONNECTION_URI||"",CLIENT_NAME:process.env.DATABASE_CONNECTION_CLIENT_NAME||"evolution"},PROVIDER:process.env.DATABASE_PROVIDER||"postgresql",SAVE_DATA:{INSTANCE:process.env?.DATABASE_SAVE_DATA_INSTANCE==="true",NEW_MESSAGE:process.env?.DATABASE_SAVE_DATA_NEW_MESSAGE==="true",MESSAGE_UPDATE:process.env?.DATABASE_SAVE_MESSAGE_UPDATE==="true",CONTACTS:process.env?.DATABASE_SAVE_DATA_CONTACTS==="true",CHATS:process.env?.DATABASE_SAVE_DATA_CHATS==="true",HISTORIC:process.env?.DATABASE_SAVE_DATA_HISTORIC==="true",LABELS:process.env?.DATABASE_SAVE_DATA_LABELS==="true",IS_ON_WHATSAPP:process.env?.DATABASE_SAVE_IS_ON_WHATSAPP==="true",IS_ON_WHATSAPP_DAYS:Number.parseInt(process.env?.DATABASE_SAVE_IS_ON_WHATSAPP_DAYS??"7")},DELETE_DATA:{LOGICAL_MESSAGE_DELETE:process.env?.DATABASE_DELETE_MESSAGE==="true"}},RABBITMQ:{ENABLED:process.env?.RABBITMQ_ENABLED==="true",GLOBAL_ENABLED:process.env?.RABBITMQ_GLOBAL_ENABLED==="true",EXCHANGE_NAME:process.env?.RABBITMQ_EXCHANGE_NAME||"evolution_exchange",URI:process.env.RABBITMQ_URI||"",EVENTS:{APPLICATION_STARTUP:process.env?.RABBITMQ_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.RABBITMQ_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.RABBITMQ_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.RABBITMQ_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.RABBITMQ_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.RABBITMQ_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.RABBITMQ_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.RABBITMQ_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.RABBITMQ_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.RABBITMQ_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.RABBITMQ_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.RABBITMQ_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.RABBITMQ_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.RABBITMQ_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.RABBITMQ_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.RABBITMQ_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.RABBITMQ_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.RABBITMQ_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.RABBITMQ_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.RABBITMQ_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.RABBITMQ_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.RABBITMQ_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.RABBITMQ_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.RABBITMQ_EVENTS_CALL==="true",TYPEBOT_START:process.env?.RABBITMQ_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},SQS:{ENABLED:process.env?.SQS_ENABLED==="true",ACCESS_KEY_ID:process.env.SQS_ACCESS_KEY_ID||"",SECRET_ACCESS_KEY:process.env.SQS_SECRET_ACCESS_KEY||"",ACCOUNT_ID:process.env.SQS_ACCOUNT_ID||"",REGION:process.env.SQS_REGION||""},WEBSOCKET:{ENABLED:process.env?.WEBSOCKET_ENABLED==="true",GLOBAL_EVENTS:process.env?.WEBSOCKET_GLOBAL_EVENTS==="true"},PUSHER:{ENABLED:process.env?.PUSHER_ENABLED==="true",GLOBAL:{ENABLED:process.env?.PUSHER_GLOBAL_ENABLED==="true",APP_ID:process.env?.PUSHER_GLOBAL_APP_ID||"",KEY:process.env?.PUSHER_GLOBAL_KEY||"",SECRET:process.env?.PUSHER_GLOBAL_SECRET||"",CLUSTER:process.env?.PUSHER_GLOBAL_CLUSTER||"",USE_TLS:process.env?.PUSHER_GLOBAL_USE_TLS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.PUSHER_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.PUSHER_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.PUSHER_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.PUSHER_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.PUSHER_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.PUSHER_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.PUSHER_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.PUSHER_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.PUSHER_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.PUSHER_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.PUSHER_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.PUSHER_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.PUSHER_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.PUSHER_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.PUSHER_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.PUSHER_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.PUSHER_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.PUSHER_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.PUSHER_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.PUSHER_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.PUSHER_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.PUSHER_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.PUSHER_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.PUSHER_EVENTS_CALL==="true",TYPEBOT_START:process.env?.PUSHER_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},WA_BUSINESS:{TOKEN_WEBHOOK:process.env.WA_BUSINESS_TOKEN_WEBHOOK||"evolution",URL:process.env.WA_BUSINESS_URL||"https://graph.facebook.com",VERSION:process.env.WA_BUSINESS_VERSION||"v18.0",LANGUAGE:process.env.WA_BUSINESS_LANGUAGE||"en"},LOG:{LEVEL:process.env?.LOG_LEVEL?.split(",")||["ERROR","WARN","DEBUG","INFO","LOG","VERBOSE","DARK","WEBHOOKS","WEBSOCKET"],COLOR:process.env?.LOG_COLOR==="true",BAILEYS:process.env?.LOG_BAILEYS||"error"},DEL_INSTANCE:(0,vn.isBooleanString)(process.env?.DEL_INSTANCE)?process.env.DEL_INSTANCE==="true":Number.parseInt(process.env.DEL_INSTANCE)||!1,DEL_TEMP_INSTANCES:(0,vn.isBooleanString)(process.env?.DEL_TEMP_INSTANCES)?process.env.DEL_TEMP_INSTANCES==="true":!0,LANGUAGE:process.env?.LANGUAGE||"en",WEBHOOK:{GLOBAL:{URL:process.env?.WEBHOOK_GLOBAL_URL||"",ENABLED:process.env?.WEBHOOK_GLOBAL_ENABLED==="true",WEBHOOK_BY_EVENTS:process.env?.WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.WEBHOOK_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.WEBHOOK_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.WEBHOOK_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.WEBHOOK_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.WEBHOOK_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.WEBHOOK_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.WEBHOOK_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.WEBHOOK_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.WEBHOOK_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.WEBHOOK_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.WEBHOOK_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.WEBHOOK_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.WEBHOOK_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.WEBHOOK_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.WEBHOOK_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.WEBHOOK_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.WEBHOOK_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.WEBHOOK_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.WEBHOOK_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.WEBHOOK_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.WEBHOOK_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.WEBHOOK_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.WEBHOOK_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.WEBHOOK_EVENTS_CALL==="true",TYPEBOT_START:process.env?.WEBHOOK_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS==="true",ERRORS:process.env?.WEBHOOK_EVENTS_ERRORS==="true",ERRORS_WEBHOOK:process.env?.WEBHOOK_EVENTS_ERRORS_WEBHOOK||""}},CONFIG_SESSION_PHONE:{CLIENT:process.env?.CONFIG_SESSION_PHONE_CLIENT||"Evolution API",NAME:process.env?.CONFIG_SESSION_PHONE_NAME||"Chrome",VERSION:process.env?.CONFIG_SESSION_PHONE_VERSION||null},QRCODE:{LIMIT:Number.parseInt(process.env.QRCODE_LIMIT)||30,COLOR:process.env.QRCODE_COLOR||"#198754"},TYPEBOT:{ENABLED:process.env?.TYPEBOT_ENABLED==="true",API_VERSION:process.env?.TYPEBOT_API_VERSION||"old",SEND_MEDIA_BASE64:process.env?.TYPEBOT_SEND_MEDIA_BASE64==="true"},CHATWOOT:{ENABLED:process.env?.CHATWOOT_ENABLED==="true",MESSAGE_DELETE:process.env.CHATWOOT_MESSAGE_DELETE==="true",MESSAGE_READ:process.env.CHATWOOT_MESSAGE_READ==="true",BOT_CONTACT:!process.env.CHATWOOT_BOT_CONTACT||process.env.CHATWOOT_BOT_CONTACT==="true",IMPORT:{DATABASE:{CONNECTION:{URI:process.env.CHATWOOT_IMPORT_DATABASE_CONNECTION_URI||""}},PLACEHOLDER_MEDIA_MESSAGE:process.env?.CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE==="true"}},OPENAI:{ENABLED:process.env?.OPENAI_ENABLED==="true",API_KEY_GLOBAL:process.env?.OPENAI_API_KEY_GLOBAL||null},DIFY:{ENABLED:process.env?.DIFY_ENABLED==="true"},CACHE:{REDIS:{ENABLED:process.env?.CACHE_REDIS_ENABLED==="true",URI:process.env?.CACHE_REDIS_URI||"",PREFIX_KEY:process.env?.CACHE_REDIS_PREFIX_KEY||"evolution-cache",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||604800,SAVE_INSTANCES:process.env?.CACHE_REDIS_SAVE_INSTANCES==="true"},LOCAL:{ENABLED:process.env?.CACHE_LOCAL_ENABLED==="true",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||86400}},S3:{ACCESS_KEY:process.env?.S3_ACCESS_KEY,SECRET_KEY:process.env?.S3_SECRET_KEY,ENDPOINT:process.env?.S3_ENDPOINT,BUCKET_NAME:process.env?.S3_BUCKET,ENABLE:process.env?.S3_ENABLED==="true",PORT:Number.parseInt(process.env?.S3_PORT||"9000"),USE_SSL:process.env?.S3_USE_SSL==="true",REGION:process.env?.S3_REGION},AUTHENTICATION:{API_KEY:{KEY:process.env.AUTHENTICATION_API_KEY||"BQYHJGJHJ"},EXPOSE_IN_FETCH_INSTANCES:process.env?.AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES==="true"}}}},M=new We;var op=JSON.parse(Or.default.readFileSync("./package.json","utf8")),Pr=p=>(0,xr.default)(p).toDate().toString().replace(/\sGMT.+/,""),Ne=(o=>(o.LOG="\x1B[32m",o.INFO="\x1B[34m",o.WARN="\x1B[33m",o.ERROR="\x1B[31m",o.DEBUG="\x1B[36m",o.VERBOSE="\x1B[37m",o.DARK="\x1B[30m",o))(Ne||{});var _r=(o=>(o.LOG="\x1B[32m%s\x1B[0m",o.DARK="\x1B[30m%s\x1B[0m",o.INFO="\x1B[34m%s\x1B[0m",o.WARN="\x1B[33m%s\x1B[0m",o.ERROR="\x1B[31m%s\x1B[0m",o.DEBUG="\x1B[36m%s\x1B[0m",o.VERBOSE="\x1B[37m%s\x1B[0m",o))(_r||{}),Nr=(o=>(o.LOG="LOG",o.WARN="WARN",o.INFO="INFO",o.DARK="DARK",o.ERROR="ERROR",o.DEBUG="DEBUG",o.VERBOSE="VERBOSE",o))(Nr||{}),kr=(o=>(o.LOG="\x1B[42m",o.INFO="\x1B[44m",o.WARN="\x1B[43m",o.DARK="\x1B[40m",o.ERROR="\x1B[41m",o.DEBUG="\x1B[46m",o.VERBOSE="\x1B[47m",o))(kr||{}),T=class{constructor(i="Logger"){this.configService=M;this.instance=null;this.context=i}setContext(i){this.context=i}setInstance(i){this.instance=i}console(i,e){let t=[];this.configService.get("LOG").LEVEL.forEach(r=>t.push(Nr[r]));let s=typeof i;t.includes(e)&&(M.get("LOG").COLOR?(console.log("\x1B[1m"+_r[e],"[Evolution API]","\x1B[1m"+Ne[e],this.instance?`[${this.instance}]`:"","\x1B[1m"+Ne[e],`v${op.version}`,"\x1B[1m"+Ne[e],process.pid.toString(),"\x1B[0m","\x1B[1m"+Ne[e],"-","\x1B[1m\x1B[37m",`${Pr(Date.now())}  `,"\x1B[0m",Ne[e]+kr[e]+"\x1B[1m",`${e} \x1B[0m`,"\x1B[33m\x1B[1m",`[${this.context}]\x1B[0m`,Ne[e]+"\x1B[1m",`[${s}]\x1B[0m`,Ne[e],s!=="object"?i:"","\x1B[0m"),s==="object"&&console.log(i,`
`)):console.log("[Evolution API]",this.instance?`[${this.instance}]`:"",process.pid.toString(),"-",`${Pr(Date.now())}  `,`${e} `,`[${this.context}]`,`[${s}]`,i))}log(i){this.console(i,"LOG")}info(i){this.console(i,"INFO")}warn(i){this.console(i,"WARN")}error(i){this.console(i,"ERROR")}verbose(i){this.console(i,"VERBOSE")}debug(i){this.console(i,"DEBUG")}dark(i){this.console(i,"DARK")}};var De=v(require("axios")),Br=require("child_process"),Xe=class{constructor(i){this.configService=i;this.logger=new T("ProviderFiles");this.config=Object.freeze(this.configService.get("PROVIDER"));this.baseUrl=`http://${this.config.HOST}:${this.config.PORT}/session/${this.config.PREFIX}`,this.globalApiToken=this.configService.get("AUTHENTICATION").API_KEY.KEY}get isEnabled(){return!!this.config?.ENABLED}async onModuleInit(){if(this.config.ENABLED){let i=`http://${this.config.HOST}:${this.config.PORT}`;try{if((await De.default.options(i+"/ping"))?.data!="pong")throw new Error("Offline file provider.");await De.default.post(`${i}/session`,{group:this.config.PREFIX},{headers:{apikey:this.globalApiToken}})}catch(e){this.logger.error(["Failed to connect to the file server",e?.message,e?.stack]);let t=process.pid;(0,Br.execSync)(`kill -9 ${t}`)}}}async onModuleDestroy(){}async create(i){try{let e=await De.default.post(`${this.baseUrl}`,{instance:i},{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}async write(i,e,t){try{let s=await De.default.post(`${this.baseUrl}/${i}/${e}`,t,{headers:{apikey:this.globalApiToken}});return[{status:s.status,data:s?.data}]}catch(s){return[{status:s?.response?.status,data:s?.response?.data},s]}}async read(i,e){try{let t=await De.default.get(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async delete(i,e){try{let t=await De.default.delete(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async allInstances(){try{let i=await De.default.get(`${this.baseUrl}/list-instances`,{headers:{apikey:this.globalApiToken}});return[{status:i.status,data:i?.data}]}catch(i){return[{status:i?.response?.status,data:i?.response?.data},i]}}async removeSession(i){try{let e=await De.default.delete(`${this.baseUrl}/${i}`,{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}};var Lr=require("@prisma/client"),$e=class{},Ze=class extends Lr.PrismaClient{constructor(e){super();this.configService=e;this.logger=new T("PrismaRepository")}async onModuleInit(){await this.$connect(),this.logger.info("Repository:Prisma - ON")}async onModuleDestroy(){await this.$disconnect(),this.logger.warn("Repository:Prisma - OFF")}};var An=require("baileys"),Fr=v(require("node-cache")),oe=class oe{constructor(i,e){this.configService=i;this.module=e;this.logger=new T("LocalCache");this.conf=this.configService.get("CACHE")?.LOCAL}async get(i){return oe.localCache.get(this.buildKey(i))}async set(i,e,t){return oe.localCache.set(this.buildKey(i),e,t||this.conf.TTL)}async has(i){return oe.localCache.has(this.buildKey(i))}async delete(i){return oe.localCache.del(this.buildKey(i))}async deleteAll(i){let e=await this.keys(i);return e?.length?oe.localCache.del(e):0}async keys(i){let e=`${this.buildKey("")}${i?`${i}:`:""}`;return oe.localCache.keys().filter(t=>t.substring(0,e.length)===e)}buildKey(i){return`${this.module}:${i}`}async hGet(i,e){try{let t=oe.localCache.get(this.buildKey(i));return t&&e in t?JSON.parse(t[e],An.BufferJSON.reviver):null}catch(t){this.logger.error(t)}}async hSet(i,e,t){try{let s=JSON.stringify(t,An.BufferJSON.replacer),r=oe.localCache.get(this.buildKey(i));r||(r={}),r[e]=s,oe.localCache.set(this.buildKey(i),r)}catch(s){this.logger.error(s)}}async hDelete(i,e){try{let t=oe.localCache.get(this.buildKey(i));return t&&e in t?(delete t[e],oe.localCache.set(this.buildKey(i),t),1):0}catch(t){this.logger.error(t)}}};oe.localCache=new Fr.default;var Vt=oe;var Dn=require("baileys");var Ur=require("redis"),Rn=class{constructor(){this.logger=new T("Redis");this.client=null;this.connected=!1;this.conf=M.get("CACHE")?.REDIS}getConnection(){if(this.connected)return this.client;this.client=(0,Ur.createClient)({url:this.conf.URI}),this.client.on("connect",()=>{this.logger.verbose("redis connecting")}),this.client.on("ready",()=>{this.logger.verbose("redis ready"),this.connected=!0}),this.client.on("error",()=>{this.logger.error("redis disconnected"),this.connected=!1}),this.client.on("end",()=>{this.logger.verbose("redis connection ended"),this.connected=!1});try{this.client.connect(),this.connected=!0}catch(i){return this.connected=!1,this.logger.error("redis connect exception caught: "+i),null}return this.client}},Jr=new Rn;var jt=class{constructor(i,e){this.configService=i;this.module=e;this.logger=new T("RedisCache");this.conf=this.configService.get("CACHE")?.REDIS,this.client=Jr.getConnection()}async get(i){try{return JSON.parse(await this.client.get(this.buildKey(i)))}catch(e){this.logger.error(e)}}async hGet(i,e){try{let t=await this.client.hGet(this.buildKey(i),e);return t?JSON.parse(t,Dn.BufferJSON.reviver):null}catch(t){this.logger.error(t)}}async set(i,e,t){try{await this.client.setEx(this.buildKey(i),t||this.conf?.TTL,JSON.stringify(e))}catch(s){this.logger.error(s)}}async hSet(i,e,t){try{let s=JSON.stringify(t,Dn.BufferJSON.replacer);await this.client.hSet(this.buildKey(i),e,s)}catch(s){this.logger.error(s)}}async has(i){try{return await this.client.exists(this.buildKey(i))>0}catch(e){this.logger.error(e)}}async delete(i){try{return await this.client.del(this.buildKey(i))}catch(e){this.logger.error(e)}}async hDelete(i,e){try{return await this.client.hDel(this.buildKey(i),e)}catch(t){this.logger.error(t)}}async deleteAll(i){try{let e=await this.keys(i);return e?.length?await this.client.del(e):0}catch(e){this.logger.error(e)}}async keys(i){try{let e=`${this.buildKey("")}${i?`${i}:`:""}*`,t=[];for await(let s of this.client.scanIterator({MATCH:e,COUNT:100}))t.push(s);return[...new Set(t)]}catch(e){this.logger.error(e)}}buildKey(i){return`${this.conf?.PREFIX_KEY}:${this.module}:${i}`}};var Wr=new T("CacheEngine"),Ce=class{constructor(i,e){this.configService=i;let t=i.get("CACHE");t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""?(Wr.verbose(`RedisCache initialized for ${e}`),this.engine=new jt(i,e)):t?.LOCAL?.ENABLED&&(Wr.verbose(`LocalCache initialized for ${e}`),this.engine=new Vt(i,e))}getEngine(){return this.engine}};var $r=v(require("eventemitter2")),ap=parseInt(process.env.EVENT_EMITTER_MAX_LISTENERS,10)||50,Pn=new $r.default({delimiter:".",newListener:!1,ignoreErrors:!1,maxListeners:ap});var Kt=class{constructor(i){this.waMonitor=i}async offerCall({instanceName:i},e){return await this.waMonitor.waInstances[i].offerCall(e)}};var Yt=class{constructor(i){this.waMonitor=i}async whatsappNumber({instanceName:i},e){return await this.waMonitor.waInstances[i].whatsappNumber(e)}async readMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].markMessageAsRead(e)}async archiveChat({instanceName:i},e){return await this.waMonitor.waInstances[i].archiveChat(e)}async markChatUnread({instanceName:i},e){return await this.waMonitor.waInstances[i].markChatUnread(e)}async deleteMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].deleteMessage(e)}async fetchProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].profilePicture(e.number)}async fetchProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchProfile(i,e.number)}async fetchContacts({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchContacts(e)}async getBase64FromMediaMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].getBase64FromMediaMessage(e)}async fetchMessages({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchMessages(e)}async fetchStatusMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchStatusMessage(e)}async fetchChats({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchChats(e)}async sendPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].sendPresence(e)}async fetchPrivacySettings({instanceName:i}){return await this.waMonitor.waInstances[i].fetchPrivacySettings()}async updatePrivacySettings({instanceName:i},e){return await this.waMonitor.waInstances[i].updatePrivacySettings(e)}async fetchBusinessProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchBusinessProfile(e.number)}async updateProfileName({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileName(e.name)}async updateProfileStatus({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileStatus(e.status)}async updateProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfilePicture(e.picture)}async removeProfilePicture({instanceName:i}){return await this.waMonitor.waInstances[i].removeProfilePicture()}async updateMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].updateMessage(e)}async blockUser({instanceName:i},e){return await this.waMonitor.waInstances[i].blockUser(e)}};var Qt=class{constructor(i){this.waMonitor=i}async createGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].createGroup(e)}async updateGroupPicture(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupPicture(e)}async updateGroupSubject(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupSubject(e)}async updateGroupDescription(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupDescription(e)}async findGroupInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].findGroup(e)}async fetchAllGroups(i,e){return await this.waMonitor.waInstances[i.instanceName].fetchAllGroups(e)}async inviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteCode(e)}async inviteInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteInfo(e)}async sendInvite(i,e){return await this.waMonitor.waInstances[i.instanceName].sendInvite(e)}async acceptInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].acceptInviteCode(e)}async revokeInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].revokeInviteCode(e)}async findParticipants(i,e){return await this.waMonitor.waInstances[i.instanceName].findParticipants(e)}async updateGParticipate(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGParticipant(e)}async updateGSetting(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGSetting(e)}async toggleEphemeral(i,e){return await this.waMonitor.waInstances[i.instanceName].toggleEphemeral(e)}async leaveGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].leaveGroup(e)}};var qr=["imageMessage","documentMessage","audioMessage","videoMessage","stickerMessage","ptvMessage"],Gr=["ephemeralMessage","documentWithCaptionMessage","viewOnceMessage","viewOnceMessageV2"],P={WHATSAPP_BUSINESS:"WHATSAPP-BUSINESS",WHATSAPP_BAILEYS:"WHATSAPP-BAILEYS",EVOLUTION:"EVOLUTION"};var y=class{constructor(...i){throw{status:400,error:"Bad Request",message:i.length>0?i:void 0}}};var qe=class{constructor(...i){throw{status:401,error:"Unauthorized",message:i.length>0?i:"Unauthorized"}}};var et=class{constructor(...i){throw{status:403,error:"Forbidden",message:i.length>0?i:void 0}}};var W=class{constructor(...i){throw{status:404,error:"Not Found",message:i.length>0?i:void 0}}};var F=class{constructor(...i){throw{status:500,error:"Internal Server Error",message:i.length>0?i:void 0}}};var xn=require("baileys"),mt=require("class-validator"),On=require("uuid"),zt=class{constructor(i,e,t,s,r,n,o,a,c,u,d){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.eventEmitter=s;this.chatwootService=r;this.settingsService=n;this.proxyService=o;this.cache=a;this.chatwootCache=c;this.baileysCache=u;this.providerFiles=d;this.logger=new T("InstanceController")}async createInstance(i){try{let e=Xt.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});if(!e)throw new y("Invalid integration");let t=(0,On.v4)();i.instanceId=t;let s;if(i.token?s=i.token:s=(0,On.v4)().toUpperCase(),await this.waMonitor.saveInstance({instanceId:t,integration:i.integration,instanceName:i.instanceName,hash:s,number:i.number,businessId:i.businessId,status:i.status}),e.setInstance({instanceName:i.instanceName,instanceId:t,integration:i.integration,token:s,number:i.number,businessId:i.businessId}),this.waMonitor.waInstances[e.instanceName]=e,this.waMonitor.delInstanceTime(e.instanceName),await Y.setInstance(e.instanceName,i),e.sendDataWebhook("instance.create",{instanceName:i.instanceName,instanceId:t}),i.proxyHost&&i.proxyPort&&i.proxyProtocol){if(!await this.proxyService.testProxy({host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword}))throw new y("Invalid proxy");await this.proxyService.createProxy(e,{enabled:!0,host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword})}let r={rejectCall:i.rejectCall===!0,msgCall:i.msgCall||"",groupsIgnore:i.groupsIgnore===!0,alwaysOnline:i.alwaysOnline===!0,readMessages:i.readMessages===!0,readStatus:i.readStatus===!0,syncFullHistory:i.syncFullHistory===!0};await this.settingsService.create(e,r);let n=null,o="";if(i.integration===P.WHATSAPP_BUSINESS){if(!i.number)throw new y("number is required");n=`${this.configService.get("SERVER").URL}/webhook/meta`,o=this.configService.get("WA_BUSINESS").TOKEN_WEBHOOK}if(!i.chatwootAccountId||!i.chatwootToken||!i.chatwootUrl){let u;return i.qrcode&&i.integration===P.WHATSAPP_BAILEYS&&(await e.connectToWhatsapp(i.number),await(0,xn.delay)(5e3),u=e.qrCode),{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,qrcode:u}}if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is not enabled");if(!i.chatwootAccountId)throw new y("accountId is required");if(!i.chatwootToken)throw new y("token is required");if(!i.chatwootUrl)throw new y("url is required");if(!(0,mt.isURL)(i.chatwootUrl,{require_tld:!1}))throw new y('Invalid "url" property in chatwoot');if(i.chatwootSignMsg!==!0&&i.chatwootSignMsg!==!1)throw new y("signMsg is required");if(i.chatwootReopenConversation!==!0&&i.chatwootReopenConversation!==!1)throw new y("reopenConversation is required");if(i.chatwootConversationPending!==!0&&i.chatwootConversationPending!==!1)throw new y("conversationPending is required");let a=this.configService.get("SERVER").URL,c;try{c=await this.chatwootService.create(e,{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,nameInbox:i.chatwootNameInbox??e.instanceName.split("-cwId-")[0],number:i.number,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,importContacts:i.chatwootImportContacts??!0,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages??60,organization:i.chatwootOrganization,logo:i.chatwootLogo,autoCreate:i.chatwootAutoCreate!==!1}),this.logger.log(`Generated Inbox ID in controller: ${JSON.stringify(c)}`)}catch(u){this.logger.log(u)}return{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,chatwoot:{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importContacts:i.chatwootImportContacts??!0,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages||60,number:i.number,nameInbox:i.chatwootNameInbox??e.instanceName,inbox_id:c?.inboxId,webhookUrl:`${a}/chatwoot/webhook/${encodeURIComponent(e.instanceName)}`}}}catch(e){throw this.waMonitor.deleteInstance(i.instanceName),this.logger.error((0,mt.isArray)(e.message)?e.message[0]:e.message),new y((0,mt.isArray)(e.message)?e.message[0]:e.message)}}async connectToWhatsapp({instanceName:i,number:e=null}){try{let t=this.waMonitor.waInstances[i],s=t?.connectionStatus?.state;if(!s)throw new y('The "'+i+'" instance does not exist');return s=="open"?await this.connectionState({instanceName:i}):s=="connecting"?t.qrCode:s=="close"?(await t.connectToWhatsapp(e),await(0,xn.delay)(2e3),t.qrCode):{instance:{instanceName:i,status:s},qrcode:t?.qrCode}}catch(t){return this.logger.error(t),{error:!0,message:t.toString()}}}async restartInstance({instanceName:i}){try{let e=this.waMonitor.waInstances[i],t=e?.connectionStatus?.state;if(!t)throw new y('The "'+i+'" instance does not exist');if(t=="close")throw new y('The "'+i+'" instance is not connected');if(t=="open")return this.configService.get("CHATWOOT").ENABLED&&e.clearCacheChatwoot(),this.logger.info("restarting instance"+i),e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i});if(t=="connecting")return e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i})}catch(e){return this.logger.error(e),{error:!0,message:e.toString()}}}async connectionState({instanceName:i}){return{instance:{instanceName:i,state:this.waMonitor.waInstances[i]?.connectionStatus?.state}}}async fetchInstances({instanceName:i,instanceId:e,number:t},s){if(this.configService.get("AUTHENTICATION").API_KEY.KEY!==s){let o=await this.prismaRepository.instance.findMany({where:{token:s,name:i||void 0,id:e||void 0}});if(o.length>0){let a=o.map(c=>c.name);return this.waMonitor.instanceInfo(a)}else throw new qe}if(e||t)return this.waMonitor.instanceInfoById(e,t);let n=i?[i]:null;return this.waMonitor.instanceInfo(n)}async setPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].setPresence(e)}async logout({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});if(e.state==="close")throw new y('The "'+i+'" instance is not connected');try{return this.waMonitor.waInstances[i]?.logoutInstance(),{status:"SUCCESS",error:!1,response:{message:"Instance logged out"}}}catch(t){throw new F(t.toString())}}async deleteInstance({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});if(e.state==="open")throw new y('The "'+i+'" instance needs to be disconnected');try{let t=this.waMonitor.waInstances[i];this.configService.get("CHATWOOT").ENABLED&&t?.clearCacheChatwoot(),e.state==="connecting"&&await this.logout({instanceName:i});try{t?.sendDataWebhook("instance.delete",{instanceName:i,instanceId:t.instanceId})}catch(s){this.logger.error(s)}return this.eventEmitter.emit("remove.instance",i,"inner"),{status:"SUCCESS",error:!1,response:{message:"Instance deleted"}}}catch(t){throw new y(t.toString())}}};var Zt=class{constructor(i){this.waMonitor=i}async fetchLabels({instanceName:i}){return await this.waMonitor.waInstances[i].fetchLabels()}async handleLabel({instanceName:i},e){return await this.waMonitor.waInstances[i].handleLabel(e)}};var _n=require("https-proxy-agent");function Ee(p){if(typeof p=="string")return new _n.HttpsProxyAgent(p);let{host:i,password:e,port:t,protocol:s,username:r}=p,n=`${s}://${i}:${t}`;return r&&e&&(n=`${s}://${r}:${e}@${i}:${t}`),new _n.HttpsProxyAgent(n)}var ht=v(require("axios")),Nn=new T("ProxyController"),es=class{constructor(i,e){this.proxyService=i;this.waMonitor=e}async createProxy(i,e){if(!this.waMonitor.waInstances[i.instanceName])throw new W(`The "${i.instanceName}" instance does not exist`);if(e?.enabled||(e.host="",e.port="",e.protocol="",e.username="",e.password=""),e.host&&!await this.testProxy(e))throw new y("Invalid proxy");return this.proxyService.create(i,e)}async findProxy(i){if(!this.waMonitor.waInstances[i.instanceName])throw new W(`The "${i.instanceName}" instance does not exist`);return this.proxyService.find(i)}async testProxy(i){try{let e=await ht.default.get("https://icanhazip.com/");return(await ht.default.get("https://icanhazip.com/",{httpsAgent:Ee(i)}))?.data!==e?.data}catch(e){return ht.default.isAxiosError(e)&&e.response?.data?Nn.error("testProxy error: "+e.response.data):(ht.default.isAxiosError(e),Nn.error("testProxy error: ")),!1}}};var Ie=require("class-validator"),ts=class{constructor(i){this.waMonitor=i}async sendTemplate({instanceName:i},e){return await this.waMonitor.waInstances[i].templateMessage(e)}async sendText({instanceName:i},e){return await this.waMonitor.waInstances[i].textMessage(e)}async sendMedia({instanceName:i},e,t){if((0,Ie.isBase64)(e?.media)&&!e?.fileName&&e?.mediatype==="document")throw new y("For base64 the file name must be informed.");if(t||(0,Ie.isURL)(e?.media)||(0,Ie.isBase64)(e?.media))return await this.waMonitor.waInstances[i].mediaMessage(e,t);throw new y("Owned media must be a url or base64")}async sendPtv({instanceName:i},e,t){if(t||(0,Ie.isURL)(e?.video)||(0,Ie.isBase64)(e?.video))return await this.waMonitor.waInstances[i].ptvMessage(e,t);throw new y("Owned media must be a url or base64")}async sendSticker({instanceName:i},e,t){if(t||(0,Ie.isURL)(e.sticker)||(0,Ie.isBase64)(e.sticker))return await this.waMonitor.waInstances[i].mediaSticker(e,t);throw new y("Owned media must be a url or base64")}async sendWhatsAppAudio({instanceName:i},e,t){if(t?.buffer||(0,Ie.isURL)(e.audio)||(0,Ie.isBase64)(e.audio))return await this.waMonitor.waInstances[i].audioWhatsapp(e,t);throw console.error("El archivo no tiene buffer o el audio no es una URL o Base64 v\xE1lida"),new y("Owned media must be a url, base64, or valid file with buffer")}async sendButtons({instanceName:i},e){return await this.waMonitor.waInstances[i].buttonMessage(e)}async sendLocation({instanceName:i},e){return await this.waMonitor.waInstances[i].locationMessage(e)}async sendList({instanceName:i},e){return await this.waMonitor.waInstances[i].listMessage(e)}async sendContact({instanceName:i},e){return await this.waMonitor.waInstances[i].contactMessage(e)}async sendReaction({instanceName:i},e){if(!e.reaction.match(/[^()\w\sà-ú"-+]+/))throw new y('"reaction" must be an emoji');return await this.waMonitor.waInstances[i].reactionMessage(e)}async sendPoll({instanceName:i},e){return await this.waMonitor.waInstances[i].pollMessage(e)}async sendStatus({instanceName:i},e,t){return await this.waMonitor.waInstances[i].statusMessage(e,t)}};var ss=class{constructor(i){this.settingsService=i}async createSettings(i,e){return this.settingsService.create(i,e)}async findSettings(i){return this.settingsService.find(i)}};var is=class{constructor(i){this.templateService=i}async createTemplate(i,e){return this.templateService.create(i,e)}async findTemplate(i){return this.templateService.find(i)}};var Hr=v(require("pg")),{Pool:cp}=Hr.default,kn=class{constructor(){this.logger=new T("Postgres");this.connected=!1}getConnection(i){if(this.connected)return this.pool;this.pool=new cp({connectionString:i,ssl:{rejectUnauthorized:!1}}),this.pool.on("error",()=>{this.logger.error("postgres disconnected"),this.connected=!1});try{this.connected=!0}catch(e){return this.connected=!1,this.logger.error("postgres connect exception caught: "+e),null}return this.pool}getChatwootConnection(){let i=M.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return this.getConnection(i)}},ve=new kn;var Bn=class{constructor(){this.logger=new T("ChatwootImport");this.repositoryMessagesCache=new Map;this.historyMessages=new Map;this.historyContacts=new Map}getRepositoryMessagesCache(i){return this.repositoryMessagesCache.has(i.instanceName)?this.repositoryMessagesCache.get(i.instanceName):null}setRepositoryMessagesCache(i,e){this.repositoryMessagesCache.set(i.instanceName,e)}deleteRepositoryMessagesCache(i){this.repositoryMessagesCache.delete(i.instanceName)}addHistoryMessages(i,e){let t=this.historyMessages.has(i.instanceName)?this.historyMessages.get(i.instanceName):[];this.historyMessages.set(i.instanceName,[...t,...e])}addHistoryContacts(i,e){let t=this.historyContacts.has(i.instanceName)?this.historyContacts.get(i.instanceName):[];this.historyContacts.set(i.instanceName,t.concat(e))}deleteHistoryMessages(i){this.historyMessages.delete(i.instanceName)}deleteHistoryContacts(i){this.historyContacts.delete(i.instanceName)}clearAll(i){this.deleteRepositoryMessagesCache(i),this.deleteHistoryMessages(i),this.deleteHistoryContacts(i)}getHistoryMessagesLenght(i){return this.historyMessages.get(i.instanceName)?.length??0}async importHistoryContacts(i,e){try{if(this.getHistoryMessagesLenght(i)>0)return;let t=ve.getChatwootConnection(),s=0,r=this.historyContacts.get(i.instanceName)||[];if(r.length===0)return 0;let n=this.sliceIntoChunks(r,3e3);for(;n.length>0;){let o=`SELECT id FROM labels WHERE title = '${e.nameInbox}' AND account_id = ${e.accountId} LIMIT 1`,a=(await t.query(o))?.rows[0]?.id;if(!a){let f=`INSERT INTO labels (title, color, show_on_sidebar, account_id, created_at, updated_at) VALUES ('${e.nameInbox}', '#34039B', true, ${e.accountId}, NOW(), NOW()) RETURNING id`;a=(await t.query(f))?.rows[0]?.id}let c=`INSERT INTO contacts
          (name, phone_number, account_id, identifier, created_at, updated_at) VALUES `,u=[e.accountId];for(let f of n){u.push(f.pushName);let b=`$${u.length}`;u.push(`+${f.remoteJid.split("@")[0]}`);let S=`$${u.length}`;u.push(f.remoteJid);let w=`$${u.length}`;c+=`(${b}, ${S}, $1, ${w}, NOW(), NOW()),`}c.slice(-1)===","&&(c=c.slice(0,-1)),c+=` ON CONFLICT (identifier, account_id)
                       DO UPDATE SET
                        name = EXCLUDED.name,
                        phone_number = EXCLUDED.phone_number,
                        identifier = EXCLUDED.identifier`,s+=(await t.query(c,u))?.rowCount??0;let d=`SELECT id FROM tags WHERE name = '${e.nameInbox}' LIMIT 1`,g=(await t.query(d))?.rows[0]?.id,h=`INSERT INTO tags (name, taggings_count) VALUES ('${e.nameInbox}', ${s}) ON CONFLICT (name) DO UPDATE SET taggings_count = tags.taggings_count + ${s} RETURNING id`;g=(await t.query(h))?.rows[0]?.id,await t.query(h);let m="INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) VALUES ";n.forEach(f=>{let b=`(SELECT id FROM contacts WHERE identifier = '${f.remoteJid}' AND account_id = ${e.accountId})`;m+=`($1, $2, ${b}, $3, NOW()),`}),m.slice(-1)===","&&(m=m.slice(0,-1)),await t.query(m,[g,"Contact","labels"]),n=this.sliceIntoChunks(r,3e3)}return this.deleteHistoryContacts(i),s}catch(t){this.logger.error(`Error on import history contacts: ${t.toString()}`)}}async getExistingSourceIds(i){try{let e=new Set;if(i.length===0)return e;let t=i.map(o=>`WAID:${o.replace("WAID:","")}`),n=await ve.getChatwootConnection().query("SELECT source_id FROM messages WHERE source_id = ANY($1)",[t]);for(let o of n.rows)e.add(o.source_id);return e}catch{return null}}async importHistoryMessages(i,e,t,s){try{let r=ve.getChatwootConnection(),n=await this.getChatwootUser(s);if(!n)throw new Error("User not found to import messages.");let o=0,a=this.historyMessages.get(i.instanceName)||[];if(a.length===0)return 0;a.sort((m,f)=>{let b=m.key,S=f.key,w=m.messageTimestamp,I=f.messageTimestamp;return parseInt(b.remoteJid)-parseInt(S.remoteJid)||w-I});let c=this.createMessagesMapByPhoneNumber(a),u=new Map;c.forEach((m,f)=>{u.set(f,{first:m[0]?.messageTimestamp,last:m[m.length-1]?.messageTimestamp})});let d=await this.getExistingSourceIds(a.map(m=>m.key.id));a=a.filter(m=>!d.has(m.key.id));let l=4e3,g=this.sliceIntoChunks(a,l);for(;g.length>0;){let m=this.createMessagesMapByPhoneNumber(g);if(m.size>0){let f=await this.selectOrCreateFksFromChatwoot(s,t,u,m),b=`INSERT INTO messages
            (content, processed_message_content, account_id, inbox_id, conversation_id, message_type, private, content_type,
            sender_type, sender_id, source_id, created_at, updated_at) VALUES `,S=[s.accountId,t.id];m.forEach((w,I)=>{let E=f.get(I);w.forEach(C=>{if(!C.message||!E?.conversation_id||!E?.contact_id)return;let O=this.getContentMessage(e,C);if(!O)return;S.push(O);let N=`$${S.length}`;S.push(E.conversation_id);let _=`$${S.length}`;S.push(C.key.fromMe?"1":"0");let L=`$${S.length}`;S.push(C.key.fromMe?n.user_type:"Contact");let q=`$${S.length}`;S.push(C.key.fromMe?n.user_id:E.contact_id);let H=`$${S.length}`;S.push("WAID:"+C.key.id);let V=`$${S.length}`;S.push(C.messageTimestamp);let G=`$${S.length}`;b+=`(${N}, ${N}, $1, $2, ${_}, ${L}, FALSE, 0,
                  ${q},${H},${V}, to_timestamp(${G}), to_timestamp(${G})),`})}),S.length>2&&(b.slice(-1)===","&&(b=b.slice(0,-1)),o+=(await r.query(b,S))?.rowCount??0)}g=this.sliceIntoChunks(a,l)}this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i);let h={...s,ignoreJids:Array.isArray(s.ignoreJids)?s.ignoreJids.map(m=>String(m)):[]};return this.importHistoryContacts(i,h),o}catch(r){this.logger.error(`Error on import history messages: ${r.toString()}`),this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i)}}async selectOrCreateFksFromChatwoot(i,e,t,s){let r=ve.getChatwootConnection(),n=[i.accountId,e.id],a=`WITH
              phone_number AS (
                SELECT phone_number, created_at::INTEGER, last_activity_at::INTEGER FROM (
                  VALUES 
                   ${Array.from(s.keys()).map(u=>{let d=t.get(u);if(d){n.push(u);let l=`($${n.length},`;return n.push(d.first),l+=`$${n.length},`,n.push(d.last),`${l}$${n.length})`}}).join(",")}
                 ) as t (phone_number, created_at, last_activity_at)
              ),

              only_new_phone_number AS (
                SELECT * FROM phone_number
                WHERE phone_number NOT IN (
                  SELECT phone_number
                  FROM contacts
                    JOIN contact_inboxes ci ON ci.contact_id = contacts.id AND ci.inbox_id = $2
                    JOIN conversations con ON con.contact_inbox_id = ci.id 
                      AND con.account_id = $1
                      AND con.inbox_id = $2
                      AND con.contact_id = contacts.id
                  WHERE contacts.account_id = $1
                )
              ),

              new_contact AS (
                INSERT INTO contacts (name, phone_number, account_id, identifier, created_at, updated_at)
                SELECT REPLACE(p.phone_number, '+', ''), p.phone_number, $1, CONCAT(REPLACE(p.phone_number, '+', ''),
                  '@s.whatsapp.net'), to_timestamp(p.created_at), to_timestamp(p.last_activity_at)
                FROM only_new_phone_number AS p
                ON CONFLICT(identifier, account_id) DO UPDATE SET updated_at = EXCLUDED.updated_at
                RETURNING id, phone_number, created_at, updated_at
              ),

              new_contact_inbox AS (
                INSERT INTO contact_inboxes (contact_id, inbox_id, source_id, created_at, updated_at)
                SELECT new_contact.id, $2, gen_random_uuid(), new_contact.created_at, new_contact.updated_at
                FROM new_contact 
                RETURNING id, contact_id, created_at, updated_at
              ),

              new_conversation AS (
                INSERT INTO conversations (account_id, inbox_id, status, contact_id,
                  contact_inbox_id, uuid, last_activity_at, created_at, updated_at)
                SELECT $1, $2, 0, new_contact_inbox.contact_id, new_contact_inbox.id, gen_random_uuid(),
                  new_contact_inbox.updated_at, new_contact_inbox.created_at, new_contact_inbox.updated_at
                FROM new_contact_inbox
                RETURNING id, contact_id
              )

              SELECT new_contact.phone_number, new_conversation.contact_id, new_conversation.id AS conversation_id
              FROM new_conversation 
              JOIN new_contact ON new_conversation.contact_id = new_contact.id

              UNION

              SELECT p.phone_number, c.id contact_id, con.id conversation_id
                FROM phone_number p
              JOIN contacts c ON c.phone_number = p.phone_number
              JOIN contact_inboxes ci ON ci.contact_id = c.id AND ci.inbox_id = $2
              JOIN conversations con ON con.contact_inbox_id = ci.id AND con.account_id = $1
                AND con.inbox_id = $2 AND con.contact_id = c.id`,c=await r.query(a,n);return new Map(c.rows.map(u=>[u.phone_number,u]))}async getChatwootUser(i){try{return(await ve.getChatwootConnection().query(`SELECT owner_type AS user_type, owner_id AS user_id
                         FROM access_tokens
                       WHERE token = $1`,[i.token]))?.rows[0]||!1}catch(e){this.logger.error(`Error on getChatwootUser: ${e.toString()}`)}}createMessagesMapByPhoneNumber(i){return i.reduce((e,t)=>{let s=t?.key;if(!this.isIgnorePhoneNumber(s?.remoteJid)){let r=s?.remoteJid?.split("@")[0];if(r){let n=`+${r}`,o=e.has(n)?e.get(n):[];o.push(t),e.set(n,o)}}return e},new Map)}async getContactsOrderByRecentConversations(i,e,t=50){try{return(await ve.getChatwootConnection().query(`SELECT contacts.id, contacts.identifier, contacts.phone_number
                     FROM conversations
                   JOIN contacts ON contacts.id = conversations.contact_id
                   WHERE conversations.account_id = $1
                     AND inbox_id = $2
                   ORDER BY conversations.last_activity_at DESC
                   LIMIT $3`,[e.accountId,i.id,t]))?.rows}catch(s){this.logger.error(`Error on get recent conversations: ${s.toString()}`)}}getContentMessage(i,e){let t=i.getConversationMessage(e.message);if(t)return t;if(!M.get("CHATWOOT").IMPORT.PLACEHOLDER_MEDIA_MESSAGE)return"";let s={documentMessage:e.message.documentMessage,documentWithCaptionMessage:e.message.documentWithCaptionMessage?.message?.documentMessage,imageMessage:e.message.imageMessage,videoMessage:e.message.videoMessage,audioMessage:e.message.audioMessage,stickerMessage:e.message.stickerMessage,templateMessage:e.message.templateMessage?.hydratedTemplate?.hydratedContentText};switch(Object.keys(s).find(n=>s[n]!==void 0)){case"documentMessage":return`_<File: ${e.message.documentMessage.fileName}${e.message.documentMessage.caption?` ${e.message.documentMessage.caption}`:""}>_`;case"documentWithCaptionMessage":return`_<File: ${e.message.documentWithCaptionMessage.message.documentMessage.fileName}${e.message.documentWithCaptionMessage.message.documentMessage.caption?` ${e.message.documentWithCaptionMessage.message.documentMessage.caption}`:""}>_`;case"templateMessage":return e.message.templateMessage.hydratedTemplate.hydratedTitleText?`*${e.message.templateMessage.hydratedTemplate.hydratedTitleText}*\\n`:""+e.message.templateMessage.hydratedTemplate.hydratedContentText;case"imageMessage":return"_<Image Message>_";case"videoMessage":return"_<Video Message>_";case"audioMessage":return"_<Audio Message>_";case"stickerMessage":return"_<Sticker Message>_";default:return""}}sliceIntoChunks(i,e){return i.splice(0,e)}isGroup(i){return i.includes("@g.us")}isIgnorePhoneNumber(i){return this.isGroup(i)||i==="status@broadcast"||i==="0@s.whatsapp.net"}updateMessageSourceID(i,e){return ve.getChatwootConnection().query("UPDATE messages SET source_id = $1, status = 0, created_at = NOW(), updated_at = NOW() WHERE id = $2;",[`WAID:${e}`,i])}},ee=new Bn;var Qr=v(require("@figuro/chatwoot-sdk")),ns=require("@figuro/chatwoot-sdk/dist/core/request");var Vr=v(require("fs")),Ln=v(require("i18next")),Fn=v(require("path")),pp=["en","pt-BR","es"],lp=Fn.default.join(__dirname,"translations"),up=new We,jr={};pp.forEach(p=>{let i=Fn.default.join(lp,`${p}.json`);Vr.default.existsSync(i)&&(jr[p]={translation:require(i)})});Ln.default.init({resources:jr,fallbackLng:"en",lng:up.get("LANGUAGE"),debug:!1,interpolation:{escapeValue:!1}});var U=Ln.default;var Kr=v(require("axios")),Yr=v(require("fs")),dp=JSON.parse(Yr.default.readFileSync("./package.json","utf8")),$=async p=>{if(!(process.env.TELEMETRY_ENABLED===void 0||process.env.TELEMETRY_ENABLED==="true")||p==="/")return;let e={route:p,apiVersion:`${dp.version}`,timestamp:new Date},t=process.env.TELEMETRY_URL&&process.env.TELEMETRY_URL!==""?process.env.TELEMETRY_URL:"https://log.evolution-api.com/telemetry";Kr.default.post(t,e).then(()=>{}).catch(()=>{})};var yt=v(require("axios")),zr=v(require("dayjs")),Un=v(require("form-data")),Jn=v(require("jimp")),Wn=v(require("long")),tt=v(require("mime")),$n=v(require("path")),rs=require("stream"),Ae=class{constructor(i,e,t,s){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.cache=s;this.logger=new T("ChatwootService");this.pgClient=ve.getChatwootConnection()}async getProvider(i){let e=`${i.instanceName}:getProvider`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.waMonitor.waInstances[i.instanceName]?.findChatwoot();return t?(this.cache.set(e,t),t):(this.logger.warn("provider not found"),null)}async clientCw(i){let e=await this.getProvider(i);return e?(this.provider=e,new Qr.default({config:this.getClientCwConfig()})):(this.logger.error("provider not found"),null)}getClientCwConfig(){return{basePath:this.provider.url,with_credentials:!0,credentials:"include",token:this.provider.token,nameInbox:this.provider.nameInbox,mergeBrazilContacts:this.provider.mergeBrazilContacts}}getCache(){return this.cache}async create(i,e){await this.waMonitor.waInstances[i.instanceName].setChatwoot(e);let t="";if(e.autoCreate){this.logger.log("Auto create chatwoot instance");let s=this.configService.get("SERVER").URL;t=await this.initInstanceChatwoot(i,e.nameInbox??i.instanceName.split("-cwId-")[0],`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`,!0,e.number,e.organization,e.logo),this.logger.log(`Generated Inbox ID in service: ${JSON.stringify(t)}`)}return e.inboxId=t,e}async find(i){try{return await this.waMonitor.waInstances[i.instanceName].findChatwoot()}catch{return this.logger.error("chatwoot not found"),{enabled:null,url:""}}}async getContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;let s=await t.contact.getContactable({accountId:this.provider.accountId,id:e});return s||(this.logger.warn("contact not found"),null)}async initInstanceChatwoot(i,e,t,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c=await a.inboxes.list({accountId:this.provider.accountId}),u=c.payload.map(h=>h.name).includes(e),d;if(this.logger.log("Creating chatwoot inbox"),u){let h=c.payload.find(m=>m.name===e);if(!h)return this.logger.warn("inbox not found"),null;d=h.id}else{let h={type:"api",webhook_url:t},m=await a.inboxes.create({accountId:this.provider.accountId,data:{name:e,channel:h}});if(!m)return this.logger.warn("inbox not found"),null;d=m.id}if(this.logger.log(`Inbox created - inboxId: ${d}`),!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;this.logger.log("Creating chatwoot bot contact");let l=await this.findContact(i,"123456")||await this.createContact(i,"123456",d,!1,n||"EvolutionAPI",o||"https://evolution-api.com/files/evolution-api-favicon.png");if(!l)return this.logger.warn("contact not found"),null;let g=l.id||l.payload.contact.id;if(this.logger.log(`Contact created - contactId: ${g}`),s){this.logger.log("QR code enabled");let h={contact_id:g.toString(),inbox_id:d.toString()},m=await a.conversations.create({accountId:this.provider.accountId,data:h});if(!m)return this.logger.warn("conversation not found"),null;let f="init";if(r&&(f=`init:${r}`),!await a.messages.create({accountId:this.provider.accountId,conversationId:m.id,data:{content:f,message_type:"outgoing"}}))return this.logger.warn("conversation not found"),null;this.logger.log("Init message sent")}return d}async createContact(i,e,t,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c={};s?c={inbox_id:t,name:r||e,identifier:e,avatar_url:n}:(c={inbox_id:t,name:r||e,identifier:o,avatar_url:n},(o&&o.includes("@")||!o)&&(c.phone_number=`+${e}`));let u=await a.contacts.create({accountId:this.provider.accountId,data:c});if(!u)return this.logger.warn("contact not found"),null;let l=(await this.findContact(i,e))?.id;return await this.addLabelToContact(this.provider.nameInbox,l),u}async updateContact(i,e,t){let s=await this.clientCw(i);if(!s)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;try{return await s.contacts.update({accountId:this.provider.accountId,id:e,data:t})}catch{return null}}async addLabelToContact(i,e){try{if(!this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI)return!1;let r=(await this.pgClient.query("SELECT id, taggings_count FROM tags WHERE name = $1 LIMIT 1",[i]))?.rows[0],n=r?.id,o=r?.taggings_count||0;return n=(await this.pgClient.query(`INSERT INTO tags (name, taggings_count) 
                      VALUES ($1, $2) 
                      ON CONFLICT (name) 
                      DO UPDATE SET taggings_count = tags.taggings_count + 1 
                      RETURNING id`,[i,o+1]))?.rows[0]?.id,(await this.pgClient.query(`SELECT 1 FROM taggings 
                               WHERE tag_id = $1 AND taggable_type = 'Contact' AND taggable_id = $2 AND context = 'labels' LIMIT 1`,[n,e]))?.rowCount>0||await this.pgClient.query(`INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) 
                                VALUES ($1, 'Contact', $2, 'labels', NOW())`,[n,e]),!0}catch{return!1}}async findContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s,r=e.includes("@g.us");r?s=e:s=`+${e}`;let n;return r?n=await t.contacts.search({accountId:this.provider.accountId,q:s}):n=await(0,ns.request)(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/contacts/filter`,body:{payload:this.getFilterPayload(s)}}),!n&&n?.payload?.length===0?(this.logger.warn("contact not found"),null):r?n.payload.find(o=>o.identifier===s):n.payload.length>1?this.findContactInContactList(n.payload,s):n.payload[0]}async mergeBrazilianContacts(i){try{return await(0,ns.request)(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/actions/contact_merge`,body:{base_contact_id:i.find(t=>t.phone_number.length===14)?.id,mergee_contact_id:i.find(t=>t.phone_number.length===13)?.id}})}catch{return this.logger.error("Error merging contacts"),null}}findContactInContactList(i,e){let t=this.getNumbers(e),s=this.getSearchableFields();if(i.length===2&&this.getClientCwConfig().mergeBrazilContacts&&e.startsWith("+55")){let o=this.mergeBrazilianContacts(i);if(o)return o}let r=t.reduce((o,a)=>a.length>o.length?a:o,""),n=i.find(o=>o.phone_number===r);if(n)return n;for(let o of i)for(let a of s)if(o[a]&&t.includes(o[a]))return o;return null}getNumbers(i){let e=[];if(e.push(i),i.startsWith("+55")&&i.length===14){let t=i.slice(0,5)+i.slice(6);e.push(t)}else if(i.startsWith("+55")&&i.length===13){let t=i.slice(0,5)+"9"+i.slice(5);e.push(t)}return e}getSearchableFields(){return["phone_number"]}getFilterPayload(i){let e=[],t=this.getNumbers(i),s=this.getSearchableFields();return s.forEach((r,n)=>{t.forEach((o,a)=>{let c=s.length-1===n&&t.length-1===a?null:"OR";e.push({attribute_key:r,filter_operator:"equal_to",values:[o.replace("+","")],query_operator:c})})}),e}async createConversation(i,e){try{this.logger.verbose("--- Start createConversation ---"),this.logger.verbose(`Instance: ${JSON.stringify(i)}`);let t=await this.clientCw(i);if(!t)return this.logger.warn(`Client not found for instance: ${JSON.stringify(i)}`),null;let s=`${i.instanceName}:createConversation-${e.key.remoteJid}`;if(this.logger.verbose(`Cache key: ${s}`),await this.cache.has(s)){this.logger.verbose(`Cache hit for key: ${s}`);let m=await this.cache.get(s);this.logger.verbose(`Cached conversation ID: ${m}`);let f;try{f=await t.conversations.get({accountId:this.provider.accountId,conversationId:m}),this.logger.verbose(`Conversation exists: ${JSON.stringify(f)}`)}catch(b){this.logger.error(`Error getting conversation: ${b}`),f=!1}return f?m:(this.logger.verbose("Conversation does not exist, re-calling createConversation"),this.cache.delete(s),await this.createConversation(i,e))}let r=e.key.remoteJid.includes("@g.us");this.logger.verbose(`Is group: ${r}`);let n=r?e.key.remoteJid:e.key.remoteJid.split("@")[0];this.logger.verbose(`Chat ID: ${n}`);let o;o=e.key.fromMe?n:e.pushName,this.logger.verbose(`Name contact: ${o}`);let a=await this.getInbox(i);if(!a)return this.logger.warn(`Inbox not found for instance: ${JSON.stringify(i)}`),null;if(r){this.logger.verbose("Processing group conversation");let m=await this.waMonitor.waInstances[i.instanceName].client.groupMetadata(n);this.logger.verbose(`Group metadata: ${JSON.stringify(m)}`),o=`${m.subject} (GROUP)`;let f=await this.waMonitor.waInstances[i.instanceName].profilePicture(e.key.participant.split("@")[0]);this.logger.verbose(`Participant profile picture URL: ${JSON.stringify(f)}`);let b=await this.findContact(i,e.key.participant.split("@")[0]);this.logger.verbose(`Found participant: ${JSON.stringify(b)}`),b?(!b.name||b.name===n)&&await this.updateContact(i,b.id,{name:e.pushName,avatar_url:f.profilePictureUrl||null}):await this.createContact(i,e.key.participant.split("@")[0],a.id,!1,e.pushName,f.profilePictureUrl||null,e.key.participant)}let c=await this.waMonitor.waInstances[i.instanceName].profilePicture(n);this.logger.verbose(`Contact profile picture URL: ${JSON.stringify(c)}`);let u=await this.findContact(i,n);if(this.logger.verbose(`Found contact: ${JSON.stringify(u)}`),u){if(!e.key.fromMe){let m=c?.profilePictureUrl?.split("#")[0].split("?")[0].split("/").pop()||"",f=u?.thumbnail?.split("#")[0].split("?")[0].split("/").pop()||"",b=m!==f,S=!u.name||u.name===n||(`+${n}`.startsWith("+55")?this.getNumbers(`+${n}`).some(w=>u.name===w||u.name===w.substring(3)||u.name===w.substring(1)):!1);this.logger.verbose(`Picture needs update: ${b}`),this.logger.verbose(`Name needs update: ${S}`),(b||S)&&(u=await this.updateContact(i,u.id,{...S&&{name:o},...m===""&&{avatar:null},...b&&{avatar_url:c?.profilePictureUrl}}))}}else{let m=e.key.remoteJid;u=await this.createContact(i,n,a.id,r,o,c.profilePictureUrl||null,m)}if(!u)return this.logger.warn("Contact not created or found"),null;let d=u?.payload?.id||u?.payload?.contact?.id||u?.id;this.logger.verbose(`Contact ID: ${d}`);let l=await t.contacts.listConversations({accountId:this.provider.accountId,id:d});if(this.logger.verbose(`Contact conversations: ${JSON.stringify(l)}`),!l||!l.payload)return this.logger.error("No conversations found or payload is undefined"),null;if(l.payload.length){let m;if(this.provider.reopenConversation?(m=l.payload.find(f=>f.inbox_id==a.id),this.logger.verbose(`Found conversation in reopenConversation mode: ${JSON.stringify(m)}`),this.provider.conversationPending&&m&&await t.conversations.toggleStatus({accountId:this.provider.accountId,conversationId:m.id,data:{status:"pending"}})):(m=l.payload.find(f=>f.status!=="resolved"&&f.inbox_id==a.id),this.logger.verbose(`Found conversation: ${JSON.stringify(m)}`)),m)return this.logger.verbose(`Returning existing conversation ID: ${m.id}`),this.cache.set(s,m.id),m.id}let g={contact_id:d.toString(),inbox_id:a.id.toString()};this.provider.conversationPending&&(g.status="pending");let h=await t.conversations.create({accountId:this.provider.accountId,data:g});return h?(this.logger.verbose(`New conversation created with ID: ${h.id}`),this.cache.set(s,h.id),h.id):(this.logger.warn("Conversation not created or found"),null)}catch(t){this.logger.error(`Error in createConversation: ${t}`)}}async getInbox(i){let e=`${i.instanceName}:getInbox`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await t.inboxes.list({accountId:this.provider.accountId});if(!s)return this.logger.warn("inbox not found"),null;let r=s.payload.find(n=>n.name===this.getClientCwConfig().nameInbox);return r?(this.cache.set(e,r),r):(this.logger.warn("inbox not found"),null)}async createMessage(i,e,t,s,r,n,o,a,c){let u=await this.clientCw(i);if(!u)return this.logger.warn("client not found"),null;let d=await this.getReplyToIds(o,i),l=c?.chatwootMessageId||null,g=await u.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:t,message_type:s,attachments:n,private:r||!1,source_id:a,content_attributes:{...d},source_reply_id:l?l.toString():null}});return g||(this.logger.warn("message not found"),null)}async getOpenConversationByContact(i,e,t){let s=await this.clientCw(i);return s?(await s.contacts.listConversations({accountId:this.provider.accountId,id:t.id})).payload.find(n=>n.inbox_id===e.id&&n.status==="open")||void 0:(this.logger.warn("client not found"),null)}async createBotMessage(i,e,t,s){let r=await this.clientCw(i);if(!r)return this.logger.warn("client not found"),null;let n=await this.findContact(i,"123456");if(!n)return this.logger.warn("contact not found"),null;let o=await this.getInbox(i);if(!o)return this.logger.warn("inbox not found"),null;let a=await this.getOpenConversationByContact(i,o,n);if(!a){this.logger.warn("conversation not found");return}let c=await r.messages.create({accountId:this.provider.accountId,conversationId:a.id,data:{content:e,message_type:t,attachments:s}});return c||(this.logger.warn("message not found"),null)}async sendData(i,e,t,s,r,n,o,a,c){if(a&&this.isImportHistoryAvailable()){let g=await ee.getExistingSourceIds([a]);if(g&&g.size>0)return this.logger.warn("Message already saved on chatwoot"),null}let u=new Un.default;r&&u.append("content",r),u.append("message_type",s),u.append("attachments[]",e,{filename:t});let d=c?.chatwootMessageId||null;if(o&&n){let g=await this.getReplyToIds(o,n);if(g.in_reply_to||g.in_reply_to_external_id){let h=JSON.stringify({...g});u.append("content_attributes",h)}}d&&u.append("source_reply_id",d.toString()),a&&u.append("source_id",a);let l={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${i}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:g}=await yt.default.request(l);return g}catch(g){this.logger.error(g)}}async createBotQr(i,e,t,s,r){if(!await this.clientCw(i))return this.logger.warn("client not found"),null;if(!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;let o=await this.findContact(i,"123456");if(!o)return this.logger.warn("contact not found"),null;let a=await this.getInbox(i);if(!a)return this.logger.warn("inbox not found"),null;let c=await this.getOpenConversationByContact(i,a,o);if(!c){this.logger.warn("conversation not found");return}let u=new Un.default;e&&u.append("content",e),u.append("message_type",t),s&&r&&u.append("attachments[]",s,{filename:r});let d={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${c.id}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:l}=await yt.default.request(d);return l}catch(l){this.logger.error(l)}}async sendAttachment(i,e,t,s,r){try{let n=$n.default.parse(decodeURIComponent(t)),o=tt.default.getType(n?.ext)||"",a=n?.name+n?.ext;if(!o){let l=t.split("/");a=decodeURIComponent(l[l.length-1]),o=(await yt.default.get(t,{responseType:"arraybuffer"})).headers["content-type"]}let c="document";switch(o.split("/")[0]){case"image":c="image";break;case"video":c="video";break;case"audio":c="audio";break;default:c="document";break}if(c==="audio"){let l={number:e,audio:t,delay:1200,quoted:r?.quoted};return $("/message/sendWhatsAppAudio"),await i?.audioWhatsapp(l,!0)}c==="image"&&n&&n?.ext===".gif"&&(c="document");let u={number:e,mediatype:c,fileName:a,media:t,delay:1200,quoted:r?.quoted};return $("/message/sendMedia"),s&&(u.caption=s),await i?.mediaMessage(u,null,!0)}catch(n){this.logger.error(n)}}async onSendMessageError(i,e,t){this.logger.verbose(`onSendMessageError ${JSON.stringify(t)}`);let s=await this.clientCw(i);if(s){if(t&&t?.status===400&&t?.message[0]?.exists===!1){s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:`${U.t("cw.message.numbernotinwhatsapp")}`,message_type:"outgoing",private:!0}});return}s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:U.t("cw.message.notsent",{error:t?`_${t.toString()}_`:""}),message_type:"outgoing",private:!0}})}}async receiveWebhook(i,e){try{if(await new Promise(c=>setTimeout(c,500)),!await this.clientCw(i))return this.logger.warn("client not found"),null;if(this.provider.reopenConversation===!1&&e.event==="conversation_status_changed"&&e.status==="resolved"&&e.meta?.sender?.identifier){let c=`${i.instanceName}:createConversation-${e.meta.sender.identifier}`;this.cache.delete(c)}if(!e?.conversation||e.private||e.event==="message_updated"&&!e.content_attributes?.deleted)return{message:"bot"};let s=e.conversation.meta.sender?.identifier||e.conversation.meta.sender?.phone_number.replace("+",""),r=e.content?e.content.replaceAll(/(?<!\*)\*((?!\s)([^\n*]+?)(?<!\s))\*(?!\*)/g,"_$1_").replaceAll(/\*{2}((?!\s)([^\n*]+?)(?<!\s))\*{2}/g,"*$1*").replaceAll(/~{2}((?!\s)([^\n*]+?)(?<!\s))~{2}/g,"~$1~").replaceAll(/(?<!`)`((?!\s)([^`*]+?)(?<!\s))`(?!`)/g,"```$1```"):e.content,n=e?.conversation?.messages[0]?.sender?.available_name||e?.sender?.name,o=this.waMonitor.waInstances[i.instanceName];if(e.event==="message_updated"&&e.content_attributes?.deleted){let c=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:e.id,instanceId:i.instanceId}});if(c){let u=c.key;await o?.client.sendMessage(u.remoteJid,{delete:u}),await this.prismaRepository.message.deleteMany({where:{instanceId:i.instanceId,chatwootMessageId:e.id}})}return{message:"bot"}}let a=this.configService.get("CHATWOOT").BOT_CONTACT;if(s==="123456"&&e.message_type==="outgoing"){let c=r.replace("/","");if(a&&(c.includes("init")||c.includes("iniciar")))if(o?.connectionStatus?.state!=="open"){let d=c.split(":")[1];await o.connectToWhatsapp(d)}else await this.createBotMessage(i,U.t("cw.inbox.alreadyConnected",{inboxName:e.inbox.name}),"incoming");if(c==="clearcache"&&(o.clearCacheChatwoot(),await this.createBotMessage(i,U.t("cw.inbox.clearCache",{inboxName:e.inbox.name}),"incoming")),c==="status"){let u=o?.connectionStatus?.state;u||await this.createBotMessage(i,U.t("cw.inbox.notFound",{inboxName:e.inbox.name}),"incoming"),u&&await this.createBotMessage(i,U.t("cw.inbox.status",{inboxName:e.inbox.name,state:u}),"incoming")}if(a&&(c==="disconnect"||c==="desconectar")){let u=U.t("cw.inbox.disconnect",{inboxName:e.inbox.name});await this.createBotMessage(i,u,"incoming"),await o?.client?.logout("Log out instance: "+i.instanceName),await o?.client?.ws?.close()}}if(e.message_type==="outgoing"&&e?.conversation?.messages?.length&&s!=="123456"){if(e?.conversation?.messages[0]?.source_id?.substring(0,5)==="WAID:")return{message:"bot"};if(!o&&e.conversation?.id)return this.onSendMessageError(i,e.conversation?.id,"Instance not found"),{message:"bot"};let c;if(n==null)c=r;else{let d=this.provider.signDelimiter?this.provider.signDelimiter.replaceAll("\\n",`
`):`
`,l=this.provider.signMsg?[`*${n}:*`]:[];l.push(r),c=l.join(d)}for(let d of e.conversation.messages)if(d.attachments&&d.attachments.length>0)for(let l of d.attachments){r||(c=null);let g={quoted:await this.getQuotedMessage(e,i)},h=await this.sendAttachment(o,s,l.data_url,c,g);!h&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id),await this.updateChatwootMessageId({...h,owner:i.instanceName},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}else{let l={number:s,text:c,delay:1200,quoted:await this.getQuotedMessage(e,i)};$("/message/sendText");let g;try{if(g=await o?.textMessage(l,!0),!g)throw new Error("Message not sent");Wn.default.isLong(g?.messageTimestamp)&&(g.messageTimestamp=g.messageTimestamp?.toNumber()),await this.updateChatwootMessageId({...g,instanceId:i.instanceId},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}catch(h){throw!g&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id,h),h}}if(this.configService.get("CHATWOOT").MESSAGE_READ){let d=await this.prismaRepository.message.findFirst({where:{key:{path:["fromMe"],equals:!1},instanceId:i.instanceId}});if(d&&!d.chatwootIsRead){let l=d.key;o?.markMessageAsRead({readMessages:[{id:l.id,fromMe:l.fromMe,remoteJid:l.remoteJid}]});let g={chatwootMessageId:d.chatwootMessageId,chatwootConversationId:d.chatwootConversationId,chatwootInboxId:d.chatwootInboxId,chatwootContactInboxSourceId:d.chatwootContactInboxSourceId,chatwootIsRead:!0};await this.prismaRepository.message.updateMany({where:{instanceId:i.instanceId,key:{path:["id"],equals:l.id}},data:g})}}}if(e.message_type==="template"&&e.event==="message_created"){let c={number:s,text:e.content.replace(/\\\r\n|\\\n|\n/g,`
`),delay:1200};$("/message/sendText"),await o?.textMessage(c)}return{message:"bot"}}catch(t){return this.logger.error(t),{message:"bot"}}}async updateChatwootMessageId(i,e,t){let s=i.key;!e.messageId||!s?.id||(await this.prismaRepository.message.updateMany({where:{key:{path:["id"],equals:s.id},instanceId:t.instanceId},data:{chatwootMessageId:e.messageId,chatwootConversationId:e.conversationId,chatwootInboxId:e.inboxId,chatwootContactInboxSourceId:e.contactInboxSourceId,chatwootIsRead:e.isRead}}),this.isImportHistoryAvailable()&&ee.updateMessageSourceID(e.messageId,s.id))}async getMessageByKeyId(i,e){return await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:e},instanceId:i.instanceId}})||null}async getReplyToIds(i,e){let t=null,s=null;if(i&&(s=i.message?.extendedTextMessage?.contextInfo?.stanzaId??i.contextInfo?.stanzaId,s)){let r=await this.getMessageByKeyId(e,s);r?.chatwootMessageId&&(t=r.chatwootMessageId)}return{in_reply_to:t,in_reply_to_external_id:s}}async getQuotedMessage(i,e){if(i?.content_attributes?.in_reply_to){let t=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:i?.content_attributes?.in_reply_to,instanceId:e.instanceId}}),s=t?.key;if(t&&s?.id)return{key:t.key,message:t.message}}return null}isMediaMessage(i){let e=["imageMessage","documentMessage","documentWithCaptionMessage","audioMessage","videoMessage","stickerMessage","viewOnceMessageV2"];return Object.keys(i).some(r=>e.includes(r))}getAdsMessage(i){return{title:i.extendedTextMessage?.contextInfo?.externalAdReply?.title||i.contextInfo?.externalAdReply?.title,body:i.extendedTextMessage?.contextInfo?.externalAdReply?.body||i.contextInfo?.externalAdReply?.body,thumbnailUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.thumbnailUrl||i.contextInfo?.externalAdReply?.thumbnailUrl,sourceUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.sourceUrl||i.contextInfo?.externalAdReply?.sourceUrl}}getReactionMessage(i){return i?.reactionMessage}getTypeMessage(i){return{conversation:i.conversation,imageMessage:i.imageMessage?.caption,videoMessage:i.videoMessage?.caption,extendedTextMessage:i.extendedTextMessage?.text,messageContextInfo:i.messageContextInfo?.stanzaId,stickerMessage:void 0,documentMessage:i.documentMessage?.caption,documentWithCaptionMessage:i.documentWithCaptionMessage?.message?.documentMessage?.caption,audioMessage:i.audioMessage?.caption,contactMessage:i.contactMessage?.vcard,contactsArrayMessage:i.contactsArrayMessage,locationMessage:i.locationMessage,liveLocationMessage:i.liveLocationMessage,listMessage:i.listMessage,listResponseMessage:i.listResponseMessage,viewOnceMessageV2:i?.message?.viewOnceMessageV2?.message?.imageMessage?.url||i?.message?.viewOnceMessageV2?.message?.videoMessage?.url||i?.message?.viewOnceMessageV2?.message?.audioMessage?.url}}getMessageContent(i){let e=Object.keys(i).find(s=>i[s]!==void 0),t=e?i[e]:void 0;if(t&&typeof t=="string"&&t.includes("externalAdReplyBody|")&&(t=t.split("externalAdReplyBody|").filter(Boolean).join("")),e==="locationMessage"||e==="liveLocationMessage"){let s=t.degreesLatitude,r=t.degreesLongitude,n=t?.name,o=t?.address;return`*${U.t("cw.locationMessage.location")}:*

_${U.t("cw.locationMessage.latitude")}:_ ${s} 
_${U.t("cw.locationMessage.longitude")}:_ ${r} 
`+(n?`_${U.t("cw.locationMessage.locationName")}:_ ${n}
`:"")+(o?`_${U.t("cw.locationMessage.locationAddress")}:_ ${o} 
`:"")+`_${U.t("cw.locationMessage.locationUrl")}:_ https://www.google.com/maps/search/?api=1&query=${s},${r}`}if(e==="contactMessage"){let s=t.split(`
`),r={};s.forEach(a=>{let[c,u]=a.split(":");c&&u&&(r[c]=u)});let n=`*${U.t("cw.contactMessage.contact")}:*

_${U.t("cw.contactMessage.name")}:_ ${r.FN}`,o=1;return Object.keys(r).forEach(a=>{if(a.startsWith("item")&&a.includes("TEL")){let c=r[a];n+=`
_${U.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}else if(a.includes("TEL")){let c=r[a];n+=`
_${U.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}}),n}if(e==="contactsArrayMessage")return t.contacts.map(n=>{let o=n.vcard.split(`
`),a={};o.forEach(d=>{let[l,g]=d.split(":");l&&g&&(a[l]=g)});let c=`*${U.t("cw.contactMessage.contact")}:*

_${U.t("cw.contactMessage.name")}:_ ${n.displayName}`,u=1;return Object.keys(a).forEach(d=>{if(d.startsWith("item")&&d.includes("TEL")){let l=a[d];c+=`
_${U.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}else if(d.includes("TEL")){let l=a[d];c+=`
_${U.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}}),c}).join(`

`);if(e==="listMessage"){let s=t?.title||"Unknown",r=t?.description||"Unknown",n=t?.footerText||"Unknown",o=`*List Menu:*

_Title_: `+s+`
_Description_: `+r+`
_Footer_: `+n;return t.sections&&t.sections.length>0?t.sections.forEach((a,c)=>{o+=`

*Section `+(c+1)+":* "+a.title||`Unknown
`,a.rows&&a.rows.length>0?a.rows.forEach((u,d)=>{o+=`
*Line `+(d+1)+`:*
`,o+="_\u25AA\uFE0F Title:_ "+(u.title||"Unknown")+`
`,o+="_\u25AA\uFE0F Description:_ "+(u.description||"Unknown")+`
`,o+="_\u25AA\uFE0F ID:_ "+(u.rowId||"Unknown")+`
`}):o+=`
No lines found in this section.
`}):o+=`
No sections found.
`,o}if(e==="listResponseMessage"){let s=t?.title||"Unknown",r=t?.description||"Unknown",n=t?.singleSelectReply?.selectedRowId||"Unknown";return`*List Response:*

_Title_: `+s+`
_Description_: `+r+`
_ID_: `+n}return t}getConversationMessage(i){let e=this.getTypeMessage(i);return this.getMessageContent(e)}async eventWhatsapp(i,e,t){try{let s=this.waMonitor.waInstances[e.instanceName];if(!s)return this.logger.warn("wa instance not found"),null;let r=await this.clientCw(e);if(!r)return this.logger.warn("client not found"),null;if(this.provider?.ignoreJids&&this.provider?.ignoreJids.length>0){let n=this.provider?.ignoreJids,o=!1,a=!1;if(n.includes("@g.us")&&(o=!0),n.includes("@s.whatsapp.net")&&(a=!0),o&&t?.key?.remoteJid.endsWith("@g.us")){this.logger.warn("Ignoring message from group: "+t?.key?.remoteJid);return}if(a&&t?.key?.remoteJid.endsWith("@s.whatsapp.net")){this.logger.warn("Ignoring message from contact: "+t?.key?.remoteJid);return}if(n.includes(t?.key?.remoteJid)){this.logger.warn("Ignoring message from jid: "+t?.key?.remoteJid);return}}if(i==="messages.upsert"||i==="send.message"){if(t.key.remoteJid==="status@broadcast")return;t.message?.ephemeralMessage?.message&&(t.message={...t.message?.ephemeralMessage?.message});let n=await this.getConversationMessage(t.message),o=n&&n.replaceAll(/\*((?!\s)([^\n*]+?)(?<!\s))\*/g,"**$1**").replaceAll(/_((?!\s)([^\n_]+?)(?<!\s))_/g,"*$1*").replaceAll(/~((?!\s)([^\n~]+?)(?<!\s))~/g,"~~$1~~");if(o&&o.includes("Por favor, classifique esta conversa, http"))return;let a=t.contextInfo?.stanzaId||t.message?.contextInfo?.stanzaId,c=null;a&&(c=await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:a},chatwootMessageId:{not:null}}}));let u=this.isMediaMessage(t.message),d=this.getAdsMessage(t),l=this.getReactionMessage(t.message);if(!o&&!u&&!l){this.logger.warn("no body message found");return}let g=await this.createConversation(e,t);if(!g){this.logger.warn("conversation not found");return}let h=t.key.fromMe?"outgoing":"incoming";if(u){let f=await s?.getBase64FromMediaMessage({message:{...t}}),b,S=t?.message[t?.messageType],w=S?.fileName||S?.filename||S?.message?.documentMessage?.fileName;if(w){let C=$n.default.parse(w);C.name&&C.ext&&(b=`${C.name}-${Math.floor(Math.random()*90+10)}${C.ext}`)}b||(b=`${Math.random().toString(36).substring(7)}.${tt.default.getExtension(f.mimetype)||""}`);let I=Buffer.from(f.base64,"base64"),E=new rs.Readable;if(E._read=()=>{},E.push(I),E.push(null),t.key.remoteJid.includes("@g.us")){let C=t.pushName,O;t.key.fromMe?O=`${o}`:O=`**${C}:**

${o}`;let N=await this.sendData(g,E,b,h,O,e,t,"WAID:"+t.key.id,c);if(!N){this.logger.warn("message not sent");return}return N}else{let C=await this.sendData(g,E,b,h,o,e,t,"WAID:"+t.key.id,c);if(!C){this.logger.warn("message not sent");return}return C}}if(l){if(l.text&&!await this.createMessage(e,g,l.text,h,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:l.key.id}}}},"WAID:"+t.key.id,c)){this.logger.warn("message not sent");return}return}if(d&&d.title||d.body||d.thumbnailUrl){let f=await yt.default.get(d.thumbnailUrl,{responseType:"arraybuffer"}),b=tt.default.getExtension(f.headers["content-type"]),S=b&&tt.default.getType(b);if(!S){this.logger.warn("mimetype of Ads message not found");return}let I=`${Math.random().toString(36).substring(7)}.${tt.default.getExtension(S)}`,E=Buffer.from(f.data,"binary"),C=await Jn.default.read(E);await C.cover(320,180);let O=await C.getBufferAsync(Jn.default.MIME_PNG),N=new rs.Readable;N._read=()=>{},N.push(O),N.push(null);let _=(V,G)=>V?V.length>G?V.substring(0,G)+"...":V:"",L=_(d.title,40),q=_(d?.body,75),H=await this.sendData(g,N,I,h,`${o}


**${L}**
${q}
${d.sourceUrl}`,e,t,"WAID:"+t.key.id);if(!H){this.logger.warn("message not sent");return}return H}if(t.key.remoteJid.includes("@g.us")){let f=t.pushName,b;t.key.fromMe?b=`${o}`:b=`**${f}**

${o}`;let S=await this.createMessage(e,g,b,h,!1,[],t,"WAID:"+t.key.id,c);if(!S){this.logger.warn("message not sent");return}return S}else{let f=await this.createMessage(e,g,o,h,!1,[],t,"WAID:"+t.key.id,c);if(!f){this.logger.warn("message not sent");return}return f}}if(i==="messages.delete"&&this.configService.get("CHATWOOT").MESSAGE_DELETE===!0){if(!t?.key?.id){this.logger.warn("message id not found");return}let o=await this.getMessageByKeyId(e,t.key.id);if(o?.chatwootMessageId&&o?.chatwootConversationId)return await this.prismaRepository.message.deleteMany({where:{key:{path:["id"],equals:t.key.id},instanceId:e.instanceId}}),await r.messages.delete({accountId:this.provider.accountId,conversationId:o.chatwootConversationId,messageId:o.chatwootMessageId})}if(i==="messages.edit"){let n=`${t?.editedMessage?.conversation||t?.editedMessage?.extendedTextMessage?.text}

_\`${U.t("cw.message.edited")}.\`_`,o=await this.getMessageByKeyId(e,t?.key?.id),a=o.key,c=a?.fromMe?"outgoing":"incoming";if(o&&o.chatwootConversationId&&!await this.createMessage(e,o.chatwootConversationId,n,c,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:a.id}}}},"WAID:"+t.key.id,null)){this.logger.warn("edited message not sent");return}return}if(i==="messages.read"){if(!t?.key?.id||!t?.key?.remoteJid){this.logger.warn("message id not found");return}let n=await this.getMessageByKeyId(e,t.key.id),o=n?.chatwootConversationId,a=n?.chatwootContactInboxSourceId;if(o){let c=a,u=await this.getInbox(e);if(!c&&u&&(c=(await r.conversations.get({accountId:this.provider.accountId,conversationId:o})).last_non_activity_message?.conversation?.contact_inbox?.source_id),c&&u?.inbox_identifier){let d=`/public/api/v1/inboxes/${u.inbox_identifier}/contacts/${c}/conversations/${o}/update_last_seen`;(0,ns.request)(this.getClientCwConfig(),{method:"POST",url:d})}}return}if(i==="status.instance"){let n=t,o=await this.getInbox(e);if(!o){this.logger.warn("inbox not found");return}let a=U.t("cw.inbox.status",{inboxName:o.name,state:n.status});await this.createBotMessage(e,a,"incoming")}if(i==="connection.update"&&t.status==="open"&&this.waMonitor.waInstances[e.instanceName].qrCode.count>0){let n=U.t("cw.inbox.connected");await this.createBotMessage(e,n,"incoming"),this.waMonitor.waInstances[e.instanceName].qrCode.count=0,ee.clearAll(e)}if(i==="qrcode.updated")if(t.statusCode===500){let n=`\u{1F6A8} ${U.t("qrlimitreached")}`;return await this.createBotMessage(e,n,"incoming")}else{let n=Buffer.from(t?.qrcode.base64.replace("data:image/png;base64,",""),"base64"),o=new rs.Readable;o._read=()=>{},o.push(n),o.push(null),await this.createBotQr(e,U.t("qrgeneratedsuccesfully"),"incoming",o,`${e.instanceName}.png`);let a=`\u26A1\uFE0F${U.t("qrgeneratedsuccesfully")}

${U.t("scanqr")}`;t?.qrcode?.pairingCode&&(a=a+`

*Pairing Code:* ${t.qrcode.pairingCode.substring(0,4)}-${t.qrcode.pairingCode.substring(4,8)}`),await this.createBotMessage(e,a,"incoming")}}catch(s){this.logger.error(s)}}getNumberFromRemoteJid(i){return i.replace(/:\d+/,"").split("@")[0]}startImportHistoryMessages(i){this.isImportHistoryAvailable()&&this.createBotMessage(i,U.t("cw.import.startImport"),"incoming")}isImportHistoryAvailable(){let i=this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return i&&i!=="postgres://user:password@hostname:port/dbname"}addHistoryMessages(i,e){this.isImportHistoryAvailable()&&ee.addHistoryMessages(i,e)}addHistoryContacts(i,e){if(this.isImportHistoryAvailable())return ee.addHistoryContacts(i,e)}async importHistoryMessages(i){if(!this.isImportHistoryAvailable())return;this.createBotMessage(i,U.t("cw.import.importingMessages"),"incoming");let e=await ee.importHistoryMessages(i,this,await this.getInbox(i),this.provider);this.updateContactAvatarInRecentConversations(i);let t=Number.isInteger(e)?U.t("cw.import.messagesImported",{totalMessagesImported:e}):U.t("cw.import.messagesException");return this.createBotMessage(i,t,"incoming"),e}async updateContactAvatarInRecentConversations(i,e=100){try{if(!this.isImportHistoryAvailable())return;let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await this.getInbox(i);if(!s)return this.logger.warn("inbox not found"),null;let r=await ee.getContactsOrderByRecentConversations(s,this.provider,e),n=r.map(a=>a.identifier).filter(a=>a!==null),o=(await this.prismaRepository.contact.findMany({where:{instanceId:i.instanceId,id:{in:n},profilePicUrl:{not:null}}})).reduce((a,c)=>a.set(c.id,c),new Map);r.forEach(async a=>{o.has(a.identifier)&&t.contacts.update({accountId:this.provider.accountId,id:a.id,data:{avatar_url:o.get(a.identifier).profilePictureUrl||null}})})}catch(t){this.logger.error(`Error on update avatar in recent conversations: ${t.toString()}`)}}async syncLostMessages(i,e,t){try{if(!this.isImportHistoryAvailable()||!this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE)return;let s=await this.getInbox(i),r=`select * from messages m
      where account_id = ${e.accountId}
      and inbox_id = ${s.id}
      and created_at >= now() - interval '6h'
      order by created_at desc`,o=((await this.pgClient.query(r))?.rows).filter(l=>!!l.source_id).map(l=>l.source_id.replace("WAID:","")),c=(await this.prismaRepository.message.findMany({where:{Instance:{name:i.instanceName},messageTimestamp:{gte:(0,zr.default)().subtract(6,"hours").unix()},AND:o.map(l=>({key:{path:["id"],not:l}}))}})).filter(l=>!ee.isIgnorePhoneNumber(l.key?.remoteJid)),u=[];for(let l of c)!l.message||!l.key||!l.messageTimestamp||(Wn.default.isLong(l?.messageTimestamp)&&(l.messageTimestamp=l.messageTimestamp?.toNumber()),u.push(t(l)));this.addHistoryMessages(i,u.filter(l=>!ee.isIgnorePhoneNumber(l.key?.remoteJid))),await ee.importHistoryMessages(i,this,s,this.provider),this.waMonitor.waInstances[i.instanceName].clearCacheChatwoot()}catch{return}}};var ft=v(require("axios")),Xr=require("stream"),st=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new T("DifyService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"dify"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async sendMessageToBot(i,e,t,s,r,n,o){try{let a=s.apiUrl;if(s.botType==="chatBot"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"blocking",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.query=g[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ft.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===r?l:e.sessionId}})}if(s.botType==="textGenerator"){a+="/completion-messages";let c={inputs:{query:o,pushName:n,remoteJid:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.inputs.query=g[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ft.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===r?l:e.sessionId}})}if(s.botType==="agent"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"streaming",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let m=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:m[1].split("?")[0]}],c.query=m[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ft.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`},responseType:"stream"}),d,l="",g=u.data,h=new Xr.Readable().wrap(g);h.on("data",m=>{let f=m.toString().replace(/data:\s*/g,"");if(!(f.trim()===""||!f.startsWith("{")))try{let b=f.split(`
`).filter(S=>S.trim()!=="");for(let S of b)if(S.trim().startsWith("{")){let w=JSON.parse(S);w?.event==="agent_message"&&(console.log("event:",w),d=d??w?.conversation_id,l+=w?.answer)}}catch(b){console.error("Error parsing stream data:",b)}}),h.on("end",async()=>{i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let m=l;await this.sendMessageWhatsApp(i,r,m,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:d}})}),h.on("error",m=>{console.error("Error reading stream:",m)});return}if(s.botType==="workflow"){a+="/workflows/run";let c={inputs:{query:o,remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",user:r};if(this.isImageMessage(o)){let l=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:l[1].split("?")[0]}],c.inputs.query=l[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ft.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.data.outputs.text;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}});return}}catch(a){this.logger.error(a.response?.data||a);return}}async sendMessageWhatsApp(i,e,t,s){let r=/(!?)\[(.*?)\]\((.*?)\)/g,n="",o=0,a,c=h=>{let m=h.split(".").pop()?.toLowerCase(),f=["jpg","jpeg","png","gif","bmp","webp"],b=["mp3","wav","aac","ogg"],S=["mp4","avi","mkv","mov"],w=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return f.includes(m||"")?"image":b.includes(m||"")?"audio":S.includes(m||"")?"video":w.includes(m||"")?"document":null};for(;(a=r.exec(t))!==null;){let[h,m,f,b]=a,S=c(b),w=t.slice(o,a.index);if(w&&(n+=w),S){let I=s.splitMessages??!1,E=s.timePerChar??0,C=1e3,O=2e4;if(n.trim())if(I){let N=n.trim().split(`

`);for(let _=0;_<N.length;_++){let L=N[_],q=Math.min(Math.max(L.length*E,C),O);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(H=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:L},!1),H()},q)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1),n="";S==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:b,caption:f}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:S,media:b,caption:f},null,!1)}else n+=`[${f}](${b})`;o=r.lastIndex}if(o<t.length){let h=t.slice(o);h.trim()&&(n+=h)}let u=s.splitMessages??!1,d=s.timePerChar??0,l=1e3,g=2e4;if(n.trim())if(u){let h=n.trim().split(`

`);for(let m=0;m<h.length;m++){let f=h[m],b=Math.min(Math.max(f.length*d,l),g);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(S=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:f},!1),S()},b)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1);$("/message/sendText")}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session),await this.sendMessageToBot(i,r,s,t,e,o,n)}async processDify(i,e,t,s,r,n,o){if(!(s&&s.status!=="opened")){if(s&&r.expire&&r.expire>0){let a=Date.now(),c=new Date(s.updatedAt).getTime(),u=a-c;if(Math.floor(u/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}await this.sendMessageToBot(i,s,r,t,e,o,n)}}};var os=v(require("axios")),Zr=require("baileys"),eo=v(require("form-data")),wt=v(require("openai")),to=v(require("pino")),it=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new T("OpenaiService")}async sendMessageToBot(i,e,t,s){let n=e.systemMessages.map(m=>({role:"system",content:m})),a=e.assistantMessages.map(m=>({role:"assistant",content:m})),u=e.userMessages.map(m=>({role:"user",content:m})),d={role:"user",content:[{type:"text",text:s}]};if(this.isImageMessage(s)){let m=s.split("|"),f=m[1].split("?")[0];d.content=[{type:"text",text:m[2]||s},{type:"image_url",image_url:{url:f}}]}let l=[...n,...a,...u,d];i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let g=await this.client.chat.completions.create({model:e.model,messages:l,max_tokens:e.maxTokens});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),g.choices[0].message.content}async sendMessageToAssistant(i,e,t,s,r,n,o){let a={role:r?"assistant":"user",content:[{type:"text",text:n}]};if(this.isImageMessage(n)){let l=n.split("|"),g=l[1].split("?")[0];a.content=[{type:"text",text:l[2]||n},{type:"image_url",image_url:{url:g}}]}if(await this.client.beta.threads.messages.create(o,a),r){$("/message/sendText");return}let c=await this.client.beta.threads.runs.create(o,{assistant_id:e.assistantId});i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let u=await this.getAIResponse(o,c.id,e.functionUrl,t,s);return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),u?.data[0].content[0].text.value}async sendMessageWhatsapp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,C=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*C,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}})}async createAssistantNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!t)throw new Error("Openai Creds not found");try{this.client=new wt.default({apiKey:t.apiKey});let s=(await this.client.beta.threads.create({})).id,r=null;return s&&(r=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:s,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}})),{session:r}}catch(s){this.logger.error(s);return}}async initAssistantNewSession(i,e,t,s,r,n,o,a){let c=await this.createAssistantNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:r.openaiCredsId,botId:r.id});c.session&&(o=c.session);let u=await this.sendMessageToAssistant(i,r,e,t,s,a,o.sessionId);await this.sendMessageWhatsapp(i,o,e,n,u)}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async getAIResponse(i,e,t,s,r){let n=await this.client.beta.threads.runs.retrieve(i,e),o;switch(n.status){case"requires_action":if(o=n?.required_action?.submit_tool_outputs?.tool_calls,o)for(let a of o){let c=a.id,u=a?.function?.name,d=this.isJSON(a?.function?.arguments)?JSON.parse(a?.function?.arguments):a?.function?.arguments,l=null;try{let{data:g}=await os.default.post(t,{name:u,arguments:{...d,remoteJid:s,pushName:r}});l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}catch(g){l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}await this.client.beta.threads.runs.submitToolOutputs(i,e,{tool_outputs:[{tool_call_id:c,output:l}]})}return this.getAIResponse(i,e,t,s,r);case"queued":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,r);case"in_progress":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,r);case"completed":return await this.client.beta.threads.messages.list(i,{run_id:e,limit:1})}}isImageMessage(i){return i.includes("imageMessage")}async processOpenaiAssistant(i,e,t,s,r,n,o,a){if(n&&n.status==="closed")return;if(n&&o.expire&&o.expire>0){let l=Date.now(),g=new Date(n.updatedAt).getTime(),h=l-g;if(Math.floor(h/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}}),await this.initAssistantNewSession(i,e,t,s,r,o,n,a);return}}if(!n){await this.initAssistantNewSession(i,e,t,s,r,o,n,a);return}if(n.status!=="paused"&&await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"opened",awaitUser:!1}}),!a){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),$("/message/sendText"));return}if(o.keywordFinish&&a.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let c=await this.prismaRepository.openaiCreds.findFirst({where:{id:r.openaiCredsId}});if(!c)throw new Error("Openai Creds not found");this.client=new wt.default({apiKey:c.apiKey});let u=n.sessionId,d=await this.sendMessageToAssistant(i,r,e,t,s,a,u);await this.sendMessageWhatsapp(i,n,e,o,d)}async createChatCompletionNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString(),s=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!s)throw new Error("Openai Creds not found");try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:t,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}}),creds:s}}catch(r){this.logger.error(r);return}}async initChatCompletionNewSession(i,e,t,s,r,n,o){let a=await this.createChatCompletionNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:s.openaiCredsId,botId:s.id});n=a.session;let c=a.creds;this.client=new wt.default({apiKey:c.apiKey});let u=await this.sendMessageToBot(i,s,e,o);await this.sendMessageWhatsapp(i,n,e,r,u)}async processOpenaiChatCompletion(i,e,t,s,r,n,o){if(r&&r.status!=="opened")return;if(r&&n.expire&&n.expire>0){let u=Date.now(),d=new Date(r.updatedAt).getTime(),l=u-d;if(Math.floor(l/1e3/60)>n.expire){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}}),await this.initChatCompletionNewSession(i,e,t,s,n,r,o);return}}if(!r){await this.initChatCompletionNewSession(i,e,t,s,n,r,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"opened",awaitUser:!1}}),!o){n.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:n.delayMessage||1e3,text:n.unknownMessage},!1),$("/message/sendText"));return}if(n.keywordFinish&&o.toLowerCase()===n.keywordFinish.toLowerCase()){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}});return}let a=await this.prismaRepository.openaiCreds.findFirst({where:{id:s.openaiCredsId}});if(!a)throw new Error("Openai Creds not found");this.client=new wt.default({apiKey:a.apiKey});let c=await this.sendMessageToBot(i,s,e,o);await this.sendMessageWhatsapp(i,r,e,n,c)}async speechToText(i,e,t){let s;e?.message?.mediaUrl?s=await os.default.get(e.message.mediaUrl,{responseType:"arraybuffer"}).then(a=>Buffer.from(a.data,"binary")):s=await(0,Zr.downloadMediaMessage)({key:e.key,message:e?.message},"buffer",{},{logger:(0,to.default)({level:"error"}),reuploadRequest:t});let r=this.configService.get("LANGUAGE").includes("pt")?"pt":this.configService.get("LANGUAGE"),n=new eo.default;return n.append("file",s,"audio.ogg"),n.append("model","whisper-1"),n.append("language",r),(await os.default.post("https://api.openai.com/v1/audio/transcriptions",n,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${i.apiKey}`}}))?.data?.text}};var gp=p=>{let i;M.get("S3").ENABLE?i=p.message.mediaUrl:i=p.key.id;let e={conversation:p?.message?.conversation,extendedTextMessage:p?.message?.extendedTextMessage?.text,contactMessage:p?.message?.contactMessage?.displayName,locationMessage:p?.message?.locationMessage?.degreesLatitude,viewOnceMessageV2:p?.message?.viewOnceMessageV2?.message?.imageMessage?.url||p?.message?.viewOnceMessageV2?.message?.videoMessage?.url||p?.message?.viewOnceMessageV2?.message?.audioMessage?.url,listResponseMessage:p?.message?.listResponseMessage?.title,responseRowId:p?.message?.listResponseMessage?.singleSelectReply?.selectedRowId,templateButtonReplyMessage:p?.message?.templateButtonReplyMessage?.selectedId,audioMessage:p?.message?.speechToText?p?.message?.speechToText:p?.message?.audioMessage?`audioMessage|${i}`:void 0,imageMessage:p?.message?.imageMessage?`imageMessage|${i}${p?.message?.imageMessage?.caption?`|${p?.message?.imageMessage?.caption}`:""}`:void 0,videoMessage:p?.message?.videoMessage?`videoMessage|${i}${p?.message?.videoMessage?.caption?`|${p?.message?.videoMessage?.caption}`:""}`:void 0,documentMessage:p?.message?.documentMessage?`documentMessage|${i}${p?.message?.documentMessage?.caption?`|${p?.message?.documentMessage?.caption}`:""}`:void 0,documentWithCaptionMessage:p?.message?.documentWithCaptionMessage?.message?.documentMessage?`documentWithCaptionMessage|${i}${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption?`|${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption}`:""}`:void 0,externalAdReplyBody:p?.contextInfo?.externalAdReply?.body?`externalAdReplyBody|${p.contextInfo.externalAdReply.body}`:void 0},t=Object.keys(e).find(s=>e[s]!==void 0)||"unknown";return{...e,messageType:t}},mp=p=>{let i=Object.keys(p).find(t=>t!=="externalAdReplyBody"&&p[t]!==void 0),e=i?p[i]:void 0;return p.externalAdReplyBody&&(e=e?`${e}
${p.externalAdReplyBody}`:p.externalAdReplyBody),e},he=p=>{let i=gp(p);return mp(i)};var bt=v(require("axios")),nt=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new T("TypebotService")}async createNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString();try{let s=this.configService.get("TYPEBOT").API_VERSION,r,n;s==="latest"?(r=`${e.url}/api/v1/typebots/${e.typebot}/startChat`,n={prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}):(r=`${e.url}/api/v1/sendMessage`,n={startParams:{publicId:e.typebot,prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}});let o=await bt.default.post(r,n),a=null;return o?.data?.sessionId&&(a=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName||"",sessionId:`${t}-${o.data.sessionId}`,status:"opened",parameters:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number},awaitUser:!1,botId:e.botId,instanceId:i.id,type:"typebot"}})),{...o.data,session:a}}catch(s){this.logger.error(s);return}}async sendWAMessage(i,e,t,s,r,n,o){u(this.waMonitor.waInstances[i.name],e,t,r,n,o,c,this.prismaRepository).catch(d=>{console.error("Erro ao processar mensagens:",d)});function a(d,l){if(!d)return null;for(let g of d)if(g.lastBubbleBlockId===l)return g.wait?.secondsToWaitFor;return null}function c(d){let l="";if(d.text&&(l+=d.text),d.children&&d.type!=="a")for(let m of d.children)l+=c(m);d.type==="p"&&d.type!=="inline-variable"&&(l=l.trim()+`
`),d.type==="inline-variable"&&(l=l.trim()),d.type==="ol"&&(l=`
`+l.split(`
`).map((m,f)=>m?`${f+1}. ${m}`:"").join(`
`)),d.type==="li"&&(l=l.split(`
`).map(m=>m?`  ${m}`:"").join(`
`));let g="";d.bold&&(g+="*"),d.italic&&(g+="_"),d.underline&&(g+="~");let h=`${g}${l}${g.split("").reverse().join("")}`;return d.url&&(h=d.children[0]?.text?`[${h}]
(${d.url})`:`${d.url}`),h}async function u(d,l,g,h,m,f,b,S){for(let w of h){if(w.type==="text"){let E="";for(let C of w.content.richText){for(let O of C.children)E+=b(O);E+=`
`}if(E=E.replace(/\*\*/g,"").replace(/__/,"").replace(/~~/,"").replace(/\n$/,""),E=E.replace(/\n$/,""),E.includes("[list]")){let C={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},O=E.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=E.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),_=E.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),L=E.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);O&&(C.title=O[1].trim()),N&&(C.description=N[1].trim()),_&&(C.buttonText=_[1].trim()),L&&(C.footerText=L[1].trim());let q=E.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(q){let H=q.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);H&&H.forEach(V=>{let G=V.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),J=V.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),Q={title:G,rows:J?.map(Tn=>({title:Tn.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:Tn.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:Tn.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};C.sections.push(Q)})}await d.listMessage(C)}else if(E.includes("[buttons]")){let C={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},O=E.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),N=E.match(/\[title\]([\s\S]*?)(?=\[description\])/),_=E.match(/\[description\]([\s\S]*?)(?=\[footer\])/),L=E.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);N&&(C.title=N[1].trim()),O&&(C.thumbnailUrl=O[1].trim()),_&&(C.description=_[1].trim()),L&&(C.footer=L[1].trim());let q={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[H,V]of Object.entries(q)){let G;for(;(G=V.exec(E))!==null;){let J=G[1].trim(),Q={type:H};switch(H){case"pix":Q.currency=J.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.name=J.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.keyType=J.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.key=J.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":Q.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.id=J.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":Q.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.copyCode=J.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":Q.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.phoneNumber=J.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":Q.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Q.url=J.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(Q).length>1&&C.buttons.push(Q)}}await d.buttonMessage(C)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:E},!1);$("/message/sendText")}w.type==="image"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"image",media:w.content.url},null,!1),$("/message/sendMedia")),w.type==="video"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"video",media:w.content.url},null,!1),$("/message/sendMedia")),w.type==="audio"&&(await d.audioWhatsapp({number:s.split("@")[0],delay:g?.delayMessage||1e3,encoding:!0,audio:w.content.url},!1),$("/message/sendWhatsAppAudio"));let I=a(f,w.id);I&&await new Promise(E=>setTimeout(E,I*1e3))}if(console.log("input",m),m){if(m.type==="choice input"){let w="",I=m.items;for(let E of I)w+=`\u25B6\uFE0F ${E.content}
`;if(w=w.replace(/\n$/,""),w.includes("[list]")){let E={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},C=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),O=w.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),N=w.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),_=w.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);C&&(E.title=C[1].trim()),O&&(E.description=O[1].trim()),N&&(E.buttonText=N[1].trim()),_&&(E.footerText=_[1].trim());let L=w.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(L){let q=L.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);q&&q.forEach(H=>{let V=H.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),G=H.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),J={title:V,rows:G?.map(Q=>({title:Q.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:Q.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:Q.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};E.sections.push(J)})}await d.listMessage(E)}else if(w.includes("[buttons]")){let E={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},C=w.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),O=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=w.match(/\[description\]([\s\S]*?)(?=\[footer\])/),_=w.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);O&&(E.title=O[1].trim()),C&&(E.thumbnailUrl=C[1].trim()),N&&(E.description=N[1].trim()),_&&(E.footer=_[1].trim());let L={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[q,H]of Object.entries(L)){let V;for(;(V=H.exec(w))!==null;){let G=V[1].trim(),J={type:q};switch(q){case"pix":J.currency=G.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),J.name=G.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),J.keyType=G.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),J.key=G.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.id=G.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.copyCode=G.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.phoneNumber=G.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.url=G.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(J).length>1&&E.buttons.push(J)}}await d.buttonMessage(E)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:w},!1);$("/message/sendText")}await S.integrationSession.update({where:{id:l.id},data:{awaitUser:!0}})}else g?.keepOpen?await S.integrationSession.update({where:{id:l.id},data:{status:"closed"}}):await S.integrationSession.deleteMany({where:{id:l.id}})}}async processTypebot(i,e,t,s,r,n,o,a,c,u,d,l,g,h,m,f){if(s&&o&&o>0){let E=Date.now(),C=new Date(s.updatedAt).getTime(),O=E-C;if(Math.floor(O/1e3/60)>o){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});let _=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:e,pushName:t.pushName,botId:r.id,prefilledVariables:f});if(_.session&&(s=_.session),_.messages.length===0){let L=he(t.message);if(!L){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&L.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}try{let q=this.configService.get("TYPEBOT").API_VERSION,H,V;q==="latest"?(H=`${n}/api/v1/sessions/${_.sessionId}/continueChat`,V={message:L}):(H=`${n}/api/v1/sendMessage`,V={message:L,sessionId:_.sessionId});let G=await bt.default.post(H,V);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,G.data.messages,G.data.input,G.data.clientSideActions)}catch(q){this.logger.error(q);return}}await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,_.messages,_.input,_.clientSideActions);return}}if(s&&s.status!=="opened")return;if(!s){let E=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:e,pushName:t?.pushName,botId:r.id,prefilledVariables:f});if(E?.session&&(s=E.session),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,E?.messages,E?.input,E?.clientSideActions),E.messages.length===0){if(!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let C;try{let O=this.configService.get("TYPEBOT").API_VERSION,N,_;O==="latest"?(N=`${n}/api/v1/sessions/${E.sessionId}/continueChat`,_={message:m}):(N=`${n}/api/v1/sendMessage`,_={message:m,sessionId:E.sessionId}),C=await bt.default.post(N,_),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,C.data.messages,C.data.input,C.data.clientSideActions)}catch(O){this.logger.error(O);return}}return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let b=this.configService.get("TYPEBOT").API_VERSION,S,w;b==="latest"?(S=`${n}/api/v1/sessions/${s.sessionId.split("-")[1]}/continueChat`,w={message:m}):(S=`${n}/api/v1/sendMessage`,w={message:m,sessionId:s.sessionId.split("-")[1]});let I=await bt.default.post(S,w);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,I?.data?.messages,I?.data?.input,I?.data?.clientSideActions)}};var so=require("class-validator"),qn=require("uuid"),ke=class p{constructor(i,e,t,s){this.configService=i;this.eventEmitter=e;this.prismaRepository=t;this.chatwootCache=s;this.logger=new T("ChannelStartupService");this.instance={};this.localChatwoot={};this.localProxy={};this.localSettings={};this.localWebhook={};this.chatwootService=new Ae(k,this.configService,this.prismaRepository,this.chatwootCache);this.typebotService=new nt(k,this.configService,this.prismaRepository);this.openaiService=new it(k,this.configService,this.prismaRepository);this.difyService=new st(k,this.configService,this.prismaRepository)}setInstance(i){this.logger.setInstance(i.instanceName),this.instance.name=i.instanceName,this.instance.id=i.instanceId,this.instance.integration=i.integration,this.instance.number=i.number,this.instance.token=i.token,this.instance.businessId=i.businessId,this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name},{instance:this.instance.name,status:"created"})}set instanceName(i){if(this.logger.setInstance(i),!i){this.instance.name=(0,qn.v4)();return}this.instance.name=i}get instanceName(){return this.instance.name}set instanceId(i){if(!i){this.instance.id=(0,qn.v4)();return}this.instance.id=i}get instanceId(){return this.instance.id}set integration(i){this.instance.integration=i}get integration(){return this.instance.integration}set number(i){this.instance.number=i}get number(){return this.instance.number}set token(i){this.instance.token=i}get token(){return this.instance.token}get wuid(){return this.instance.wuid}async loadWebhook(){let i=await this.prismaRepository.webhook.findUnique({where:{instanceId:this.instanceId}});this.localWebhook.enabled=i?.enabled,this.localWebhook.webhookBase64=i?.webhookBase64}async loadSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async setSettings(i){await this.prismaRepository.setting.upsert({where:{instanceId:this.instanceId},update:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory},create:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,instanceId:this.instanceId}}),this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async findSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});return i?{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory}:null}async loadChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});this.localChatwoot.enabled=i?.enabled,this.localChatwoot.accountId=i?.accountId,this.localChatwoot.token=i?.token,this.localChatwoot.url=i?.url,this.localChatwoot.nameInbox=i?.nameInbox,this.localChatwoot.signMsg=i?.signMsg,this.localChatwoot.signDelimiter=i?.signDelimiter,this.localChatwoot.number=i?.number,this.localChatwoot.reopenConversation=i?.reopenConversation,this.localChatwoot.conversationPending=i?.conversationPending,this.localChatwoot.mergeBrazilContacts=i?.mergeBrazilContacts,this.localChatwoot.importContacts=i?.importContacts,this.localChatwoot.importMessages=i?.importMessages,this.localChatwoot.daysLimitImportMessages=i?.daysLimitImportMessages}async setChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)return;if(await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}})){await this.prismaRepository.chatwoot.update({where:{instanceId:this.instanceId},data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signMsg?i.signDelimiter:null,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot();return}await this.prismaRepository.chatwoot.create({data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids,instanceId:this.instanceId}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot()}async findChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return null;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});if(!i)return null;let e=Array.isArray(i.ignoreJids)?i.ignoreJids.map(t=>String(t)):[];return{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signDelimiter||null,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:e}}clearCacheChatwoot(){this.localChatwoot?.enabled&&this.chatwootService.getCache()?.deleteAll(this.instanceName)}async loadProxy(){this.localProxy.enabled=!1,process.env.PROXY_HOST&&(this.localProxy.enabled=!0,this.localProxy.host=process.env.PROXY_HOST,this.localProxy.port=process.env.PROXY_PORT||"80",this.localProxy.protocol=process.env.PROXY_PROTOCOL||"http",this.localProxy.username=process.env.PROXY_USERNAME,this.localProxy.password=process.env.PROXY_PASSWORD);let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});i?.enabled&&(this.localProxy.enabled=!0,this.localProxy.host=i?.host,this.localProxy.port=i?.port,this.localProxy.protocol=i?.protocol,this.localProxy.username=i?.username,this.localProxy.password=i?.password)}async setProxy(i){await this.prismaRepository.proxy.upsert({where:{instanceId:this.instanceId},update:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password},create:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password,instanceId:this.instanceId}}),Object.assign(this.localProxy,i)}async findProxy(){let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});if(!i)throw new W("Proxy not found");return i}async sendDataWebhook(i,e,t=!0){let s=this.configService.get("SERVER").URL,r=new Date().getTimezoneOffset()*6e4,o=new Date(Date.now()-r).toISOString(),a=this.configService.get("AUTHENTICATION").EXPOSE_IN_FETCH_INSTANCES,c=this.token||"Apikey not found";await Y.emit({instanceName:this.instance.name,origin:p.name,event:i,data:e,serverUrl:s,dateTime:o,sender:this.wuid,apiKey:a&&c?c:null,local:t})}formatMXOrARNumber(i){let e=i.substring(0,2);return(Number(e)===52||Number(e)===54)&&i.length===13?e+i.substring(3):i}formatBRNumber(i){let e=new RegExp(/^(\d{2})(\d{2})\d{1}(\d{8})$/);if(e.test(i)){let t=e.exec(i);if(t&&t[1]==="55"){let s=Number.parseInt(t[3][0]),r=Number.parseInt(t[2]);return s<7||r<31?t[0]:t[1]+t[2]+t[3]}return i}else return i}createJid(i){return i.includes("@g.us")||i.includes("@s.whatsapp.net")||i.includes("@lid")||i.includes("@broadcast")?i:(i=i?.replace(/\s/g,"").replace(/\+/g,"").replace(/\(/g,"").replace(/\)/g,"").split(":")[0].split("@")[0],i.includes("-")&&i.length>=24?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=i.replace(/\D/g,""),i.length>=18?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=this.formatMXOrARNumber(i),i=this.formatBRNumber(i),`${i}@s.whatsapp.net`)))}async fetchContacts(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,t={instanceId:this.instanceId};return e&&(t.remoteJid=e),await this.prismaRepository.contact.findMany({where:t})}async fetchMessages(i){let e=i?.where?.key,t=await this.prismaRepository.message.count({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]}});i?.offset||(i.offset=50),i?.page||(i.page=1);let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]},orderBy:{messageTimestamp:"desc"},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset,select:{id:!0,key:!0,pushName:!0,messageType:!0,message:!0,messageTimestamp:!0,instanceId:!0,source:!0,contextInfo:!0,MessageUpdate:{select:{status:!0}}}});return{messages:{total:t,pages:Math.ceil(t/i.offset),currentPage:i.page,records:s}}}async fetchStatusMessage(i){return await this.prismaRepository.messageUpdate.findMany({where:{instanceId:this.instanceId,remoteJid:i.where?.remoteJid,keyId:i.where?.id},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset})}async fetchChats(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,t=[];return e?t=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId} AND "Chat"."remoteJid" = ${e} and "Message"."messageType" != 'reactionMessage'
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `:t=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId}
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `,t&&(0,so.isArray)(t)&&t.length>0?t.map(s=>({id:s.id,remoteJid:s.remoteJid,name:s.name,labels:s.labels,createdAt:s.createdAt,updatedAt:s.updatedAt,pushName:s.pushName,profilePicUrl:s.profilePicUrl,unreadMessages:s.unreadMessages,lastMessage:s.last_message_id?{id:s.last_message_id,key:s.last_message_key,pushName:s.last_message_push_name,participant:s.last_message_participant,messageType:s.last_message_message_type,message:s.last_message_message,contextInfo:s.last_message_context_info,source:s.last_message_source,messageTimestamp:s.last_message_message_timestamp,instanceId:s.last_message_instance_id,sessionId:s.last_message_session_id,status:s.last_message_status}:void 0})):[]}};var X={0:"ERROR",1:"PENDING",2:"SERVER_ACK",3:"DELIVERY_ACK",4:"READ",5:"PLAYED"};var Gn=require("class-validator"),St=v(require("mime")),Hn=require("uuid"),as=class extends ke{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"};this.client=null}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async profilePicture(e){return{wuid:this.createJid(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async connectToWhatsapp(e){if(e)try{this.loadChatwoot(),this.eventHandler(e)}catch(t){throw this.logger.error(t),new F(t?.toString())}}async eventHandler(e){try{let t;if(e.message){if(t={key:{id:e.key.id||(0,Hn.v4)(),remoteJid:e.key.remoteJid,fromMe:e.key.fromMe},pushName:e.pushName,message:e.message,messageType:e.messageType,messageTimestamp:Math.round(new Date().getTime()/1e3),source:"unknown",instanceId:this.instanceId},this.configService.get("OPENAI").ENABLED){let r=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});r&&r.openaiCredsId&&r.speechToText&&e?.message?.audioMessage&&(t.message.speechToText=await this.openaiService.speechToText(r.OpenaiCreds,e,this.client.updateMediaMessage))}if(this.logger.log(t),this.sendDataWebhook("messages.upsert",t),await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:t.key.remoteJid,msg:t,pushName:t.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let r=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},t);r?.id&&(t.chatwootMessageId=r.id,t.chatwootInboxId=r.id,t.chatwootConversationId=r.id)}await this.prismaRepository.message.create({data:t}),await this.updateContact({remoteJid:t.key.remoteJid,pushName:t.key.fromMe||t.key.fromMe==null?"":e.pushName,profilePicUrl:e.profilePicUrl})}}catch(t){this.logger.error(t)}}async updateContact(e){let t=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:e.remoteJid}});if(t){let o={remoteJid:e.remoteJid,pushName:e?.pushName,instanceId:this.instanceId,profilePicUrl:e?.profilePicUrl};this.sendDataWebhook("contacts.update",o),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},o),await this.prismaRepository.contact.updateMany({where:{remoteJid:t.remoteJid,instanceId:this.instanceId},data:o});return}let s={remoteJid:e.remoteJid,pushName:e?.pushName,instanceId:this.instanceId,profilePicUrl:e?.profilePicUrl};this.sendDataWebhook("contacts.upsert",s),await this.prismaRepository.contact.create({data:s});let r=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:e.remoteJid}});if(r){let o={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.update",o),await this.prismaRepository.chat.updateMany({where:{remoteJid:r.remoteJid},data:o})}let n={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.upsert",n),await this.prismaRepository.chat.create({data:n})}async sendMessageWithTyping(e,t,s,r=!1){try{let n,o;if(s?.quoted){let d=s?.quoted?.key;if(!d)throw"Message not found";n=d}s.delay&&await new Promise(u=>setTimeout(u,s.delay)),s?.webhookUrl&&(o=s.webhookUrl);let c={key:{fromMe:!0,id:(0,Hn.v4)(),remoteJid:e},messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:o,source:"unknown",instanceId:this.instanceId,status:X[1]};return t?.mediaType==="image"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"imageMessage"}:t?.mediaType==="video"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"videoMessage"}:t?.mediaType==="audio"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"audioMessage"}:t?.mediaType==="document"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"documentMessage"}:c={...c,message:{...t,quoted:n},messageType:"conversation"},this.logger.log(c),this.sendDataWebhook("send.message",c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName}),await this.prismaRepository.message.create({data:c}),c}catch(n){throw this.logger.error(n),new y(n.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};return(0,Gn.isURL)(e.media)?t=St.default.getType(e.media):t=St.default.getType(e.fileName),s.mimetype=t,s}catch(t){throw this.logger.error(t),new F(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudio(e,t){t=t.replace(/\D/g,"");let s=`${t}-${new Date().getTime()}`,r,n={fileName:`${s}.mp4`,mediaType:"audio",media:e};return(0,Gn.isURL)(e)?r=St.default.getType(e):r=St.default.getType(n.fileName),n.mimetype=r,n}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else throw console.error("El archivo o buffer no est\uFFFD definido correctamente."),new Error("File or buffer is undefined.");let n=await this.processAudio(r.audio,e.number);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async buttonMessage(){throw new y("Method not available on Evolution Channel")}async locationMessage(){throw new y("Method not available on Evolution Channel")}async listMessage(){throw new y("Method not available on Evolution Channel")}async templateMessage(){throw new y("Method not available on Evolution Channel")}async contactMessage(){throw new y("Method not available on Evolution Channel")}async reactionMessage(){throw new y("Method not available on Evolution Channel")}async getBase64FromMediaMessage(){throw new y("Method not available on Evolution Channel")}async deleteMessage(){throw new y("Method not available on Evolution Channel")}async mediaSticker(){throw new y("Method not available on Evolution Channel")}async pollMessage(){throw new y("Method not available on Evolution Channel")}async statusMessage(){throw new y("Method not available on Evolution Channel")}async reloadConnection(){throw new y("Method not available on Evolution Channel")}async whatsappNumber(){throw new y("Method not available on Evolution Channel")}async markMessageAsRead(){throw new y("Method not available on Evolution Channel")}async archiveChat(){throw new y("Method not available on Evolution Channel")}async markChatUnread(){throw new y("Method not available on Evolution Channel")}async fetchProfile(){throw new y("Method not available on Evolution Channel")}async offerCall(){throw new y("Method not available on WhatsApp Business API")}async sendPresence(){throw new y("Method not available on Evolution Channel")}async setPresence(){throw new y("Method not available on Evolution Channel")}async fetchPrivacySettings(){throw new y("Method not available on Evolution Channel")}async updatePrivacySettings(){throw new y("Method not available on Evolution Channel")}async fetchBusinessProfile(){throw new y("Method not available on Evolution Channel")}async updateProfileName(){throw new y("Method not available on Evolution Channel")}async updateProfileStatus(){throw new y("Method not available on Evolution Channel")}async updateProfilePicture(){throw new y("Method not available on Evolution Channel")}async removeProfilePicture(){throw new y("Method not available on Evolution Channel")}async blockUser(){throw new y("Method not available on Evolution Channel")}async updateMessage(){throw new y("Method not available on Evolution Channel")}async createGroup(){throw new y("Method not available on Evolution Channel")}async updateGroupPicture(){throw new y("Method not available on Evolution Channel")}async updateGroupSubject(){throw new y("Method not available on Evolution Channel")}async updateGroupDescription(){throw new y("Method not available on Evolution Channel")}async findGroup(){throw new y("Method not available on Evolution Channel")}async fetchAllGroups(){throw new y("Method not available on Evolution Channel")}async inviteCode(){throw new y("Method not available on Evolution Channel")}async inviteInfo(){throw new y("Method not available on Evolution Channel")}async sendInvite(){throw new y("Method not available on Evolution Channel")}async acceptInviteCode(){throw new y("Method not available on Evolution Channel")}async revokeInviteCode(){throw new y("Method not available on Evolution Channel")}async findParticipants(){throw new y("Method not available on Evolution Channel")}async updateGParticipant(){throw new y("Method not available on Evolution Channel")}async updateGSetting(){throw new y("Method not available on Evolution Channel")}async toggleEphemeral(){throw new y("Method not available on Evolution Channel")}async leaveGroup(){throw new y("Method not available on Evolution Channel")}async fetchLabels(){throw new y("Method not available on Evolution Channel")}async handleLabel(){throw new y("Method not available on Evolution Channel")}async receiveMobileCode(){throw new y("Method not available on Evolution Channel")}async fakeCall(){throw new y("Method not available on Evolution Channel")}};var io=v(require("minio")),Vn=require("path"),cs=new T("S3 Service"),He=new We().get("S3"),Me=(()=>{if(He?.ENABLE)return new io.Client({endPoint:He.ENDPOINT,port:He.PORT,useSSL:He.USE_SSL,accessKey:He.ACCESS_KEY,secretKey:He.SECRET_KEY,region:He.REGION})})(),Be=process.env.S3_BUCKET,hp=async()=>{if(Me)try{return(await Me.listBuckets()).find(i=>i.name===Be)}catch{return!1}},yp=async()=>{if(Me){let p={Version:"2012-10-17",Statement:[{Effect:"Allow",Principal:"*",Action:["s3:GetObject"],Resource:[`arn:aws:s3:::${Be}/*`]}]};await Me.setBucketPolicy(Be,JSON.stringify(p))}},fp=async()=>{if(Me)try{return await hp()||await Me.makeBucket(Be),await yp(),cs.info(`S3 Bucket ${Be} - ON`),!0}catch(p){return cs.error("S3 ERROR:"),cs.error(p),!1}};fp();var Et=async(p,i,e,t)=>{if(Me){let s=(0,Vn.join)("evolution-api",p);try{return t["custom-header-application"]="evolution-api",await Me.putObject(Be,s,i,e,t)}catch(r){return cs.error(r),r}}},Ve=async(p,i)=>{if(Me)try{let e=(0,Vn.join)("evolution-api",p);return i?await Me.presignedGetObject(Be,e,i):await Me.presignedGetObject(Be,e)}catch(e){throw new y(e?.message)}};var Le=v(require("axios")),je=require("class-validator"),ro=v(require("form-data")),oo=require("fs"),It=v(require("mime")),ao=require("path"),ps=class extends ke{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"}}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async post(e,t){try{let s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${this.number}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};return(await Le.default.post(s,e,{headers:n})).data}catch(s){return s.response?.data?.error}}async profilePicture(e){return{wuid:this.createJid(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async setWhatsappBusinessProfile(e){let t={messaging_product:"whatsapp",about:e.about,address:e.address,description:e.description,vertical:e.vertical,email:e.email,websites:e.websites,profile_picture_handle:e.profilehandle};return await this.post(t,"whatsapp_business_profile")}async connectToWhatsapp(e){if(!e)return;let t=e.entry[0].changes[0].value;try{this.loadChatwoot(),this.eventHandler(t),this.phoneNumber=this.createJid(t.messages?t.messages[0].from:t.statuses[0]?.recipient_id)}catch(s){throw this.logger.error(s),new F(s?.toString())}}async downloadMediaMessage(e){try{let t=e[e.type].id,s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},o=await Le.default.get(s,{headers:n});return o=await Le.default.get(o.data.url,{headers:n,responseType:"arraybuffer"}),o.data}catch(t){this.logger.error(t)}}messageMediaJson(e){let t=e.messages[0],s=t.type+"Message";return s={[s]:t[t.type]},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageInteractiveJson(e){let t=e.messages[0],s={conversation:t.interactive[t.interactive.type].title};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageButtonJson(e){let t=e.messages[0],s={conversation:e.messages[0].button?.text};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageReactionJson(e){let t=e.messages[0],s={reactionMessage:{key:{id:t.reaction.message_id},text:t.reaction.emoji}};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageTextJson(e){let t,s=e.messages[0];return s.from===e.metadata.phone_number_id?(t={extendedTextMessage:{text:s.text.body}},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})):(t={conversation:s.text.body},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})),t}messageContactsJson(e){let t=e.messages[0],s={},r=n=>{let o=`BEGIN:VCARD
VERSION:3.0
N:${n.name.formatted_name}
FN:${n.name.formatted_name}
`;return n.org&&(o+=`ORG:${n.org.company};
`),n.emails&&(o+=`EMAIL:${n.emails[0].email}
`),n.urls&&(o+=`URL:${n.urls[0].url}
`),n.phones[0]?.wa_id||(n.phones[0].wa_id=this.createJid(n.phones[0].phone)),o+=`item1.TEL;waid=${n.phones[0]?.wa_id}:${n.phones[0].phone}
item1.X-ABLabel:Celular
END:VCARD`,o};return t.contacts.length===1?s.contactMessage={displayName:t.contacts[0].name.formatted_name,vcard:r(t.contacts[0])}:s.contactsArrayMessage={displayName:`${t.length} contacts`,contacts:t.map(n=>({displayName:n.name.formatted_name,vcard:r(n)}))},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}renderMessageType(e){let t;switch(e){case"text":t="conversation";break;case"image":t="imageMessage";break;case"video":t="videoMessage";break;case"audio":t="audioMessage";break;case"document":t="documentMessage";break;case"template":t="conversation";break;default:t="conversation";break}return t}async messageHandle(e,t,s){try{let r,n;if(e.contacts&&(n=e.contacts[0].profile.name),e.messages){let o={id:e.messages[0].id,remoteJid:this.phoneNumber,fromMe:e.messages[0].from===e.metadata.phone_number_id};if(e?.messages[0].document||e?.messages[0].image||e?.messages[0].audio||e?.messages[0].video)if(r={key:o,pushName:n,message:this.messageMediaJson(e),contextInfo:this.messageMediaJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId},this.configService.get("S3").ENABLE)try{let u=e,d=u.messages[0][u.messages[0].type].id,l=this.configService.get("WA_BUSINESS").URL,g=this.configService.get("WA_BUSINESS").VERSION;l=`${l}/${g}/${d}`;let h={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},m=await Le.default.get(l,{headers:h}),f=await Le.default.get(m.data.url,{headers:h,responseType:"arraybuffer"}),b=u.messages[0].document?"document":u.messages[0].image?"image":u.messages[0].audio?"audio":"video",S=m.headers["content-type"],w=m.headers["content-disposition"],I=`${u.messages[0].id}.${S.split("/")[1]}`;if(w){let N=w.match(/filename="(.+?)"/);N&&(I=N[1])}let E=m.headers["content-length"]||f.data.byteLength,C=(0,ao.join)(`${this.instance.id}`,e.key.remoteJid,b,I);await Et(C,f.data,E,{"Content-Type":S}),await this.prismaRepository.media.create({data:{messageId:e.messages[0].id,instanceId:this.instanceId,type:b,fileName:C,mimetype:S}});let O=await Ve(C);r.message.mediaUrl=O}catch(u){this.logger.error(["Error on upload file to minio",u?.message,u?.stack])}else{let u=await this.downloadMediaMessage(e?.messages[0]);r.message.base64=u.toString("base64")}else e?.messages[0].interactive?r={key:o,pushName:n,message:{...this.messageInteractiveJson(e)},contextInfo:this.messageInteractiveJson(e)?.contextInfo,messageType:"interactiveMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].button?r={key:o,pushName:n,message:{...this.messageButtonJson(e)},contextInfo:this.messageButtonJson(e)?.contextInfo,messageType:"buttonMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].reaction?r={key:o,pushName:n,message:{...this.messageReactionJson(e)},contextInfo:this.messageReactionJson(e)?.contextInfo,messageType:"reactionMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].contacts?r={key:o,pushName:n,message:{...this.messageContactsJson(e)},contextInfo:this.messageContactsJson(e)?.contextInfo,messageType:"contactMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:r={key:o,pushName:n,message:this.messageTextJson(e),contextInfo:this.messageTextJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId};if(this.localSettings.readMessages,this.configService.get("OPENAI").ENABLED){let u=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});u&&u.openaiCredsId&&u.speechToText&&e?.message?.audioMessage&&(r.message.speechToText=await this.openaiService.speechToText(u.OpenaiCreds,e,this.client.updateMediaMessage))}if(this.logger.log(r),this.sendDataWebhook("messages.upsert",r),await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:r.key.remoteJid,msg:r,pushName:r.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let u=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},r);u?.id&&(r.chatwootMessageId=u.id,r.chatwootInboxId=u.id,r.chatwootConversationId=u.id)}await this.prismaRepository.message.create({data:r});let a=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:o.remoteJid}}),c={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};if(c.remoteJid==="status@broadcast")return;if(a){let u={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};this.sendDataWebhook("contacts.update",u),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},u),await this.prismaRepository.contact.updateMany({where:{remoteJid:a.remoteJid},data:u});return}this.sendDataWebhook("contacts.upsert",c),this.prismaRepository.contact.create({data:c})}if(e.statuses)for await(let o of e.statuses){let a={id:o.id,remoteJid:this.phoneNumber,fromMe:this.phoneNumber===e.metadata.phone_number_id};if(s?.groups_ignore&&a.remoteJid.includes("@g.us"))return;if(a.remoteJid!=="status@broadcast"&&!a?.remoteJid?.match(/(:\d+)/)){let c=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:a.id}}});if(!c)return;if(o.message===null&&o.status===void 0){this.sendDataWebhook("messages.delete",a);let d={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:"DELETED",instanceId:this.instanceId};await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:a});return}let u={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:o.status.toUpperCase(),instanceId:this.instanceId};this.sendDataWebhook("messages.update",u),await this.prismaRepository.messageUpdate.create({data:u}),c.webhookUrl&&await Le.default.post(c.webhookUrl,u)}}}catch(r){this.logger.error(r)}}convertMessageToRaw(e,t){let s;return e?.conversation?t?.context?.message_id?(s={...e,contextInfo:{stanzaId:t.context.message_id}},s):(s=e,s):e?.mediaType==="image"?t?.context?.message_id?(s={imageMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{imageMessage:e}:e?.mediaType==="video"?t?.context?.message_id?(s={videoMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{videoMessage:e}:e?.mediaType==="audio"?t?.context?.message_id?(s={audioMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{audioMessage:e}:e?.mediaType==="document"?t?.context?.message_id?(s={documentMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{documentMessage:e}:e}async eventHandler(e){let t=this.configService.get("DATABASE"),s=await this.findSettings();this.messageHandle(e,t,s)}async sendMessageWithTyping(e,t,s,r=!1){try{let n,o,a=s?.linkPreview!=!1?void 0:!1;if(s?.quoted){let g=s?.quoted?.key;if(!g)throw"Message not found";n=g}s?.webhookUrl&&(o=s.webhookUrl);let c,u=await(async()=>{if(t.reactionMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"reaction",to:e.replace(/\D/g,""),reaction:{message_id:t.reactionMessage.key.id,emoji:t.reactionMessage.text}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.locationMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"location",to:e.replace(/\D/g,""),location:{longitude:t.locationMessage.degreesLongitude,latitude:t.locationMessage.degreesLatitude,name:t.locationMessage.name,address:t.locationMessage.address}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.contacts)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"contacts",to:e.replace(/\D/g,""),contacts:t.contacts},n&&(c.context={message_id:n.id}),t=t.message,await this.post(c,"messages");if(t.conversation)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"text",to:e.replace(/\D/g,""),text:{body:t.conversation,preview_url:a}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.media)return c={messaging_product:"whatsapp",recipient_type:"individual",type:t.mediaType,to:e.replace(/\D/g,""),[t.mediaType]:{[t.type]:t.id,preview_url:a,caption:t.caption}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.audio)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"audio",to:e.replace(/\D/g,""),audio:{[t.type]:t.id}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.buttons){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"button",body:{text:t.text||"Select"},action:{buttons:t.buttons}}},n&&(c.context={message_id:n.id});let l="";for(let g of t.buttons)l+=`\u25B6\uFE0F ${g.reply?.title}
`;return t={conversation:`${t.text||"Select"}
`+l},await this.post(c,"messages")}if(t.listMessage){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"list",header:{type:"text",text:t.listMessage.title},body:{text:t.listMessage.description},footer:{text:t.listMessage.footerText},action:{button:t.listMessage.buttonText,sections:t.listMessage.sections}}},n&&(c.context={message_id:n.id});let l="";for(let g of t.listMessage.sections){l+=`${g?.title}
`;for(let h of g.rows)l+=`${h?.title}
`}return t={conversation:`${t.listMessage.title}
`+l},await this.post(c,"messages")}if(t.template)return c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"template",template:{name:t.template.name,language:{code:t.template.language||"en_US"},components:t.template.components}},n&&(c.context={message_id:n.id}),t={conversation:`\u25B6\uFE0F${t.template.name}\u25C0\uFE0F`},await this.post(c,"messages")})();if(u?.error_data)return this.logger.error(u),u;let d={key:{fromMe:!0,id:u?.messages[0]?.id,remoteJid:this.createJid(e)},message:this.convertMessageToRaw(t,c),messageType:this.renderMessageType(c.type),messageTimestamp:u?.messages[0]?.timestamp||Math.round(new Date().getTime()/1e3),instanceId:this.instanceId,webhookUrl:o,status:X[1],source:"unknown"};return this.logger.log(d),this.sendDataWebhook("send.message",d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:d.key.remoteJid,msg:d,pushName:d.pushName}),await this.prismaRepository.message.create({data:d}),d}catch(n){throw this.logger.error(n),new y(n.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async getIdMedia(e){let t=new ro.default,s=(0,oo.createReadStream)(e.media);t.append("file",s,{filename:"media",contentType:e.mimetype}),t.append("typeFile",e.mimetype),t.append("messaging_product","whatsapp");let r={Authorization:`Bearer ${this.token}`};return(await Le.default.post(process.env.API_URL+"/"+process.env.VERSION+"/"+this.number+"/media",t,{headers:r})).data.id}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};if((0,je.isURL)(e.media))t=It.default.getType(e.media),s.id=e.media,s.type="link";else{t=It.default.getType(e.fileName);let r=await this.getIdMedia(s);s.id=r,s.type="id"}return s.mimetype=t,s}catch(t){throw this.logger.error(t),new F(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudio(e,t){t=t.replace(/\D/g,"");let s=`${t}-${new Date().getTime()}`,r,n={fileName:`${s}.mp3`,mediaType:"audio",media:e};if((0,je.isURL)(e))r=It.default.getType(e),n.id=e,n.type="link";else{r=It.default.getType(n.fileName);let o=await this.getIdMedia(n);n.id=o,n.type="id"}return n.mimetype=r,n}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else throw console.error("El archivo no tiene buffer o file es undefined"),new Error("File or buffer is undefined");let n=await this.processAudio(r.audio,e.number);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async buttonMessage(e){let t={},s={text:e.buttons.map(r=>r.displayText),ids:e.buttons.map(r=>r.id)};if(!(0,je.arrayUnique)(s.text)||!(0,je.arrayUnique)(s.ids))throw new y("Button texts cannot be repeated","Button IDs cannot be repeated.");return await this.sendMessageWithTyping(e.number,{text:t?.mediaKey?void 0:e.title,buttons:e.buttons.map(r=>({type:"reply",reply:{title:r.displayText,id:r.id}})),[t?.mediaKey]:t?.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){let t={title:e.sections.map(r=>r.title)};if(!(0,je.arrayUnique)(t.title))throw new y("Section tiles cannot be repeated");let s={listMessage:{title:e.title,description:e.description,footerText:e?.footerText,buttonText:e?.buttonText,sections:e.sections.map(r=>({title:r.title,rows:r.rows.map(n=>({title:n.title,description:n.description.substring(0,72),id:n.rowId}))}))}};return await this.sendMessageWithTyping(e.number,s,{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async templateMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{template:{name:e.name,language:e.language,components:e.components}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned,webhookUrl:e?.webhookUrl},t)}async contactMessage(e){let t={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contact={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(e.number,{contacts:e.contact.map(r=>({name:{formatted_name:r.fullName,first_name:r.fullName},phones:[{phone:r.phoneNumber}],urls:[{url:r.url}],emails:[{email:r.email}],org:{company:r.organization}})),message:t},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async getBase64FromMediaMessage(e){try{let t=e.message,s=t.messageType.includes("Message")?t.messageType:t.messageType+"Message",r=t.message[s];return{mediaType:t.messageType,fileName:r?.fileName,caption:r?.caption,size:{fileLength:r?.fileLength,height:r?.fileLength,width:r?.width},mimetype:r?.mime_type,base64:t.message.base64}}catch(t){throw this.logger.error(t),new y(t.toString())}}async deleteMessage(){throw new y("Method not available on WhatsApp Business API")}async mediaSticker(){throw new y("Method not available on WhatsApp Business API")}async pollMessage(){throw new y("Method not available on WhatsApp Business API")}async statusMessage(){throw new y("Method not available on WhatsApp Business API")}async reloadConnection(){throw new y("Method not available on WhatsApp Business API")}async whatsappNumber(){throw new y("Method not available on WhatsApp Business API")}async markMessageAsRead(){throw new y("Method not available on WhatsApp Business API")}async archiveChat(){throw new y("Method not available on WhatsApp Business API")}async markChatUnread(){throw new y("Method not available on WhatsApp Business API")}async fetchProfile(){throw new y("Method not available on WhatsApp Business API")}async offerCall(){throw new y("Method not available on WhatsApp Business API")}async sendPresence(){throw new y("Method not available on WhatsApp Business API")}async setPresence(){throw new y("Method not available on WhatsApp Business API")}async fetchPrivacySettings(){throw new y("Method not available on WhatsApp Business API")}async updatePrivacySettings(){throw new y("Method not available on WhatsApp Business API")}async fetchBusinessProfile(){throw new y("Method not available on WhatsApp Business API")}async updateProfileName(){throw new y("Method not available on WhatsApp Business API")}async updateProfileStatus(){throw new y("Method not available on WhatsApp Business API")}async updateProfilePicture(){throw new y("Method not available on WhatsApp Business API")}async removeProfilePicture(){throw new y("Method not available on WhatsApp Business API")}async blockUser(){throw new y("Method not available on WhatsApp Business API")}async updateMessage(){throw new y("Method not available on WhatsApp Business API")}async createGroup(){throw new y("Method not available on WhatsApp Business API")}async updateGroupPicture(){throw new y("Method not available on WhatsApp Business API")}async updateGroupSubject(){throw new y("Method not available on WhatsApp Business API")}async updateGroupDescription(){throw new y("Method not available on WhatsApp Business API")}async findGroup(){throw new y("Method not available on WhatsApp Business API")}async fetchAllGroups(){throw new y("Method not available on WhatsApp Business API")}async inviteCode(){throw new y("Method not available on WhatsApp Business API")}async inviteInfo(){throw new y("Method not available on WhatsApp Business API")}async sendInvite(){throw new y("Method not available on WhatsApp Business API")}async acceptInviteCode(){throw new y("Method not available on WhatsApp Business API")}async revokeInviteCode(){throw new y("Method not available on WhatsApp Business API")}async findParticipants(){throw new y("Method not available on WhatsApp Business API")}async updateGParticipant(){throw new y("Method not available on WhatsApp Business API")}async updateGSetting(){throw new y("Method not available on WhatsApp Business API")}async toggleEphemeral(){throw new y("Method not available on WhatsApp Business API")}async leaveGroup(){throw new y("Method not available on WhatsApp Business API")}async fetchLabels(){throw new y("Method not available on WhatsApp Business API")}async handleLabel(){throw new y("Method not available on WhatsApp Business API")}async receiveMobileCode(){throw new y("Method not available on WhatsApp Business API")}async fakeCall(){throw new y("Method not available on WhatsApp Business API")}};var rt=class{constructor(i,e,t,s){this.jid=i;this.exists=e;this.number=t;this.name=s}},ls=class{},us=class{},Mt=class{};var ds=class{},gs=class{},ot=class{};var ms=class{};var hs=class{},ys=class{},fs=class{},ws=class{};var jn=class{},bs=class extends jn{},Ss=class extends bs{},Es=class extends bs{},Is=class{};var Kn=require("baileys"),Re=class{constructor(i){this.cache=i;this.logger=new T("CacheService");i?this.logger.verbose(`cacheservice created using cache engine: ${i.constructor?.name}`):this.logger.verbose("cacheservice disabled")}async get(i){if(this.cache)return this.cache.get(i)}async hGet(i,e){if(!this.cache)return null;try{let t=await this.cache.hGet(i,e);return t?JSON.parse(t,Kn.BufferJSON.reviver):null}catch(t){return this.logger.error(t),null}}async set(i,e,t){this.cache&&this.cache.set(i,e,t)}async hSet(i,e,t){if(this.cache)try{let s=JSON.stringify(t,Kn.BufferJSON.replacer);await this.cache.hSet(i,e,s)}catch(s){this.logger.error(s)}}async has(i){if(this.cache)return this.cache.has(i)}async delete(i){if(this.cache)return this.cache.delete(i)}async hDelete(i,e){if(!this.cache)return!1;try{return await this.cache.hDelete(i,e),!0}catch(t){return this.logger.error(t),!1}}async deleteAll(i){if(this.cache)return this.cache.deleteAll(i)}async keys(i){if(this.cache)return this.cache.keys(i)}};var Xn=v(require("@ffmpeg-installer/ffmpeg"));var co=v(require("dayjs"));function po(p){let i=[];p.startsWith("+")&&(p=p.slice(1));let[e,t]=p.split("@");if(p.startsWith("55")){let s=e.slice(4,5)==="9"&&e.length===13?e:`${e.slice(0,4)}9${e.slice(4)}`,r=e.length===12?e:e.slice(0,4)+e.slice(5);i.push(s),i.push(r)}else if(e.startsWith("52")||e.startsWith("54")){let s="";e.startsWith("52")&&(s="1"),e.startsWith("54")&&(s="9");let r=e.slice(2,3)===s&&e.length===13?e:`${e.slice(0,2)}${s}${e.slice(2)}`,n=e.length===12?e:e.slice(0,2)+e.slice(3);i.push(r),i.push(n)}else i.push(p);return i.map(s=>`${s}@${t}`)}async function Ke(p){if(M.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let i=p.map(e=>{let t=e.remoteJid.startsWith("+")?e.remoteJid.slice(1):e.remoteJid,s=po(t);return B.isOnWhatsapp.upsert({create:{remoteJid:t,jidOptions:s.join(",")},update:{jidOptions:s.join(",")},where:{remoteJid:t}})});await B.$transaction(i)}}async function lo(p){let i=[];if(M.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let e=p.map(s=>po(s)).flat();i=(await B.isOnWhatsapp.findMany({where:{OR:e.map(s=>({jidOptions:{contains:s}})),updatedAt:{gte:(0,co.default)().subtract(M.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP_DAYS,"days").toDate()}}})).map(s=>({remoteJid:s.remoteJid,number:s.remoteJid.split("@")[0],jidOptions:s.jidOptions.split(",")}))}return i}var Tt=require("path"),Fe=process.cwd(),Ct=(0,Tt.join)(Fe,"instances"),Td=(0,Tt.join)(Fe,"src"),Cd=(0,Tt.join)(Fe,"store","auth"),uo=(0,Tt.join)(Fe,"store");var Ye=require("baileys"),go=v(require("fs/promises")),mo=v(require("path"));async function Yn(p){try{return!!await B.session.findUnique({where:{sessionId:p}})}catch{return!1}}async function wp(p,i){let e=await Yn(p);try{if(!e)return await B.session.create({data:{sessionId:p,creds:JSON.stringify(i)}});await B.session.update({where:{sessionId:p},data:{creds:JSON.stringify(i)}})}catch{return null}}async function bp(p){try{if(!await Yn(p))return null;let e=await B.session.findUnique({where:{sessionId:p}});return JSON.parse(e?.creds)}catch{return null}}async function Sp(p){try{if(!await Yn(p))return;await B.session.delete({where:{sessionId:p}})}catch{return}}async function Qn(p,i){let e=mo.default.join(Ct,p);await go.default.mkdir(e,{recursive:!0});async function t(o,a){let c=JSON.stringify(o,Ye.BufferJSON.replacer);if(a!="creds")return await i.hSet(p,a,o);await wp(p,c)}async function s(o){try{let a;return o!="creds"?await i.hGet(p,o):(a=await bp(p),JSON.parse(a,Ye.BufferJSON.reviver))}catch{return null}}async function r(o){try{if(o!="creds")return await i.hDelete(p,o);await Sp(p)}catch{return}}let n=await s("creds");return n||(n=(0,Ye.initAuthCreds)(),await t(n,"creds")),{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=Ye.WAProto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?t(d,l):r(l))}await Promise.all(a)}}},saveCreds:()=>t(n,"creds")}}var Qe=require("baileys"),ho=require("class-validator");var Ms=class{constructor(i){this.providerFiles=i;this.logger=new T("AuthStateProvider")}async authStateProvider(i){let[,e]=await this.providerFiles.create(i);if(e){this.logger.error(["Failed to create folder on file server",e?.message,e?.stack]);return}let t=async(o,a)=>{let c=JSON.stringify(o,Qe.BufferJSON.replacer),[u,d]=await this.providerFiles.write(i,a,{data:c});if(!d)return u},s=async o=>{let[a,c]=await this.providerFiles.read(i,o);if(!c&&(0,ho.isNotEmpty)(a?.data))return JSON.parse(JSON.stringify(a.data),Qe.BufferJSON.reviver)},r=async o=>{let[a,c]=await this.providerFiles.delete(i,o);if(!c)return a},n=await s("creds")||(0,Qe.initAuthCreds)();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=Qe.proto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await t(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}};var Ts=require("baileys");async function yo(p,i){let e=new T("useMultiFileAuthStateRedisDb"),t=async(o,a)=>{try{return await i.hSet(p,a,o)}catch(c){return e.error({localError:"writeData",error:c})}},s=async o=>{try{return await i.hGet(p,o)}catch(a){e.error({localError:"readData",error:a});return}},r=async o=>{try{return await i.hDelete(p,o)}catch(a){e.error({readData:"removeData",error:a})}},n=await s("creds")||(0,Ts.initAuthCreds)();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=Ts.proto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await t(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}var xe=v(require("axios")),R=v(require("baileys")),fo=require("child_process"),Z=require("class-validator"),wo=require("crypto"),Zn=v(require("fluent-ffmpeg")),bo=v(require("form-data")),So=require("fs"),Cs=v(require("long")),vt=v(require("mime")),er=v(require("node-cache")),Eo=v(require("node-cron")),Io=require("os"),vs=require("path"),at=v(require("pino")),Mo=v(require("qrcode")),To=v(require("qrcode-terminal")),Co=v(require("sharp")),ze=require("stream"),As=require("uuid"),zn=new Re(new Ce(M,"groups").getEngine());async function Ep(p){let i=(await import("mediainfo.js")).default,e=await i({format:"JSON"}),t,s;if(Buffer.isBuffer(p))t=p.length,s=async(c,u)=>p.slice(u,u+c);else if(typeof p=="string"){let c=await import("fs");t=(await c.promises.stat(p)).size;let d=await c.promises.open(p,"r");s=async(l,g)=>{let h=Buffer.alloc(l);return await d.read(h,0,l,g),h};try{let l=await e.analyzeData(()=>t,s),m=JSON.parse(l).media.track.find(f=>f["@type"]==="General").Duration;return Math.round(parseFloat(m))}finally{await d.close()}}else if(p instanceof ze.Readable){let c=[];for await(let d of p)c.push(d);let u=Buffer.concat(c);t=u.length,s=async(d,l)=>u.slice(l,l+d)}else throw new Error("Tipo de entrada n\xE3o suportado");let r=await e.analyzeData(()=>t,s),a=JSON.parse(r).media.track.find(c=>c["@type"]==="General").Duration;return Math.round(parseFloat(a))}var Rs=class extends ke{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.msgRetryCounterCache=new er.default;this.userDevicesCache=new er.default;this.endSession=!1;this.logBaileys=this.configService.get("LOG").BAILEYS;this.stateConnection={state:"close"};this.chatHandle={"chats.upsert":async e=>{let t=await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId},select:{remoteJid:!0}}),s=new Set(t.map(n=>n.remoteJid)),r=e.filter(n=>!s?.has(n.id)).map(n=>({remoteJid:n.id,instanceId:this.instanceId,name:n.name,unreadMessages:n.unreadCount!==void 0?n.unreadCount:0}));this.sendDataWebhook("chats.upsert",r),r.length>0&&this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.createMany({data:r,skipDuplicates:!0})},"chats.update":async e=>{let t=e.map(s=>({remoteJid:s.id,instanceId:this.instanceId}));this.sendDataWebhook("chats.update",t);for(let s of e)await this.prismaRepository.chat.updateMany({where:{instanceId:this.instanceId,remoteJid:s.id,name:s.name},data:{remoteJid:s.id}})},"chats.delete":async e=>{e.forEach(async t=>await this.prismaRepository.chat.deleteMany({where:{instanceId:this.instanceId,remoteJid:t}})),this.sendDataWebhook("chats.delete",[...e])}};this.contactHandle={"contacts.upsert":async e=>{try{let t=e.map(r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:null,instanceId:this.instanceId}));if(t.length>0){this.sendDataWebhook("contacts.upsert",t),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.createMany({data:t,skipDuplicates:!0});let r=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await Ke(r.map(n=>({remoteJid:n.remoteJid})))}this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importContacts&&t.length&&(this.chatwootService.addHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},t),ee.importHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},this.localChatwoot));let s=await Promise.all(e.map(async r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:(await this.profilePicture(r.id)).profilePictureUrl,instanceId:this.instanceId})));if(s.length>0){let r=s.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await Ke(r.map(n=>({remoteJid:n.remoteJid}))),this.sendDataWebhook("contacts.update",s),await Promise.all(s.map(async n=>{let o=this.prismaRepository.contact.updateMany({where:{remoteJid:n.remoteJid,instanceId:this.instanceId},data:{profilePicUrl:n.profilePicUrl}});if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let a={instanceName:this.instance.name,instanceId:this.instance.id},c=await this.chatwootService.findContact(a,n.remoteJid.split("@")[0]);if(!c)return;this.chatwootService.updateContact(a,c.id,{name:n.pushName,avatar_url:n.profilePicUrl})}return o}))}}catch(t){console.error(t),this.logger.error(`Error: ${t.message}`)}},"contacts.update":async e=>{let t=[];for await(let n of e)t.push({remoteJid:n.id,pushName:n?.name??n?.verifiedName,profilePicUrl:(await this.profilePicture(n.id)).profilePictureUrl,instanceId:this.instanceId});this.sendDataWebhook("contacts.update",t);let s=t.map(n=>this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:n.remoteJid,instanceId:n.instanceId}},create:n,update:n}));await this.prismaRepository.$transaction(s);let r=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await Ke(r.map(n=>({remoteJid:n.remoteJid})))}};this.messageHandle={"messaging-history.set":async({messages:e,chats:t,contacts:s,isLatest:r,progress:n,syncType:o})=>{try{o===R.proto.HistorySync.HistorySyncType.ON_DEMAND&&console.log("received on-demand history sync, messages=",e),console.log(`recv ${t.length} chats, ${s.length} contacts, ${e.length} msgs (is latest: ${r}, progress: ${n}%), type: ${o}`);let a={instanceName:this.instance.name},c=null;if(this.configService.get("CHATWOOT").ENABLED){let h=this.localChatwoot?.enabled?this.localChatwoot.daysLimitImportMessages:1e3,m=new Date;if(c=new Date(m.setDate(m.getDate()-h)).getTime()/1e3,!(Math.max(...e.map(S=>S.messageTimestamp))>=c))return}let u=[],d=new Set((await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).map(h=>h.remoteJid));for(let h of t)d?.has(h.id)||u.push({remoteJid:h.id,instanceId:this.instanceId,name:h.name});this.sendDataWebhook("chats.set",u),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.chat.createMany({data:u,skipDuplicates:!0});let l=[],g=new Set(ee.getRepositoryMessagesCache(a)??(await this.prismaRepository.message.findMany({select:{key:!0},where:{instanceId:this.instanceId}})).map(h=>h.key.id));ee.getRepositoryMessagesCache(a)===null&&ee.setRepositoryMessagesCache(a,g);for(let h of e)!h.message||!h.key||!h.messageTimestamp||(Cs.default.isLong(h?.messageTimestamp)&&(h.messageTimestamp=h.messageTimestamp?.toNumber()),!(this.configService.get("CHATWOOT").ENABLED&&h.messageTimestamp<=c)&&(g?.has(h.key.id)||l.push(this.prepareMessage(h))));this.sendDataWebhook("messages.set",[...l]),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.message.createMany({data:l,skipDuplicates:!0}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&l.length>0&&this.chatwootService.addHistoryMessages(a,l.filter(h=>!ee.isIgnorePhoneNumber(h.key?.remoteJid))),await this.contactHandle["contacts.upsert"](s.filter(h=>!!h.notify||!!h.name).map(h=>({id:h.id,name:h.name??h.notify}))),s=void 0,e=void 0,t=void 0}catch(a){this.logger.error(a)}},"messages.upsert":async({messages:e,type:t,requestId:s},r)=>{try{for(let n of e){if(n.message?.conversation||n.message?.extendedTextMessage?.text){let g=n.message?.conversation||n.message?.extendedTextMessage?.text;if(g=="requestPlaceholder"&&!s){let h=await this.client.requestPlaceholderResend(n.key);console.log("requested placeholder resync, id=",h)}else s&&console.log("Message received from phone, id=",s,n);if(g=="onDemandHistSync"){let h=await this.client.fetchMessageHistory(50,n.key,n.messageTimestamp);console.log("requested on-demand sync, id=",h)}}if(n.message?.protocolMessage?.editedMessage||n.message?.editedMessage?.message){let g=n.message?.protocolMessage||n.message?.editedMessage?.message?.protocolMessage;g&&(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.edit",{instanceName:this.instance.name,instanceId:this.instance.id},g),await this.sendDataWebhook("messages.edited",g))}if(n.messageStubParameters&&n.messageStubParameters[0]==="Message absent from node"){this.logger.info(`Recovering message lost messageId: ${n.key.id}`),await this.baileysCache.set(n.key.id,{message:n,retry:0});continue}if((await this.baileysCache.get(n.key.id)||null)&&(this.logger.info("Recovered message lost"),await this.baileysCache.delete(n.key.id)),t!=="notify"&&t!=="append"||n.message?.protocolMessage||n.message?.pollUpdateMessage||!n?.message||(Cs.default.isLong(n.messageTimestamp)&&(n.messageTimestamp=n.messageTimestamp?.toNumber()),r?.groupsIgnore&&n.key.remoteJid.includes("@g.us")))continue;if(await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:n.key.remoteJid}})){let g={remoteJid:n.key.remoteJid,instanceId:this.instanceId,name:n.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[g]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:g})}let c=this.prepareMessage(n),u=n?.message?.imageMessage||n?.message?.videoMessage||n?.message?.stickerMessage||n?.message?.documentMessage||n?.message?.documentWithCaptionMessage||n?.message?.ptvMessage||n?.message?.audioMessage;if(this.localSettings.readMessages&&n.key.id!=="status@broadcast"&&await this.client.readMessages([n.key]),this.localSettings.readStatus&&n.key.id==="status@broadcast"&&await this.client.readMessages([n.key]),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!n.key.id.includes("@broadcast")){let g=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instance.id},c);g?.id&&(c.chatwootMessageId=g.id,c.chatwootInboxId=g.inbox_id,c.chatwootConversationId=g.conversation_id)}if(this.configService.get("OPENAI").ENABLED&&n?.message?.audioMessage){let g=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});g&&g.openaiCredsId&&g.speechToText&&(c.message.speechToText=await this.openaiService.speechToText(g.OpenaiCreds,n,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let g=await this.prismaRepository.message.create({data:c});if(n.key.fromMe===!1?g.status===X[3]?(this.logger.log(`Update not read messages ${n.key.remoteJid}`),await this.updateChatUnreadMessages(n.key.remoteJid)):g.status===X[4]&&(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)):(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)),u&&this.configService.get("S3").ENABLE)try{let h=n,m=await this.getBase64FromMediaMessage({message:h},!0),{buffer:f,mediaType:b,fileName:S,size:w}=m,I=vt.default.getType(S).toString(),E=(0,vs.join)(`${this.instance.id}`,n.key.remoteJid,b,S);await Et(E,f,w.fileLength?.low,{"Content-Type":I}),await this.prismaRepository.media.create({data:{messageId:g.id,instanceId:this.instanceId,type:b,fileName:E,mimetype:I}});let C=await Ve(E);c.message.mediaUrl=C,await this.prismaRepository.message.update({where:{id:g.id},data:c})}catch(h){this.logger.error(["Error on upload file to minio",h?.message,h?.stack])}}if(this.localWebhook.enabled&&u&&this.localWebhook.webhookBase64){let g=await(0,R.downloadMediaMessage)({key:n.key,message:n?.message},"buffer",{},{logger:(0,at.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage});c.message.base64=g?g.toString("base64"):void 0}this.logger.log(c),this.sendDataWebhook("messages.upsert",c),await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName});let d=await this.prismaRepository.contact.findFirst({where:{remoteJid:n.key.remoteJid,instanceId:this.instanceId}}),l={remoteJid:n.key.remoteJid,pushName:n.key.fromMe||n.key.fromMe==null?"":n.pushName,profilePicUrl:(await this.profilePicture(n.key.remoteJid)).profilePictureUrl,instanceId:this.instanceId};if(l.remoteJid!=="status@broadcast"){if(d){this.sendDataWebhook("contacts.update",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},create:l,update:l});continue}this.sendDataWebhook("contacts.upsert",l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},update:l,create:l}),l.remoteJid.includes("@s.whatsapp")&&await Ke([{remoteJid:l.remoteJid}])}}}catch(n){this.logger.error(n)}},"messages.update":async(e,t)=>{this.logger.log(`Update messages ${JSON.stringify(e,void 0,2)}`);let s={};for await(let{key:r,update:n}of e)if(!(t?.groupsIgnore&&r.remoteJid?.includes("@g.us"))&&(X[n.status]==="READ"&&r.fromMe&&this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.read",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r}),r.remoteJid!=="status@broadcast")){let o;if(n.pollUpdates){let d=await this.getMessage(r);d&&(o=(0,R.getAggregateVotesInPollMessage)({message:d,pollUpdates:n.pollUpdates}))}let a=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:r.id}}});if(!a)continue;if(n.message===null&&n.status===void 0){this.sendDataWebhook("messages.delete",r);let d={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:"DELETED",instanceId:this.instanceId};this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r});continue}else n.status!==void 0&&X[n.status]!==a.status&&(!r.fromMe&&r.remoteJid&&(s[r.remoteJid]=!0,X[n.status]===X[4]&&(this.logger.log(`Update as read ${r.remoteJid} - ${a.messageTimestamp}`),this.updateMessagesReadedByTimestamp(r.remoteJid,a.messageTimestamp))),await this.prismaRepository.message.update({where:{id:a.id},data:{status:X[n.status]}}));let c={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:X[n.status],pollUpdates:o,instanceId:this.instanceId};if(this.sendDataWebhook("messages.update",c),this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:c}),await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:c.remoteJid}})){let d={remoteJid:c.remoteJid,instanceId:this.instanceId,name:c.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[d]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:d})}}await Promise.all(Object.keys(s).map(r=>this.updateChatUnreadMessages(r)))}};this.groupHandler={"groups.upsert":e=>{this.sendDataWebhook("groups.upsert",e)},"groups.update":e=>{this.sendDataWebhook("groups.update",e),e.forEach(t=>{(0,R.isJidGroup)(t.id)&&this.updateGroupMetadataCache(t.id)})},"group-participants.update":e=>{this.sendDataWebhook("group-participants.update",e),this.updateGroupMetadataCache(e.id)}};this.labelHandle={"labels.edit":async e=>{let s=(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).find(n=>n.labelId===e.id);if(e.deleted&&s){await this.prismaRepository.label.delete({where:{labelId_instanceId:{instanceId:this.instanceId,labelId:e.id}}}),this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name});return}let r=e.name.replace(/[^\x20-\x7E]/g,"");if(!s||s.color!==`${e.color}`||s.name!==r){if(this.configService.get("DATABASE").SAVE_DATA.LABELS){let n={color:`${e.color}`,name:r,labelId:e.id,predefinedId:e.predefinedId,instanceId:this.instanceId};await this.prismaRepository.label.upsert({where:{labelId_instanceId:{instanceId:n.instanceId,labelId:n.labelId}},update:n,create:n})}this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name})}},"labels.association":async(e,t)=>{if(t.SAVE_DATA.CHATS){let r=(await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).find(n=>n.remoteJid===e.association.chatId);if(r){let o=[...Array.isArray(r.labels)?r.labels.map(a=>String(a)):[]];e.type==="remove"?o=o.filter(a=>a!==e.association.labelId):e.type==="add"&&(o=[...o,e.association.labelId]),await this.prismaRepository.chat.update({where:{id:r.id},data:{labels:o}})}}this.sendDataWebhook("labels.association",{instance:this.instance.name,type:e.type,chatId:e.association.chatId,labelId:e.association.labelId})}};this.mapType=new Map([["reply","quick_reply"],["copy","cta_copy"],["url","cta_url"],["call","cta_call"],["pix","payment_info"]]);this.mapKeyType=new Map([["phone","PHONE"],["email","EMAIL"],["cpf","CPF"],["cnpj","CNPJ"],["random","EVP"]]);this.getGroupMetadataCache=async e=>{if(!(0,R.isJidGroup)(e))return null;let t=this.configService.get("CACHE");if(t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""||t?.LOCAL?.ENABLED){if(await zn?.has(e)){console.log(`Cache request for group: ${e}`);let s=await zn.get(e);return Date.now()-s.timestamp>36e5&&await this.updateGroupMetadataCache(e),s.data}return console.log(`Cache request for group: ${e} - not found`),await this.updateGroupMetadataCache(e)}return await this.findGroup({groupJid:e},"inner")};this.instance.qrcode={count:0},this.authStateProvider=new Ms(this.providerFiles)}get connectionStatus(){return this.stateConnection}async logoutInstance(){await this.client?.logout("Log out instance: "+this.instanceName),this.client?.ws?.close(),await this.prismaRepository.session.findFirst({where:{sessionId:this.instanceId}})&&await this.prismaRepository.session.delete({where:{sessionId:this.instanceId}})}async getProfileName(){let e=this.client.user?.name??this.client.user?.verifiedName;if(!e){let t=await this.prismaRepository.session.findUnique({where:{sessionId:this.instanceId}});if(t){let s=JSON.parse(JSON.stringify(t.creds),R.BufferJSON.reviver);e=s.me?.name||s.me?.verifiedName}}return e}async getProfileStatus(){return(await this.client.fetchStatus(this.instance.wuid))?.status}get profilePictureUrl(){return this.instance.profilePictureUrl}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async connectionUpdate({qr:e,connection:t,lastDisconnect:s}){if(e){if(this.instance.qrcode.count===this.configService.get("QRCODE").LIMIT)return this.sendDataWebhook("qrcode.updated",{message:"QR code limit reached, please login again",statusCode:R.DisconnectReason.badSession}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{message:"QR code limit reached, please login again",statusCode:R.DisconnectReason.badSession}),this.sendDataWebhook("connection.update",{instance:this.instance.name,state:"refused",statusReason:R.DisconnectReason.connectionClosed}),this.endSession=!0,this.eventEmitter.emit("no.connection",this.instance.name);this.instance.qrcode.count++;let n={margin:3,scale:4,errorCorrectionLevel:"H",color:{light:"#ffffff",dark:this.configService.get("QRCODE").COLOR}};this.phoneNumber?(await(0,R.delay)(1e3),this.instance.qrcode.pairingCode=await this.client.requestPairingCode(this.phoneNumber)):this.instance.qrcode.pairingCode=null,Mo.default.toDataURL(e,n,(o,a)=>{if(o){this.logger.error("Qrcode generate failed:"+o.toString());return}this.instance.qrcode.base64=a,this.instance.qrcode.code=e,this.sendDataWebhook("qrcode.updated",{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}})}),To.default.generate(e,{small:!0},o=>this.logger.log(`
{ instance: ${this.instance.name} pairingCode: ${this.instance.qrcode.pairingCode}, qrcodeCount: ${this.instance.qrcode.count} }
`+o)),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"connecting"}})}if(t&&(this.stateConnection={state:t,statusReason:s?.error?.output?.statusCode??200},this.sendDataWebhook("connection.update",{instance:this.instance.name,...this.stateConnection})),t==="close"){let r=s?.error?.output?.statusCode;![R.DisconnectReason.loggedOut,R.DisconnectReason.forbidden,402,406].includes(r)?await this.connectToWhatsapp(this.phoneNumber):(this.sendDataWebhook("status.instance",{instance:this.instance.name,status:"closed",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"close",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"closed"}),this.eventEmitter.emit("logout.instance",this.instance.name,"inner"),this.client?.ws?.close(),this.client.end(new Error("Close connection")))}if(t==="open"){this.instance.wuid=this.client.user.id.replace(/:\d+/,"");try{let o=await this.profilePicture(this.instance.wuid);this.instance.profilePictureUrl=o.profilePictureUrl}catch{this.instance.profilePictureUrl=null}let r=this.instance.wuid.split("@")[0].padEnd(30," "),n=this.instance.name;this.logger.info(`
        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u2502    CONNECTED TO WHATSAPP     \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`.replace(/^ +/gm,"  ")),this.logger.info(`
        wuid: ${r}
        name: ${n}
      `),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{ownerJid:this.instance.wuid,profileName:await this.getProfileName(),profilePicUrl:this.instance.profilePictureUrl,connectionStatus:"open"}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&(this.chatwootService.eventWhatsapp("connection.update",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"open"}),this.syncChatwootLostMessages())}}async getMessage(e,t=!1){try{let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,key:{path:["id"],equals:e.id}}});if(t)return s[0];if(s[0].message?.pollCreationMessage){let r=s[0].message?.messageContextInfo?.messageSecret;if(typeof r=="string")return{messageContextInfo:{messageSecret:Buffer.from(r,"base64")},pollCreationMessage:s[0].message?.pollCreationMessage}}return s[0].message}catch{return{conversation:""}}}async defineAuthState(){let e=this.configService.get("DATABASE"),t=this.configService.get("CACHE");if(this.configService.get("PROVIDER")?.ENABLED)return await this.authStateProvider.authStateProvider(this.instance.id);if(t?.REDIS.ENABLED&&t?.REDIS.SAVE_INSTANCES)return this.logger.info("Redis enabled"),await yo(this.instance.id,this.cache);if(e.SAVE_DATA.INSTANCE)return await Qn(this.instance.id,this.cache)}async createClient(e){this.instance.authState=await this.defineAuthState();let t=this.configService.get("CONFIG_SESSION_PHONE"),s={};if(e||this.phoneNumber)this.phoneNumber=e,this.logger.info(`Phone number: ${e}`);else{let c=[t.CLIENT,t.NAME,(0,Io.release)()];s={browser:c},this.logger.info(`Browser: ${c}`)}let r,n;t.VERSION?(r=t.VERSION.split("."),n=`Baileys version env: ${r}`):(r=(await(0,R.fetchLatestBaileysVersion)()).version,n=`Baileys version: ${r}`),this.logger.info(n),this.logger.info(`Group Ignore: ${this.localSettings.groupsIgnore}`);let o;if(this.localProxy?.enabled)if(this.logger.info("Proxy enabled: "+this.localProxy?.host),this.localProxy?.host?.includes("proxyscrape"))try{let d=(await xe.default.get(this.localProxy?.host)).data.split(`\r
`),l=Math.floor(Math.random()*Math.floor(d.length)),g="http://"+d[l];o={agent:Ee(g),fetchAgent:Ee(g)}}catch{this.localProxy.enabled=!1}else o={agent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password}),fetchAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})};let a={...o,version:r,logger:(0,at.default)({level:this.logBaileys}),printQRInTerminal:!1,auth:{creds:this.instance.authState.state.creds,keys:(0,R.makeCacheableSignalKeyStore)(this.instance.authState.state.keys,(0,at.default)({level:"error"}))},msgRetryCounterCache:this.msgRetryCounterCache,generateHighQualityLinkPreview:!0,getMessage:async c=>await this.getMessage(c),...s,markOnlineOnConnect:this.localSettings.alwaysOnline,retryRequestDelayMs:350,maxMsgRetryCount:4,fireInitQueries:!0,connectTimeoutMs:3e4,keepAliveIntervalMs:3e4,qrTimeout:45e3,emitOwnEvents:!1,shouldIgnoreJid:c=>{let u=this.localSettings.groupsIgnore&&(0,R.isJidGroup)(c),d=!this.localSettings.readStatus&&(0,R.isJidBroadcast)(c),l=(0,R.isJidNewsletter)(c);return u||d||l},syncFullHistory:this.localSettings.syncFullHistory,shouldSyncHistoryMessage:c=>this.historySyncNotification(c),cachedGroupMetadata:this.getGroupMetadataCache,userDevicesCache:this.userDevicesCache,transactionOpts:{maxCommitRetries:10,delayBetweenTriesMs:3e3},patchMessageBeforeSending(c){return c.deviceSentMessage?.message?.listMessage?.listType===R.proto.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.deviceSentMessage.message.listMessage.listType=R.proto.Message.ListMessage.ListType.SINGLE_SELECT),c.listMessage?.listType==R.proto.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.listMessage.listType=R.proto.Message.ListMessage.ListType.SINGLE_SELECT),c}};return this.endSession=!1,this.client=(0,R.default)(a),this.eventHandler(),this.phoneNumber=e,this.client}async connectToWhatsapp(e){try{return this.loadChatwoot(),this.loadSettings(),this.loadWebhook(),this.loadProxy(),await this.createClient(e)}catch(t){throw this.logger.error(t),new F(t?.toString())}}async reloadConnection(){try{return await this.createClient(this.phoneNumber)}catch(e){throw this.logger.error(e),new F(e?.toString())}}eventHandler(){this.client.ev.process(async e=>{if(!this.endSession){let t=this.configService.get("DATABASE"),s=await this.findSettings();if(e.call){let r=e.call[0];if(s?.rejectCall&&r.status=="offer"&&this.client.rejectCall(r.id,r.from),s?.msgCall?.trim().length>0&&r.status=="offer"){let n=await this.client.sendMessage(r.from,{text:s.msgCall});this.client.ev.emit("messages.upsert",{messages:[n],type:"notify"})}this.sendDataWebhook("call",r)}if(e["connection.update"]&&this.connectionUpdate(e["connection.update"]),e["creds.update"]&&this.instance.authState.saveCreds(),e["messaging-history.set"]){let r=e["messaging-history.set"];this.messageHandle["messaging-history.set"](r)}if(e["messages.upsert"]){let r=e["messages.upsert"];this.messageHandle["messages.upsert"](r,s)}if(e["messages.update"]){let r=e["messages.update"];this.messageHandle["messages.update"](r,s)}if(e["message-receipt.update"]){let r=e["message-receipt.update"],n={};for(let o of r)typeof o.key.remoteJid=="string"&&typeof o.receipt.readTimestamp=="number"&&(n[o.key.remoteJid]=o.receipt.readTimestamp);await Promise.all(Object.keys(n).map(async o=>this.updateMessagesReadedByTimestamp(o,n[o])))}if(e["presence.update"]){let r=e["presence.update"];if(s?.groupsIgnore&&r.id.includes("@g.us"))return;this.sendDataWebhook("presence.update",r)}if(!s?.groupsIgnore){if(e["groups.upsert"]){let r=e["groups.upsert"];this.groupHandler["groups.upsert"](r)}if(e["groups.update"]){let r=e["groups.update"];this.groupHandler["groups.update"](r)}if(e["group-participants.update"]){let r=e["group-participants.update"];this.groupHandler["group-participants.update"](r)}}if(e["chats.upsert"]){let r=e["chats.upsert"];this.chatHandle["chats.upsert"](r)}if(e["chats.update"]){let r=e["chats.update"];this.chatHandle["chats.update"](r)}if(e["chats.delete"]){let r=e["chats.delete"];this.chatHandle["chats.delete"](r)}if(e["contacts.upsert"]){let r=e["contacts.upsert"];this.contactHandle["contacts.upsert"](r)}if(e["contacts.update"]){let r=e["contacts.update"];this.contactHandle["contacts.update"](r)}if(e["labels.association"]){let r=e["labels.association"];this.labelHandle["labels.association"](r,t);return}if(e["labels.edit"]){let r=e["labels.edit"];this.labelHandle["labels.edit"](r);return}}})}historySyncNotification(e){let t={instanceName:this.instance.name};return this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&this.isSyncNotificationFromUsedSyncType(e)&&(e.chunkOrder===1&&this.chatwootService.startImportHistoryMessages(t),e.progress===100&&setTimeout(()=>{this.chatwootService.importHistoryMessages(t)},1e4)),!0}isSyncNotificationFromUsedSyncType(e){return this.localSettings.syncFullHistory&&e?.syncType===2||!this.localSettings.syncFullHistory&&e?.syncType===3}async profilePicture(e){let t=this.createJid(e);try{let s=await this.client.profilePictureUrl(t,"image");return{wuid:t,profilePictureUrl:s}}catch{return{wuid:t,profilePictureUrl:null}}}async getStatus(e){let t=this.createJid(e);try{return{wuid:t,status:(await this.client.fetchStatus(t))?.status}}catch{return{wuid:t,status:null}}}async fetchProfile(e,t){let s=t?this.createJid(t):this.client?.user?.id,r=(await this.whatsappNumber({numbers:[s]}))?.shift();if(!r.exists)throw new y(r);try{if(t){let n=(await this.whatsappNumber({numbers:[s]}))?.shift(),o=await this.profilePicture(n?.jid),a=await this.getStatus(n?.jid),c=await this.fetchBusinessProfile(n?.jid);return{wuid:n?.jid||s,name:n?.name,numberExists:n?.exists,picture:o?.profilePictureUrl,status:a?.status,isBusiness:c.isBusiness,email:c?.email,description:c?.description,website:c?.website?.shift()}}else{let n=e?[e]:null,o=await k.instanceInfo(n),a=await this.fetchBusinessProfile(s);return{wuid:s,name:o?.profileName,numberExists:!0,picture:o?.profilePicUrl,status:o?.connectionStatus,isBusiness:a.isBusiness,email:a?.email,description:a?.description,website:a?.website?.shift()}}}catch{return{wuid:s,name:null,picture:null,status:null,os:null,isBusiness:!1}}}async offerCall({number:e,isVideo:t,callDuration:s}){let r=this.createJid(e);try{let n=await this.client.offerCall(r,t);return setTimeout(()=>this.client.terminateCall(n.id,n.to),s*1e3),n}catch(n){return n}}async sendMessage(e,t,s,r,n,o,a){e=e.toLowerCase();let c={quoted:n};if((0,R.isJidGroup)(e)&&(c.useCachedGroupMetadata=!0),a&&(c.ephemeralExpiration=a),o?c.messageId=o:c.messageId="3EB0"+(0,wo.randomBytes)(18).toString("hex").toUpperCase(),t.viewOnceMessage){let u=(0,R.generateWAMessageFromContent)(e,t,{timestamp:new Date,userJid:this.instance.wuid,messageId:o,quoted:n}),d=await this.client.relayMessage(e,t,{messageId:o});u.key={id:d,remoteJid:e,participant:(0,R.isJidUser)(e)?e:void 0,fromMe:!0};for(let[l,g]of Object.entries(u))(!g||((0,Z.isArray)(g)&&g.length)===0)&&delete u[l];return u}if(!t.audio&&!t.poll&&!t.sticker&&!t.conversation&&e!=="status@broadcast"&&t.reactionMessage)return await this.client.sendMessage(e,{react:{text:t.reactionMessage.text,key:t.reactionMessage.key}},c);if(t.conversation)return await this.client.sendMessage(e,{text:t.conversation,mentions:s,linkPreview:r},c);if(!t.audio&&!t.poll&&!t.sticker&&e!="status@broadcast")return await this.client.sendMessage(e,{forward:{key:{remoteJid:this.instance.wuid,fromMe:!0},message:t},mentions:s},c);if(e==="status@broadcast"){let u;t.status.option.allContacts?u=(await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{not:{endsWith:"@g.us"}}}})).map(b=>b.remoteJid):u=t.status.option.statusJidList;let d=10,l=Array.from({length:Math.ceil(u.length/d)},(f,b)=>u.slice(b*d,b*d+d)),g=null,h,m=l.shift();return m&&(h=await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:m}),g=h.key.id),l.length===0||await Promise.allSettled(l.map(async f=>await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:f,messageId:g}))),h}return await this.client.sendMessage(e,t,c)}async sendMessageWithTyping(e,t,s,r=!1){let n=(await this.whatsappNumber({numbers:[e]}))?.shift();if(!n.exists&&!(0,R.isJidGroup)(n.jid)&&!n.jid.includes("@broadcast"))throw new y(n);let o=n.jid.toLowerCase();this.logger.verbose(`Sending message to ${o}`);try{if(s?.delay)if(this.logger.verbose(`Typing for ${s.delay}ms to ${o}`),s.delay>2e4){let h=s.delay;for(;h>2e4;)await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(2e4),await this.client.sendPresenceUpdate("paused",o),h-=2e4;h>0&&(await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(h),await this.client.sendPresenceUpdate("paused",o))}else await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(s.delay),await this.client.sendPresenceUpdate("paused",o);let a=s?.linkPreview!=!1?void 0:!1,c;if(s?.quoted){let h=s?.quoted,m=h?.message?h:await this.getMessage(h.key,!0);m&&(c=m)}let u,d;if((0,R.isJidGroup)(o)){let h;try{let m=this.configService.get("CACHE");!m.REDIS.ENABLED&&!m.LOCAL.ENABLED?h=await this.findGroup({groupJid:o},"inner"):h=await this.getGroupMetadataCache(o)}catch{throw new W("Group not found")}if(!h)throw new W("Group not found");s?.mentionsEveryOne?d=h.participants.map(m=>m.id):s.mentioned?.length&&(d=s.mentioned.map(m=>{let f=this.createJid(m);return(0,R.isJidGroup)(f)?null:f})),u=await this.sendMessage(o,t,d,a,c,null,h?.ephemeralDuration)}else u=await this.sendMessage(o,t,d,a,c);Cs.default.isLong(u?.messageTimestamp)&&(u.messageTimestamp=u.messageTimestamp?.toNumber());let l=this.prepareMessage(u),g=u?.message?.imageMessage||u?.message?.videoMessage||u?.message?.stickerMessage||u?.message?.ptvMessage||u?.message?.documentMessage||u?.message?.documentWithCaptionMessage||u?.message?.ptvMessage||u?.message?.audioMessage;if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("OPENAI").ENABLED&&l?.message?.audioMessage){let h=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});h&&h.openaiCredsId&&h.speechToText&&(l.message.speechToText=await this.openaiService.speechToText(h.OpenaiCreds,l,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let h=await this.prismaRepository.message.create({data:l});if(g&&this.configService.get("S3").ENABLE)try{let m=l,f=await this.getBase64FromMediaMessage({message:m},!0),{buffer:b,mediaType:S,fileName:w,size:I}=f,E=vt.default.getType(w).toString(),C=(0,vs.join)(`${this.instance.id}`,l.key.remoteJid,`${l.key.id}`,S,w);await Et(C,b,I.fileLength?.low,{"Content-Type":E}),await this.prismaRepository.media.create({data:{messageId:h.id,instanceId:this.instanceId,type:S,fileName:C,mimetype:E}});let O=await Ve(C);l.message.mediaUrl=O,await this.prismaRepository.message.update({where:{id:h.id},data:l})}catch(m){this.logger.error(["Error on upload file to minio",m?.message,m?.stack])}}if(this.localWebhook.enabled&&g&&this.localWebhook.webhookBase64){let h=await(0,R.downloadMediaMessage)({key:l.key,message:l?.message},"buffer",{},{logger:(0,at.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage});l.message.base64=h?h.toString("base64"):void 0}return this.logger.log(l),this.sendDataWebhook("send.message",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Pe.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:l.key.remoteJid,msg:l,pushName:l.pushName,isIntegration:r}),l}catch(a){throw this.logger.error(a),new y(a.toString())}}async sendPresence(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!(0,R.isJidGroup)(s.jid)&&!s.jid.includes("@broadcast"))throw new y(s);let r=s.jid;if(e?.delay&&e?.delay>2e4){let n=e?.delay;for(;n>2e4;)await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await(0,R.delay)(2e4),await this.client.sendPresenceUpdate("paused",r),n-=2e4;n>0&&(await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await(0,R.delay)(n),await this.client.sendPresenceUpdate("paused",r))}else await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await(0,R.delay)(e?.delay),await this.client.sendPresenceUpdate("paused",r);return{presence:e.presence}}catch(t){throw this.logger.error(t),new y(t.toString())}}async setPresence(e){try{return await this.client.sendPresenceUpdate(e.presence),{presence:e.presence}}catch(t){throw this.logger.error(t),new y(t.toString())}}async textMessage(e,t=!1){let s=e.text;if(!s||s.trim().length===0)throw new y("Text is required");return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async pollMessage(e){return await this.sendMessageWithTyping(e.number,{poll:{name:e.name,selectableCount:e.selectableCount,values:e.values}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async formatStatusMessage(e){if(!e.type)throw new y("Type is required");if(!e.content)throw new y("Content is required");if(e.allContacts){let t=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId}});if(!t.length)throw new y("Contacts not found");e.statusJidList=t.filter(s=>s.pushName).map(s=>s.remoteJid)}if(!e.statusJidList?.length&&!e.allContacts)throw new y("StatusJidList is required");if(e.type==="text"){if(!e.backgroundColor)throw new y("Background color is required");if(!e.font)throw new y("Font is required");return{content:{text:e.content},option:{backgroundColor:e.backgroundColor,font:e.font,statusJidList:e.statusJidList}}}if(e.type==="image")return{content:{image:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="video")return{content:{video:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="audio"){let t=await this.processAudioMp4(e.content);if(Buffer.isBuffer(t))return{content:{audio:t,ptt:!0,mimetype:"audio/ogg; codecs=opus"},option:{statusJidList:e.statusJidList}};throw new F(t)}throw new y("Type not found")}async statusMessage(e,t){let s={...e};t&&(s.content=t.buffer.toString("base64"));let r=await this.formatStatusMessage(s);return await this.sendMessageWithTyping("status@broadcast",{status:r})}async prepareMediaMessage(e){try{let t=e.mediatype==="ptv"?"video":e.mediatype,s=await(0,R.prepareWAMessageMedia)({[t]:(0,Z.isURL)(e.media)?{url:e.media}:Buffer.from(e.media,"base64")},{upload:this.client.waUploadToServer}),r=e.mediatype+"Message";if(e.mediatype==="document"&&!e.fileName){let a=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=a[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let n;if(e.mimetype)n=e.mimetype;else if(n=vt.default.getType(e.fileName),!n&&(0,Z.isURL)(e.media)){let o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),n=(await xe.default.get(e.media,o)).headers["content-type"]}if(e.mediatype==="ptv"){if(s[r]=s[t+"Message"],n="video/mp4",!s[r])throw new Error("Failed to prepare video message");try{let o;if((0,Z.isURL)(e.media))o=e.media;else{let c=Buffer.from(e.media,"base64");if(!c||c.length===0)throw new Error("Invalid media buffer");o=c}let a=await Ep(o);if(!a||a<=0)throw new Error("Invalid media duration");this.logger.verbose(`Video duration: ${a} seconds`),s[r].seconds=a}catch(o){throw this.logger.error("Error getting video duration:"),this.logger.error(o),new Error(`Failed to get video duration: ${o.message}`)}}return s[r].caption=e?.caption,s[r].mimetype=n,s[r].fileName=e.fileName,e.mediatype==="video"&&(s[r].jpegThumbnail=Uint8Array.from((0,So.readFileSync)((0,vs.join)(process.cwd(),"public","images","video-cover.png"))),s[r].gifPlayback=!1),(0,R.generateWAMessageFromContent)("",{[r]:{...s[r]}},{userJid:this.instance.wuid})}catch(t){throw this.logger.error(t),new F(t?.toString()||t)}}async convertToWebP(e){try{let t;if((0,Z.isBase64)(e)){let r=e.replace(/^data:image\/(jpeg|png|gif);base64,/,"");t=Buffer.from(r,"base64")}else{let r=new Date().getTime(),n=`${e}?timestamp=${r}`,o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})});let a=await xe.default.get(n,o);t=Buffer.from(a.data,"binary")}return await(0,Co.default)(t).webp().toBuffer()}catch(t){throw console.error("Erro ao converter a imagem para WebP:",t),t}}async mediaSticker(e,t){let s={...e};t&&(s.sticker=t.buffer.toString("base64"));let r=await this.convertToWebP(e.sticker),n=e.sticker.includes(".gif");return await this.sendMessageWithTyping(e.number,{sticker:r,gifPlayback:n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async ptvMessage(e,t,s=!1){let r={number:e.number,media:e.video,mediatype:"ptv",delay:e?.delay,quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudioMp4(e){let t;if((0,Z.isURL)(e))t=(await xe.default.get(e,{responseType:"stream"})).data;else{let s=Buffer.from(e,"base64");t=new ze.PassThrough,t.end(s)}return new Promise((s,r)=>{let n=(0,fo.spawn)(Xn.default.path,["-i","pipe:0","-vn","-ab","128k","-ar","44100","-f","mp4","-movflags","frag_keyframe+empty_moov","pipe:1"]),o=[],a="";n.stdout.on("data",c=>{o.push(c)}),n.stderr.on("data",c=>{a+=c.toString(),this.logger.verbose(`ffmpeg stderr: ${c}`)}),n.on("error",c=>{console.error("Error in ffmpeg process",c),r(c)}),n.on("close",c=>{if(c===0){this.logger.verbose("Audio converted to mp4");let u=Buffer.concat(o);s(u)}else this.logger.error(`ffmpeg exited with code ${c}`),this.logger.error(`ffmpeg stderr: ${a}`),r(new Error(`ffmpeg exited with code ${c}: ${a}`))}),t.pipe(n.stdin),t.on("error",c=>{console.error("Error in inputStream",c),n.stdin.end(),r(c)})})}async processAudio(e){if(process.env.API_AUDIO_CONVERTER){this.logger.verbose("Using audio converter API");let t=new bo.default;(0,Z.isURL)(e)?t.append("url",e):t.append("base64",e);let{data:s}=await xe.default.post(process.env.API_AUDIO_CONVERTER,t,{headers:{...t.getHeaders(),apikey:process.env.API_AUDIO_CONVERTER_KEY}});if(!s.audio)throw new F("Failed to convert audio");return this.logger.verbose("Audio converted"),Buffer.from(s.audio,"base64")}else{let t;if((0,Z.isURL)(e)){let s=new Date().getTime(),r=`${e}?timestamp=${s}`,n={responseType:"stream"};t=(await xe.default.get(r,n)).data.pipe(new ze.PassThrough)}else{let s=Buffer.from(e,"base64");t=new ze.PassThrough,t.end(s)}return new Promise((s,r)=>{let n=new ze.PassThrough,o=[];n.on("data",a=>o.push(a)),n.on("end",()=>{let a=Buffer.concat(o);s(a)}),n.on("error",a=>{console.log("error",a),r(a)}),Zn.default.setFfmpegPath(Xn.default.path),(0,Zn.default)(t).outputFormat("ogg").noVideo().audioCodec("libopus").addOutputOptions("-avoid_negative_ts make_zero").audioChannels(1).pipe(n,{end:!0}).on("error",function(a){console.log("error",a),r(a)})})}}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else if(!(0,Z.isURL)(e.audio)&&!(0,Z.isBase64)(e.audio))throw console.error("Invalid file or audio source"),new y("File buffer, URL, or base64 audio is required");if(!e?.encoding&&e?.encoding!==!1&&(e.encoding=!0),e?.encoding){let n=await this.processAudio(r.audio);if(Buffer.isBuffer(n))return this.sendMessageWithTyping(e.number,{audio:n,ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s);throw new F("Failed to convert audio")}return await this.sendMessageWithTyping(e.number,{audio:(0,Z.isURL)(e.audio)?{url:e.audio}:Buffer.from(e.audio,"base64"),ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s)}generateRandomId(e=11){let t="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",s="";for(let r=0;r<e;r++)s+=t.charAt(Math.floor(Math.random()*t.length));return s}toJSONString(e){let t=r=>JSON.stringify(r);return{call:()=>t({display_text:e.displayText,phone_number:e.phoneNumber}),reply:()=>t({display_text:e.displayText,id:e.id}),copy:()=>t({display_text:e.displayText,copy_code:e.copyCode}),url:()=>t({display_text:e.displayText,url:e.url,merchant_url:e.url}),pix:()=>t({currency:e.currency,total_amount:{value:0,offset:100},reference_id:this.generateRandomId(),type:"physical-goods",order:{status:"pending",subtotal:{value:0,offset:100},order_type:"ORDER",items:[{name:"",amount:{value:0,offset:100},quantity:0,sale_amount:{value:0,offset:100}}]},payment_settings:[{type:"pix_static_code",pix_static_code:{merchant_name:e.name,key:e.key,key_type:this.mapKeyType.get(e.keyType)}}],share_payment_status:!1})}[e.type]?.()||""}async buttonMessage(e){if(e.buttons.length===0)throw new y("At least one button is required");let t=e.buttons.some(c=>c.type==="reply"),s=e.buttons.some(c=>c.type==="pix"),r=e.buttons.some(c=>c.type!=="reply"&&c.type!=="pix");if(t){if(e.buttons.length>3)throw new y("Maximum of 3 reply buttons allowed");if(r)throw new y("Reply buttons cannot be mixed with other button types")}if(s){if(e.buttons.length>1)throw new y("Only one PIX button is allowed");if(r)throw new y("PIX button cannot be mixed with other button types");let c={viewOnceMessage:{message:{interactiveMessage:{nativeFlowMessage:{buttons:[{name:this.mapType.get("pix"),buttonParamsJson:this.toJSONString(e.buttons[0])}],messageParamsJson:JSON.stringify({from:"api",templateId:(0,As.v4)()})}}}}};return await this.sendMessageWithTyping(e.number,c,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}let n=await(async()=>{if(e?.thumbnailUrl)return await this.prepareMediaMessage({mediatype:"image",media:e.thumbnailUrl})})(),o=e.buttons.map(c=>({name:this.mapType.get(c.type),buttonParamsJson:this.toJSONString(c)})),a={viewOnceMessage:{message:{interactiveMessage:{body:{text:(()=>{let c="*"+e.title+"*";return e?.description&&(c+=`

`,c+=e.description,c+=`
`),c})()},footer:{text:e?.footer},header:(()=>{if(n?.message?.imageMessage)return{hasMediaAttachment:!!n.message.imageMessage,imageMessage:n.message.imageMessage}})(),nativeFlowMessage:{buttons:o,messageParamsJson:JSON.stringify({from:"api",templateId:(0,As.v4)()})}}}}};return await this.sendMessageWithTyping(e.number,a,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){return await this.sendMessageWithTyping(e.number,{listMessage:{title:e.title,description:e.description,buttonText:e?.buttonText,footerText:e?.footerText,sections:e.sections,listType:2}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async contactMessage(e){let t={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contactMessage={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(e.number,{...t},{})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async whatsappNumber(e){let t={groups:[],broadcast:[],users:[]};e.numbers.forEach(l=>{let g=this.createJid(l);(0,R.isJidGroup)(g)?t.groups.push({number:l,jid:g}):g==="status@broadcast"?t.broadcast.push({number:l,jid:g}):t.users.push({number:l,jid:g})});let s=[];s.push(...t.broadcast.map(({jid:l,number:g})=>new rt(l,!1,g)));let r=await Promise.all(t.groups.map(async({jid:l,number:g})=>{let h=await this.findGroup({groupJid:l},"inner");return h||new rt(l,!1,g),new rt(h.id,!!h?.id,g,h?.subject)}));s.push(...r);let n=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.users.map(({jid:l})=>l)}}}),o=t.users.map(({jid:l})=>l.replace("+","")),a=await lo(o),c=o.filter(l=>!a.some(g=>g.jidOptions.includes(l))),u=await this.client.onWhatsApp(...c),d=await Promise.all(t.users.map(async l=>{let g=null,h=a.find(f=>f.jidOptions.includes(l.jid.replace("+","")));if(h)return{exists:!0,jid:h.remoteJid,name:n.find(f=>f.remoteJid===h.remoteJid)?.pushName,number:l.number};if(l.number.startsWith("55")){let f=l.number.slice(4,5)==="9"&&l.number.length===13?l.number:`${l.number.slice(0,4)}9${l.number.slice(4)}`,b=l.number.length===12?l.number:l.number.slice(0,4)+l.number.slice(5);g=u.find(S=>S.jid===`${f}@s.whatsapp.net`||S.jid===`${b}@s.whatsapp.net`)}if(!g&&(l.number.startsWith("52")||l.number.startsWith("54"))){let f="";l.number.startsWith("52")&&(f=""),l.number.startsWith("54")&&(f="9");let b=l.number.slice(2,3)===f&&l.number.length===13?l.number:`${l.number.slice(0,2)}${f}${l.number.slice(2)}`,S=l.number.length===12?l.number:l.number.slice(0,2)+l.number.slice(3);g=u.find(w=>w.jid===`${b}@s.whatsapp.net`||w.jid===`${S}@s.whatsapp.net`)}g||(g=u.find(f=>f.jid===l.jid));let m=g?.jid||l.jid;return{exists:!!g?.exists,jid:m,name:n.find(f=>f.remoteJid===m)?.pushName,number:l.number}}));return await Ke(d.filter(l=>l.exists).map(l=>({remoteJid:l.jid}))),s.push(...d),s}async markMessageAsRead(e){try{let t=[];return e.readMessages.forEach(s=>{((0,R.isJidGroup)(s.remoteJid)||(0,R.isJidUser)(s.remoteJid))&&t.push({remoteJid:s.remoteJid,fromMe:s.fromMe,id:s.id})}),await this.client.readMessages(t),{message:"Read messages",read:"success"}}catch(t){throw new F("Read messages fail",t.toString())}}async getLastMessage(e){let t={key:{remoteJid:e},instanceId:this.instance.id},s=await this.prismaRepository.message.findMany({where:t,orderBy:{messageTimestamp:"desc"},take:1});if(s.length===0)throw new W("Messages not found");let r=s.pop();for(let n of s)n.messageTimestamp>=r.messageTimestamp&&(r=n);return r}async archiveChat(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new W("Last message not found");return await this.client.chatModify({archive:e.archive,lastMessages:[t]},this.createJid(s)),{chatId:s,archived:!0}}catch(t){throw new F({archived:!1,message:["An error occurred while archiving the chat. Open a calling.",t.toString()]})}}async markChatUnread(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new W("Last message not found");return await this.client.chatModify({markRead:!1,lastMessages:[t]},this.createJid(s)),{chatId:s,markedChatUnread:!0}}catch(t){throw new F({markedChatUnread:!1,message:["An error occurred while marked unread the chat. Open a calling.",t.toString()]})}}async deleteMessage(e){try{let t=await this.client.sendMessage(e.remoteJid,{delete:e});if(t){let s=t.message?.protocolMessage?.key?.id;if(s){let r=M.get("DATABASE").DELETE_DATA.LOGICAL_MESSAGE_DELETE,n=await this.prismaRepository.message.findUnique({where:{id:s}});if(r){if(!n)return t;let o=typeof n?.key=="object"&&n.key!==null?n.key:{};n=await this.prismaRepository.message.update({where:{id:s},data:{key:{...o,deleted:!0}}})}else await this.prismaRepository.message.deleteMany({where:{id:s}});this.sendDataWebhook("messages.delete",{id:n.id,instanceId:n.instanceId,key:n.key,messageType:n.messageType,status:n.status,source:n.source,messageTimestamp:n.messageTimestamp,pushName:n.pushName,participant:n.participant,message:n.message})}}return t}catch(t){throw new F("Error while deleting message for everyone",t?.toString())}}async getBase64FromMediaMessage(e,t=!1){try{let s=e?.message,r=e?.convertToMp4??!1,n=s?.message?s:await this.getMessage(s.key,!0);if(!n)throw"Message not found";for(let g of Gr)n.message[g]&&(n.message=n.message[g].message);let o,a;for(let g of qr)if(o=n.message[g],o){a=g;break}if(!o)throw"The message is not of the media type";typeof o.mediaKey=="object"&&(n.message=JSON.parse(JSON.stringify(n.message)));let c=await(0,R.downloadMediaMessage)({key:n?.key,message:n?.message},"buffer",{},{logger:(0,at.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage}),u=(0,R.getContentType)(n.message),d=vt.default.getExtension(o?.mimetype),l=o?.fileName||`${n.key.id}.${d}`||`${(0,As.v4)()}.${d}`;if(r&&u==="audioMessage")try{let g=await this.processAudioMp4(c.toString("base64"));if(Buffer.isBuffer(g))return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:"audio/mp4",base64:g.toString("base64"),buffer:t?g:null}}catch(g){throw this.logger.error("Error converting audio to mp4:"),this.logger.error(g),new y("Failed to convert audio to MP4")}return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:o.mimetype,base64:c.toString("base64"),buffer:t?c:null}}catch(s){throw this.logger.error("Error processing media message:"),this.logger.error(s),new y(s.toString())}}async fetchPrivacySettings(){let e=await this.client.fetchPrivacySettings();return{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}async updatePrivacySettings(e){try{return await this.client.updateReadReceiptsPrivacy(e.readreceipts),await this.client.updateProfilePicturePrivacy(e.profile),await this.client.updateStatusPrivacy(e.status),await this.client.updateOnlinePrivacy(e.online),await this.client.updateLastSeenPrivacy(e.last),await this.client.updateGroupsAddPrivacy(e.groupadd),this.reloadConnection(),{update:"success",data:{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}}catch(t){throw new F("Error updating privacy settings",t.toString())}}async fetchBusinessProfile(e){try{let t=e?this.createJid(e):this.instance.wuid,s=await this.client.getBusinessProfile(t);return s?{isBusiness:!0,...s}:{isBusiness:!1,message:"Not is business profile",...(await this.whatsappNumber({numbers:[t]}))?.shift()}}catch(t){throw new F("Error updating profile name",t.toString())}}async updateProfileName(e){try{return await this.client.updateProfileName(e),{update:"success"}}catch(t){throw new F("Error updating profile name",t.toString())}}async updateProfileStatus(e){try{return await this.client.updateProfileStatus(e),{update:"success"}}catch(t){throw new F("Error updating profile status",t.toString())}}async updateProfilePicture(e){try{let t;if((0,Z.isURL)(e)){let s=new Date().getTime(),r=`${e}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await xe.default.get(r,n)).data}else if((0,Z.isBase64)(e))t=Buffer.from(e,"base64");else throw new y('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(this.instance.wuid,t),this.reloadConnection(),{update:"success"}}catch(t){throw new F("Error updating profile picture",t.toString())}}async removeProfilePicture(){try{return await this.client.removeProfilePicture(this.instance.wuid),this.reloadConnection(),{update:"success"}}catch(e){throw new F("Error removing profile picture",e.toString())}}async blockUser(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!(0,R.isJidGroup)(s.jid)&&!s.jid.includes("@broadcast"))throw new y(s);let r=s.jid;return await this.client.updateBlockStatus(r,e.status),{block:"success"}}catch(t){throw new F("Error blocking user",t.toString())}}async formatUpdateMessage(e){try{let t=await this.getMessage(e.key,!0);return t?.messageType==="conversation"||t?.messageType==="extendedTextMessage"?{text:e.text}:t?.messageType==="imageMessage"?{image:t?.message?.imageMessage,caption:e.text}:t?.messageType==="videoMessage"?{video:t?.message?.videoMessage,caption:e.text}:null}catch(t){throw this.logger.error(t),new y(t.toString())}}async updateMessage(e){let t=this.createJid(e.number),s=await this.formatUpdateMessage(e);if(!s)throw this.logger.error("Message not compatible"),new y("Message not compatible");try{return await this.client.sendMessage(t,{...s,edit:e.key})}catch(r){throw this.logger.error(r),new y(r.toString())}}async fetchLabels(){return(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).map(t=>({color:t.color,name:t.name,id:t.labelId,predefinedId:t.predefinedId}))}async handleLabel(e){let t=await this.whatsappNumber({numbers:[e.number]});if(t.length===0)throw new W("Number not found");let s=t[0];if(!s.exists)throw new W("Number is not on WhatsApp");try{if(e.action==="add")return await this.client.addChatLabel(s.jid,e.labelId),{numberJid:s.jid,labelId:e.labelId,add:!0};if(e.action==="remove")return await this.client.removeChatLabel(s.jid,e.labelId),{numberJid:s.jid,labelId:e.labelId,remove:!0}}catch(r){throw new y(`Unable to ${e.action} label to chat`,r.toString())}}async updateGroupMetadataCache(e){try{let t=await this.client.groupMetadata(e),s=this.configService.get("CACHE");return(s?.REDIS?.ENABLED&&s?.REDIS?.URI!==""||s?.LOCAL?.ENABLED)&&(this.logger.verbose(`Updating cache for group: ${e}`),await zn.set(e,{timestamp:Date.now(),data:t})),t}catch(t){return this.logger.error(t),null}}async createGroup(e){try{let t=(await this.whatsappNumber({numbers:e.participants})).filter(n=>n.exists).map(n=>n.jid),{id:s}=await this.client.groupCreate(e.subject,t);return e?.description&&await this.client.groupUpdateDescription(s,e.description),e?.promoteParticipants&&await this.updateGParticipant({groupJid:s,action:"promote",participants:t}),await this.client.groupMetadata(s)}catch(t){throw this.logger.error(t),new F("Error creating group",t.toString())}}async updateGroupPicture(e){try{let t;if((0,Z.isURL)(e.image)){let s=new Date().getTime(),r=`${e.image}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await xe.default.get(r,n)).data}else if((0,Z.isBase64)(e.image))t=Buffer.from(e.image,"base64");else throw new y('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(e.groupJid,t),{update:"success"}}catch(t){throw new F("Error update group picture",t.toString())}}async updateGroupSubject(e){try{return await this.client.groupUpdateSubject(e.groupJid,e.subject),{update:"success"}}catch(t){throw new F("Error updating group subject",t.toString())}}async updateGroupDescription(e){try{return await this.client.groupUpdateDescription(e.groupJid,e.description),{update:"success"}}catch(t){throw new F("Error updating group description",t.toString())}}async findGroup(e,t="out"){try{let s=await this.client.groupMetadata(e.groupJid);if(!s)return this.logger.error("Group not found"),null;let r=await this.profilePicture(s.id);return{id:s.id,subject:s.subject,subjectOwner:s.subjectOwner,subjectTime:s.subjectTime,pictureUrl:r.profilePictureUrl,size:s.participants.length,creation:s.creation,owner:s.owner,desc:s.desc,descId:s.descId,restrict:s.restrict,announce:s.announce,participants:s.participants,isCommunity:s.isCommunity,isCommunityAnnounce:s.isCommunityAnnounce,linkedParent:s.linkedParent}}catch(s){if(t==="inner")return;throw new W("Error fetching group",s.toString())}}async fetchAllGroups(e){let t=Object.values(await this?.client?.groupFetchAllParticipating()),s=[];for(let r of t){let n=await this.profilePicture(r.id),o={id:r.id,subject:r.subject,subjectOwner:r.subjectOwner,subjectTime:r.subjectTime,pictureUrl:n?.profilePictureUrl,size:r.participants.length,creation:r.creation,owner:r.owner,desc:r.desc,descId:r.descId,restrict:r.restrict,announce:r.announce,isCommunity:r.isCommunity,isCommunityAnnounce:r.isCommunityAnnounce,linkedParent:r.linkedParent};e.getParticipants=="true"&&(o.participants=r.participants),s=[...s,o]}return s}async inviteCode(e){try{let t=await this.client.groupInviteCode(e.groupJid);return{inviteUrl:`https://chat.whatsapp.com/${t}`,inviteCode:t}}catch(t){throw new W("No invite code",t.toString())}}async inviteInfo(e){try{return await this.client.groupGetInviteInfo(e.inviteCode)}catch{throw new W("No invite info",e.inviteCode)}}async sendInvite(e){try{let s=(await this.inviteCode({groupJid:e.groupJid})).inviteUrl,r=e.numbers.map(c=>this.createJid(c)),a={conversation:`${e.description??""}

${s}`};for await(let c of r)await this.sendMessageWithTyping(c,a);return{send:!0,inviteUrl:s}}catch{throw new W("No send invite")}}async acceptInviteCode(e){try{return{accepted:!0,groupJid:await this.client.groupAcceptInvite(e.inviteCode)}}catch(t){throw new W("Accept invite error",t.toString())}}async revokeInviteCode(e){try{return{revoked:!0,inviteCode:await this.client.groupRevokeInvite(e.groupJid)}}catch(t){throw new W("Revoke error",t.toString())}}async findParticipants(e){try{let t=(await this.client.groupMetadata(e.groupJid)).participants,s=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.map(o=>o.id)}}}),r=t.map(o=>{let a=s.find(c=>c.remoteJid===o.id);return{...o,name:o.name??a?.pushName,imgUrl:o.imgUrl??a?.profilePicUrl}}),n=r.filter(o=>o.id.includes("@s.whatsapp"));return n&&await Ke(n.map(o=>({remoteJid:o.id}))),{participants:r}}catch(t){throw console.error(t),new W("No participants",t.toString())}}async updateGParticipant(e){try{let t=e.participants.map(r=>this.createJid(r));return{updateParticipants:await this.client.groupParticipantsUpdate(e.groupJid,t,e.action)}}catch(t){throw new y("Error updating participants",t.toString())}}async updateGSetting(e){try{return{updateSetting:await this.client.groupSettingUpdate(e.groupJid,e.action)}}catch(t){throw new y("Error updating setting",t.toString())}}async toggleEphemeral(e){try{return await this.client.groupToggleEphemeral(e.groupJid,e.expiration),{success:!0}}catch(t){throw new y("Error updating setting",t.toString())}}async leaveGroup(e){try{return await this.client.groupLeave(e.groupJid),{groupJid:e.groupJid,leave:!0}}catch(t){throw new y("Unable to leave the group",t.toString())}}async templateMessage(){throw new Error("Method not available in the Baileys service")}prepareMessage(e){let t=(0,R.getContentType)(e.message),s=e?.message[t],r={key:e.key,pushName:e.pushName,status:X[e.status],message:{...e.message},contextInfo:s?.contextInfo,messageType:t||"unknown",messageTimestamp:e.messageTimestamp,instanceId:this.instanceId,source:(0,R.getDevice)(e.key.id)};return!r.status&&e.key.fromMe===!1&&(r.status=X[3]),r.message.extendedTextMessage&&(r.messageType="conversation",r.message.conversation=r.message.extendedTextMessage.text,delete r.message.extendedTextMessage),r.message.documentWithCaptionMessage&&(r.messageType="documentMessage",r.message.documentMessage=r.message.documentWithCaptionMessage.message.documentMessage,delete r.message.documentWithCaptionMessage),r}async syncChatwootLostMessages(){if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let e=await this.findChatwoot(),t=r=>this.prepareMessage(r);this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t),Eo.default.schedule("0,30 * * * *",async()=>{this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t)}).start()}}async updateMessagesReadedByTimestamp(e,t){if(t==null)return 0;let s=await this.prismaRepository.message.updateMany({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{messageTimestamp:{lte:t}},{OR:[{status:null},{status:X[3]}]}]},data:{status:X[4]}});return s?(s.count>0&&this.updateChatUnreadMessages(e),s.count):0}async updateChatUnreadMessages(e){let[t,s]=await Promise.all([this.prismaRepository.chat.findFirst({where:{remoteJid:e}}),this.prismaRepository.message.count({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{status:{equals:X[3]}}]}})]);return t&&t.unreadMessages!==s&&await this.prismaRepository.chat.update({where:{id:t.id},data:{unreadMessages:s}}),s}};var Ue=class{constructor(i,e){this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}init(i,e){if(!i.token&&i.integration===P.WHATSAPP_BUSINESS)throw new y("token is required");return i.integration===P.WHATSAPP_BUSINESS?new ps(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):i.integration===P.EVOLUTION?new as(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):i.integration===P.WHATSAPP_BAILEYS?new Rs(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):null}};var Ds=class extends Ue{constructor(e,t){super(e,t);this.logger=new T("EvolutionController")}async receiveWebhook(e){let t=e.numberId;if(!t){this.logger.error("WebhookService -> receiveWebhookEvolution -> numberId not found");return}let s=await this.prismaRepository.instance.findFirst({where:{number:t}});if(!s){this.logger.error("WebhookService -> receiveWebhook -> instance not found");return}return await this.waMonitor.waInstances[s.name].connectToWhatsapp(e),{status:"success"}}};var vo=v(require("axios"));var Ps=class extends Ue{constructor(e,t){super(e,t);this.logger=new T("MetaController")}async receiveWebhook(e){if(e.object==="whatsapp_business_account"){if(e.entry[0]?.changes[0]?.field==="message_template_status_update"){let t=await this.prismaRepository.template.findFirst({where:{templateId:`${e.entry[0].changes[0].value.message_template_id}`}});if(!t){console.log("template not found");return}let{webhookUrl:s}=t;await vo.default.post(s,e.entry[0].changes[0].value,{headers:{"Content-Type":"application/json"}});return}e.entry?.forEach(async t=>{let s=t.changes[0].value.metadata.phone_number_id;if(!s)return this.logger.error("WebhookService -> receiveWebhookMeta -> numberId not found"),{status:"success"};let r=await this.prismaRepository.instance.findFirst({where:{number:s}});return r?(await this.waMonitor.waInstances[r.name].connectToWhatsapp(e),{status:"success"}):(this.logger.error("WebhookService -> receiveWebhookMeta -> instance not found"),{status:"success"})})}return{status:"success"}}};function Ao(p){return p.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}function Ro(p,i){let e=i.split(" ").reduce((s,r)=>{let[n,...o]=r.split(":"),a=o.join(":");return s[n]||(s[n]=[]),s[n].push(a),s},{}),t=Ao(p);return Object.entries(e).every(([s,r])=>r.some(n=>n.split(",").every(a=>{let c=Ao(a);switch(s.toLowerCase()){case"contains":return t.includes(c);case"notcontains":return!t.includes(c);case"startswith":return t.startsWith(c);case"endswith":return t.endsWith(c);case"exact":return t===c;default:return!1}})))}var Do=async(p,i,e,t)=>{let s=await p.findFirst({where:{enabled:!0,triggerType:"all",instanceId:t}});if(s)return s;let r=await p.findMany({where:{enabled:!0,triggerType:"advanced",instanceId:t}});for(let m of r)if(Ro(e,m.triggerValue))return m;let n=await p.findFirst({where:{enabled:!0,triggerType:"keyword",triggerOperator:"equals",triggerValue:e,instanceId:t}});if(n)return n;let o=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"regex",instanceId:t}}),a=null;for(let m of o)if(new RegExp(m.triggerValue).test(e)){a=m;break}if(a)return a;let c=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"startsWith",instanceId:t}}),u=null;for(let m of c)if(e.startsWith(m.triggerValue)){u=m;break}if(u)return u;let d=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"endsWith",instanceId:t}}),l=null;for(let m of d)if(e.endsWith(m.triggerValue)){l=m;break}if(l)return l;let g=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"contains",instanceId:t}}),h=null;for(let m of g)if(e.includes(m.triggerValue)){h=m;break}return h||null};var ae=class{constructor(i,e){this.logger=new T("ChatbotController");this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}async emit({instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:r=!1}){let n={instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:r};await ue.emit(n),await ce.emit(n),await te.emit(n),await le.emit(n),await de.emit(n)}processDebounce(i,e,t,s,r){i[t]?(i[t].message+=`
${e}`,this.logger.log("message debounced: "+i[t].message),clearTimeout(i[t].timeoutId)):i[t]={message:e,timeoutId:null},i[t].timeoutId=setTimeout(()=>{let n=i[t].message;this.logger.log("Debounce complete. Processing message: "+n),delete i[t],r(n)},s*1e3)}checkIgnoreJids(i,e){if(i&&i.length>0){let t=!1,s=!1;return i.includes("@g.us")&&(t=!0),i.includes("@s.whatsapp.net")&&(s=!0),t&&e.endsWith("@g.us")?(this.logger.warn("Ignoring message from group: "+e),!0):s&&e.endsWith("@s.whatsapp.net")?(this.logger.warn("Ignoring message from contact: "+e),!0):i.includes(e)?(this.logger.warn("Ignoring message from jid: "+e),!0):!1}return!1}async getSession(i,e){let t=await this.prismaRepository.integrationSession.findFirst({where:{remoteJid:i,instanceId:e.instanceId},orderBy:{createdAt:"desc"}});if(t)if(t.status!=="closed"&&!t.botId){this.logger.warn("Session is already opened in another integration");return}else t.botId||(t=null);return t}async findBotTrigger(i,e,t,s,r){let n;if(r)n=await i.findFirst({where:{id:r.botId}});else if(n=await Do(i,e,t,s.instanceId),!n)return;return n}};var Po=require("class-validator"),xs=class{constructor(i,e,t){this.chatwootService=i;this.configService=e;this.prismaRepository=t}async createChatwoot(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");if(e?.enabled){if(!(0,Po.isURL)(e.url,{require_tld:!1}))throw new y("url is not valid");if(!e.accountId)throw new y("accountId is required");if(!e.token)throw new y("token is required");if(e.signMsg!==!0&&e.signMsg!==!1)throw new y("signMsg is required");e.signMsg===!1&&(e.signDelimiter=null)}(!e.nameInbox||e.nameInbox==="")&&(e.nameInbox=i.instanceName);let t=await this.chatwootService.create(i,e),s=this.configService.get("SERVER").URL;return{...t,webhook_url:`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async findChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");let e=await this.chatwootService.find(i),t=this.configService.get("SERVER").URL;return Object.keys(e||{}).length===0?{enabled:!1,url:"",accountId:"",token:"",signMsg:!1,nameInbox:"",webhook_url:""}:{...e,webhook_url:`${t}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async receiveWebhook(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");let t=new Re(new Ce(this.configService,Ae.name).getEngine());return new Ae(k,this.configService,this.prismaRepository,t).receiveWebhook(i,e)}};var Os=class extends ae{constructor(e,t,s){super(t,s);this.difyService=e;this.logger=new T("DifyController");this.integrationEnabled=M.get("DIFY").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.dify,this.settingsRepository=this.prismaRepository.difySetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating dify")}}async findBot(e){if(!this.integrationEnabled)throw new y("Dify is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Dify is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Dify not found");if(n.instanceId!==r)throw new Error("Dify not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Dify already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating dify")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting dify bot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,difyIdFallback:o.difyIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,difyIdFallback:n.difyIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,difyIdFallback:s.difyIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,difyIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"dify"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(E?.difyIdFallback)a=await this.botRepository.findFirst({where:{id:E.difyIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(h&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async E=>{await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var _s=class extends ae{constructor(e,t,s){super(t,s);this.evolutionBotService=e;this.logger=new T("EvolutionBotController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.evolutionBot,this.settingsRepository=this.prismaRepository.evolutionBotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(e,t,s){let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,botIdFallback:o.botIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,botIdFallback:n.botIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,botIdFallback:s.botIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,botIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"evolution"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(E?.botIdFallback)a=await this.botRepository.findFirst({where:{id:E.botIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(h&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async E=>{await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var xo=v(require("axios")),Ns=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new T("EvolutionBotService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"evolution"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,r,n){let o={inputs:{sessionId:e.id,remoteJid:s,pushName:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:n,conversation_id:e.sessionId===s?void 0:e.sessionId,user:s};if(this.isImageMessage(n)){let d=n.split("|");o.files=[{type:"image",url:d[1].split("?")[0]}],o.query=d[2]||n}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(s),await i.client.sendPresenceUpdate("composing",s));let a={"Content-Type":"application/json"};t.apiKey&&(a={...a,Authorization:`Bearer ${t.apiKey}`});let c=await xo.default.post(t.apiUrl,o,{headers:a});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",s),c?.data?.message}async sendMessageWhatsApp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,C=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*C,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,r,t,e,o,n);c&&await this.sendMessageWhatsApp(i,e,r,s,c)}async processBot(i,e,t,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,s,t,e,o,n);a&&await this.sendMessageWhatsApp(i,e,s,r,a)}};var ks=class extends ae{constructor(e,t,s){super(t,s);this.flowiseService=e;this.logger=new T("FlowiseController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.flowise,this.settingsRepository=this.prismaRepository.flowiseSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a Flowise with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Flowise already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(e,t,s){let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,flowiseIdFallback:o.flowiseIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,flowiseIdFallback:n.flowiseIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,flowiseIdFallback:s.flowiseIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,flowiseIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"flowise"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(E?.flowiseIdFallback)a=await this.botRepository.findFirst({where:{id:E.flowiseIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(h&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async E=>{await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var Oo=v(require("axios")),Bs=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new T("FlowiseService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"flowise"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,r){let n={question:r,overrideConfig:{sessionId:t,vars:{remoteJid:t,pushName:s,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY}}};if(this.isImageMessage(r)){let d=r.split("|");n.uploads=[{data:d[1].split("?")[0],type:"url",name:"Flowise.png",mime:"image/png"}],n.question=d[2]||r}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let o={"Content-Type":"application/json"};e.apiKey&&(o={...o,Authorization:`Bearer ${e.apiKey}`});let a=e.apiUrl;if(!a)return null;let c=await Oo.default.post(a,n,{headers:o});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),c?.data?.text}async sendMessageWhatsApp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,C=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*C,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,t,e,o,n);await this.sendMessageWhatsApp(i,e,r,s,c)}async processBot(i,e,t,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,t,e,o,n);await this.sendMessageWhatsApp(i,e,s,r,a)}};var _o=v(require("openai"));var Ls=class extends ae{constructor(e,t,s){super(t,s);this.openaiService=e;this.logger=new T("OpenaiController");this.integrationEnabled=M.get("OPENAI").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.openaiBot,this.settingsRepository=this.prismaRepository.openaiSetting,this.sessionRepository=this.prismaRepository.integrationSession,this.credsRepository=this.prismaRepository.openaiCreds}async createOpenaiCreds(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.apiKey)throw new Error("API Key is required");if(!t.name)throw new Error("Name is required");try{return await this.credsRepository.create({data:{name:t.name,apiKey:t.apiKey,instanceId:s}})}catch(r){throw this.logger.error(r),new Error("Error creating openai creds")}}async findOpenaiCreds(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);return await this.credsRepository.findMany({where:{instanceId:t},include:{OpenaiAssistant:!0}})}async deleteCreds(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.credsRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai Creds not found");if(r.instanceId!==s)throw new Error("Openai Creds not found");try{return await this.credsRepository.delete({where:{id:t}}),{openaiCreds:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai creds")}}async getModels(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id);if(!t)throw new Error("Instance not found");let s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{OpenaiCreds:!0}});if(!s)throw new Error("Settings not found");let{apiKey:r}=s.OpenaiCreds;try{return this.client=new _o.default({apiKey:r}),(await this.client.models.list())?.body?.data}catch(n){throw this.logger.error(n),new Error("Error fetching models")}}async createBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id);if(!t.openaiCredsId||!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let a=await this.settingsRepository.findFirst({where:{instanceId:s}});if((t.expire===void 0||t.expire===null)&&(t.expire=a.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=a.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=a.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=a.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=a.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=a.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=a.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=a.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=a.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=a?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=a?.timePerChar??0),!t.openaiCredsId)throw new Error("Openai Creds Id is required");a||await this.settings(e,{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a openai with an "All" trigger, you cannot have more bots while it is active');let n={instanceId:s};if(t.botType==="assistant"){if(!t.assistantId)throw new Error("Assistant ID is required");n={...n,assistantId:t.assistantId,botType:t.botType}}else if(t.botType==="chatCompletion"){if(!t.model)throw new Error("Model is required");if(!t.maxTokens)throw new Error("Max tokens is required");n={...n,model:t.model,maxTokens:t.maxTokens,botType:t.botType}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:n}))throw new Error("Openai Bot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,openaiCredsId:t.openaiCredsId,botType:t.botType,assistantId:t.assistantId,functionUrl:t.functionUrl,model:t.model,systemMessages:t.systemMessages,assistantMessages:t.assistantMessages,userMessages:t.userMessages,maxTokens:t.maxTokens,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error creating openai bot")}}async findBot(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai Bot not found");if(r.instanceId!==s)throw new Error("Openai Bot not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Openai is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(c=>c.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Openai Bot not found");if(n.instanceId!==r)throw new Error("Openai Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a openai bot with an "All" trigger, you cannot have more bots while it is active');let o={id:{not:t},instanceId:r};if(s.botType==="assistant"){if(!s.assistantId)throw new Error("Assistant ID is required");o={...o,assistantId:s.assistantId}}else if(s.botType==="chatCompletion"){if(!s.model)throw new Error("Model is required");if(!s.maxTokens)throw new Error("Max tokens is required");o={...o,model:s.model,maxTokens:s.maxTokens}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:o}))throw new Error("Openai Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,openaiCredsId:s.openaiCredsId,botType:s.botType,assistantId:s.assistantId,functionUrl:s.functionUrl,model:s.model,systemMessages:s.systemMessages,assistantMessages:s.assistantMessages,userMessages:s.userMessages,maxTokens:s.maxTokens,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(c){throw this.logger.error(c),new Error("Error updating openai bot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai bot not found");if(r.instanceId!==s)throw new Error("Openai bot not found");try{return await this.sessionRepository.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai bot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,speechToText:t.speechToText,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:o.openaiCredsId,expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,speechToText:o.speechToText,openaiIdFallback:o.openaiIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,speechToText:t.speechToText,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:n.openaiCredsId,expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,openaiIdFallback:n.openaiIdFallback,ignoreJids:n.ignoreJids,speechToText:n.speechToText,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let t=(await this.prismaRepository.instance.findFirst({select:{id:!0},where:{name:e.instanceName}}))?.id,s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{openaiCredsId:s.openaiCredsId,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,openaiIdFallback:s.openaiIdFallback,speechToText:s.speechToText,fallback:s.Fallback}:{openaiCredsId:null,expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,openaiIdFallback:null,speechToText:!1,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{openai:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null},status:{not:"closed"}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n}}),{openai:{...e,openai:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{openai:{...e,openai:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Openai Bot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"openai"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s,pushName:r}){if(this.integrationEnabled)try{let n=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(n?.ignoreJids,t))return;let o=await this.getSession(t,e),a=he(s),c=await this.findBotTrigger(this.botRepository,this.settingsRepository,a,e,o);if(!c){let C=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(C?.openaiIdFallback)c=await this.botRepository.findFirst({where:{id:C.openaiIdFallback}});else return}let u=c?.expire,d=c?.keywordFinish,l=c?.delayMessage,g=c?.unknownMessage,h=c?.listeningFromMe,m=c?.stopBotFromMe,f=c?.keepOpen,b=c?.debounceTime,S=c?.ignoreJids,w=c?.splitMessages,I=c?.timePerChar;u==null&&(u=n.expire),d==null&&(d=n.keywordFinish),l==null&&(l=n.delayMessage),g==null&&(g=n.unknownMessage),h==null&&(h=n.listeningFromMe),m==null&&(m=n.stopBotFromMe),f==null&&(f=n.keepOpen),b==null&&(b=n.debounceTime),S==null&&(S=n.ignoreJids),w==null&&(w=n?.splitMessages??!1),I==null&&(I=n?.timePerChar??0);let E=s.key;if(m&&E.fromMe&&o&&(o=await this.sessionRepository.update({where:{id:o.id},data:{status:"paused"}})),!h&&E.fromMe||o&&!o.awaitUser)return;b&&b>0?this.processDebounce(this.userMessageDebounce,a,t,b,async C=>{c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,r,E.fromMe,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:I},C),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,r,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:I},C)}):(c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,r,E.fromMe,c,o,n,a),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,r,c,o,n,a));return}catch(n){this.logger.error(n);return}}};var No=v(require("axios"));var Fs=class extends ae{constructor(e,t,s){super(t,s);this.typebotService=e;this.logger=new T("TypebotController");this.integrationEnabled=M.get("TYPEBOT").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.typebot,this.settingsRepository=this.prismaRepository.typebotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});t.expire||(t.expire=o?.expire||0),t.keywordFinish||(t.keywordFinish=o?.keywordFinish||"#SAIR"),t.delayMessage||(t.delayMessage=o?.delayMessage||1e3),t.unknownMessage||(t.unknownMessage=o?.unknownMessage||"Desculpe, n\xE3o entendi"),t.listeningFromMe||(t.listeningFromMe=o?.listeningFromMe||!1),t.stopBotFromMe||(t.stopBotFromMe=o?.stopBotFromMe||!1),t.keepOpen||(t.keepOpen=o?.keepOpen||!1),t.debounceTime||(t.debounceTime=o?.debounceTime||0),t.ignoreJids||(t.ignoreJids=o?.ignoreJids||[]),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:t.url,typebot:t.typebot,instanceId:s}}))throw new Error("Typebot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,url:t.url,typebot:t.typebot,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids}})}catch(o){throw this.logger.error(o),new Error("Error creating typebot")}}async findBot(e){if(!this.integrationEnabled)throw new y("Typebot is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Typebot is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Typebot not found");if(n.instanceId!==r)throw new Error("Typebot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:s.url,typebot:s.typebot,id:{not:t},instanceId:r}}))throw new Error("Typebot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,url:s.url,typebot:s.typebot,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids}})}catch(a){throw this.logger.error(a),new Error("Error updating typebot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{typebot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting typebot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,typebotIdFallback:o.typebotIdFallback,ignoreJids:o.ignoreJids}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,typebotIdFallback:n.typebotIdFallback,ignoreJids:n.ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,typebotIdFallback:s.typebotIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],typebotIdFallback:null,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async startBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");if(t.remoteJid==="status@broadcast")return;let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!s)throw new Error("Instance not found");let r=t.remoteJid,n=t.url,o=t.typebot,a=t.startSession,c=t.variables,u=t?.typebot?.expire,d=t?.typebot?.keywordFinish,l=t?.typebot?.delayMessage,g=t?.typebot?.unknownMessage,h=t?.typebot?.listeningFromMe,m=t?.typebot?.stopBotFromMe,f=t?.typebot?.keepOpen,b=t?.typebot?.debounceTime,S=t?.typebot?.ignoreJids,w=await this.settingsRepository.findFirst({where:{instanceId:s.id}});if(this.checkIgnoreJids(w?.ignoreJids,r))throw new Error("Jid not allowed");(!u||!d||!l||!g||!h||!m||!f||!b||!S)&&(u==null&&(u=w.expire),d==null&&(d=w.keywordFinish),l==null&&(l=w.delayMessage),g==null&&(g=w.unknownMessage),h==null&&(h=w.listeningFromMe),m==null&&(m=w.stopBotFromMe),f==null&&(f=w.keepOpen),b==null&&(b=w.debounceTime),S==null&&(S=w.ignoreJids),w||await this.settings(e,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S}));let I={};if(c?.length&&c.forEach(E=>{I[E.name]=E.value}),a){let E=await this.botRepository.findFirst({where:{url:n,typebot:o,instanceId:s.id}});E||(E=await this.botRepository.create({data:{enabled:!0,url:n,typebot:o,instanceId:s.id,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f}})),await this.prismaRepository.integrationSession.deleteMany({where:{remoteJid:r,instanceId:s.id,botId:{not:null}}}),await this.typebotService.processTypebot(s,r,null,null,E,n,u,o,d,l,g,h,m,f,"init",I)}else{let E=Math.floor(Math.random()*1e10).toString();try{let C=M.get("TYPEBOT").API_VERSION,O,N;C==="latest"?(O=`${t.url}/api/v1/typebots/${t.typebot}/startChat`,N={prefilledVariables:I}):(O=`${t.url}/api/v1/sendMessage`,N={startParams:{publicId:t.typebot,prefilledVariables:I}});let _=await No.default.post(O,N);await this.typebotService.sendWAMessage(s,null,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f},r,_.data.messages,_.data.input,_.data.clientSideActions),this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.start",{remoteJid:r,url:O,typebot:o,variables:c,sessionId:E})}catch(C){this.logger.error(C);return}}return{typebot:{...e,typebot:{url:n,remoteJid:r,typebot:o,prefilledVariables:I}}}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(u=>u.id),r=t.remoteJid,n=t.status,o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(n==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:r,status:n}}};if(n==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}):await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:r,status:n}}};let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}),c={remoteJid:r,status:n,session:a};return this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.change-status",c),{typebot:{...e,typebot:c}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Typebot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:t??{not:null},type:"typebot"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!r)throw new Error("Instance not found");let n=await this.getSession(t,e),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let C=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(C?.typebotIdFallback)a=await this.botRepository.findFirst({where:{id:C.typebotIdFallback}});else return}let c=await this.prismaRepository.typebotSetting.findFirst({where:{instanceId:e.instanceId}}),u=a?.url,d=a?.typebot,l=a?.expire,g=a?.keywordFinish,h=a?.delayMessage,m=a?.unknownMessage,f=a?.listeningFromMe,b=a?.stopBotFromMe,S=a?.keepOpen,w=a?.debounceTime,I=a?.ignoreJids;if(l==null&&(l=c.expire),g==null&&(g=c.keywordFinish),h==null&&(h=c.delayMessage),m==null&&(m=c.unknownMessage),f==null&&(f=c.listeningFromMe),b==null&&(b=c.stopBotFromMe),S==null&&(S=c.keepOpen),w==null&&(w=c.debounceTime),I==null&&(I=c.ignoreJids),this.checkIgnoreJids(I,t))return;let E=s.key;if(b&&E.fromMe&&n){await this.sessionRepository.update({where:{id:n.id},data:{status:"paused"}});return}if(!f&&E.fromMe||n&&!n.awaitUser||(w&&w>0?this.processDebounce(this.userMessageDebounce,o,t,w,async C=>{await this.typebotService.processTypebot(r,t,s,n,a,u,l,d,g,h,m,f,b,S,C)}):await this.typebotService.processTypebot(r,t,s,n,a,u,l,d,g,h,m,f,b,S,o),n&&!n.awaitUser))return}catch(r){this.logger.error(r);return}}};var Js=v(require("pusher"));var Us=class Us{constructor(i,e,t,s){this.prisma=i,this.monitor=e,this.status=t,this.name=s}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set name(i){this.integrationName=i}get name(){return this.integrationName}set status(i){this.integrationStatus=i}get status(){return this.integrationStatus}async set(i,e){if(this.status)return e[this.name]?.enabled?e[this.name].events.length===0&&(e[this.name].events=Us.events):e[this.name].events=[],this.prisma[this.name].upsert({where:{instanceId:this.monitor.waInstances[i].instanceId},update:{enabled:e[this.name]?.enabled,events:e[this.name].events},create:{enabled:e[this.name]?.enabled,events:e[this.name].events,instanceId:this.monitor.waInstances[i].instanceId}})}async get(i){if(!this.status)return;if(this.monitor.waInstances[i]===void 0)return null;let e=await this.prisma[this.name].findUnique({where:{instanceId:this.monitor.waInstances[i].instanceId}});return e||null}};Us.events=["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS","REMOVE_INSTANCE","LOGOUT_INSTANCE"];var z=Us;var Ws=class extends z{constructor(e,t){super(e,t,M.get("PUSHER")?.ENABLED,"pusher");this.logger=new T("PusherController");this.pusherClients={};this.globalPusherClient=null;this.pusherConfig=M.get("PUSHER");this.init()}async init(){if(!this.status)return;if(this.pusherConfig.GLOBAL?.ENABLED){let{APP_ID:t,KEY:s,SECRET:r,CLUSTER:n,USE_TLS:o}=this.pusherConfig.GLOBAL;t&&s&&r&&n&&(this.globalPusherClient=new Js.default({appId:t,key:s,secret:r,cluster:n,useTLS:o}),this.logger.info("Pusher global client initialized"))}(await this.prismaRepository.instance.findMany({where:{Pusher:{isNot:null}},include:{Pusher:!0}})).forEach(t=>{t.Pusher.enabled&&t.Pusher.appId&&t.Pusher.key&&t.Pusher.secret&&t.Pusher.cluster?(this.pusherClients[t.name]=new Js.default({appId:t.Pusher.appId,key:t.Pusher.key,secret:t.Pusher.secret,cluster:t.Pusher.cluster,useTLS:t.Pusher.useTLS}),this.logger.info(`Pusher client initialized for instance ${t.name}`)):(delete this.pusherClients[t.name],this.logger.warn(`Pusher client disabled or misconfigured for instance ${t.name}`))})}async set(e,t){t.pusher?.enabled?t.pusher.events.length===0&&(t.pusher.events=z.events):t.pusher.events=[];let s=await this.prisma.pusher.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.pusher.enabled,events:t.pusher.events,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS},create:{enabled:t.pusher.enabled,events:t.pusher.events,instanceId:this.monitor.waInstances[e].instanceId,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS}});return s.enabled&&s.appId&&s.key&&s.secret&&s.cluster?(this.pusherClients[e]=new Js.default({appId:s.appId,key:s.key,secret:s.secret,cluster:s.cluster,useTLS:s.useTLS}),this.logger.info(`Pusher client initialized for instance ${e}`)):(delete this.pusherClients[e],this.logger.warn(`Pusher client disabled or misconfigured for instance ${e}`)),s}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){if(!this.status)return;let d=await this.get(e),l=s.replace(/[.-]/gm,"_").toUpperCase(),g=M.get("LOG").LEVEL.includes("WEBHOOKS"),h=s.replace(/_/g,".").toLowerCase(),m={event:s,instance:e,data:r,destination:d?.appId||this.pusherConfig.GLOBAL?.APP_ID,date_time:o,sender:a,server_url:n,apikey:c};s=="qrcode.updated"&&delete m.data.qrcode.base64;let f=JSON.stringify(m),b=Buffer.byteLength(f,"utf8");if(b>10240){this.logger.error({local:`${t}.sendData-Pusher`,message:"Payload size exceeds Pusher limit",event:s,instanceName:e,payloadSize:b});return}if(u&&d&&d.enabled){let w=d.events;if(Array.isArray(w)&&w.includes(l)){g&&this.logger.log({local:`${t}.sendData-Pusher`,appId:d.appId,...m});try{let I=this.pusherClients[e];I?I.trigger(e,h,m):this.logger.error(`Pusher client not found for instance ${e}`)}catch(I){this.logger.error({local:`${t}.sendData-Pusher`,message:I?.message,error:I})}}}if(this.pusherConfig.GLOBAL?.ENABLED&&this.pusherConfig.EVENTS[l]){g&&this.logger.log({local:`${t}.sendData-Pusher-Global`,appId:this.pusherConfig.GLOBAL?.APP_ID,...m});try{this.globalPusherClient?this.globalPusherClient.trigger(e,h,m):this.logger.error("Global Pusher client not initialized")}catch(I){this.logger.error({local:`${t}.sendData-Pusher-Global`,message:I?.message,error:I})}}}};var ko=v(require("amqplib/callback_api"));var $s=class extends z{constructor(e,t){super(e,t,M.get("RABBITMQ")?.ENABLED,"rabbitmq");this.amqpChannel=null;this.logger=new T("RabbitmqController")}async init(){this.status&&await new Promise((e,t)=>{let s=M.get("RABBITMQ").URI,r=M.get("RABBITMQ").EXCHANGE_NAME;ko.connect(s,(n,o)=>{if(n){t(n);return}o.createChannel((a,c)=>{if(a){t(a);return}let u=r;c.assertExchange(u,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel=c,this.logger.info("AMQP initialized"),e()})})}).then(()=>{M.get("RABBITMQ")?.GLOBAL_ENABLED&&this.initGlobalQueues()})}set channel(e){this.amqpChannel=e}get channel(){return this.amqpChannel}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(e),d=u?.events,l=M.get("RABBITMQ").GLOBAL_ENABLED,g=M.get("RABBITMQ").EVENTS,h=M.get("RABBITMQ").EXCHANGE_NAME,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=M.get("LOG").LEVEL.includes("WEBHOOKS"),b={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c};if(u?.enabled&&this.amqpChannel&&Array.isArray(d)&&d.includes(m)){let S=e??h,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let I=s.replace(/_/g,".").toLowerCase(),E=`${e}.${I}`;if(await this.amqpChannel.assertQueue(E,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(E,S,I),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let C={local:`${t}.sendData-RabbitMQ`,...b};this.logger.log(C)}break}catch{w++}}if(l&&g[m]&&this.amqpChannel){let S=h,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let I=s;if(await this.amqpChannel.assertQueue(I,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(I,S,s),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let E={local:`${t}.sendData-RabbitMQ-Global`,...b};this.logger.log(E)}break}catch{w++}}}async initGlobalQueues(){this.logger.info("Initializing global queues");let e=M.get("RABBITMQ").EXCHANGE_NAME,t=M.get("RABBITMQ").EVENTS;if(!t){this.logger.warn("No events to initialize on AMQP");return}Object.keys(t).forEach(r=>{if(t[r]===!1)return;let n=`${r.replace(/_/g,".").toLowerCase()}`,o=e;this.amqpChannel.assertExchange(o,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel.assertQueue(n,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),this.amqpChannel.bindQueue(n,o,r)})}};var Bo=require("@aws-sdk/client-sqs");var qs=class extends z{constructor(e,t){super(e,t,M.get("SQS")?.ENABLED,"sqs");this.logger=new T("SqsController")}init(){this.status&&new Promise(e=>{let t=M.get("SQS");this.sqs=new Bo.SQS({credentials:{accessKeyId:t.ACCESS_KEY_ID,secretAccessKey:t.SECRET_ACCESS_KEY},region:t.REGION}),this.logger.info("SQS initialized"),e()})}set channel(e){this.sqs=e}get channel(){return this.sqs}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(e),d=u?.events,l=s.replace(/[.-]/gm,"_").toUpperCase();if(u?.enabled&&this.sqs&&Array.isArray(d)&&d.includes(l)){let g=`${s.replace(".","_").toLowerCase()}`,h=`${e}_${g}.fifo`,m=M.get("SQS"),f=`https://sqs.${m.REGION}.amazonaws.com/${m.ACCOUNT_ID}/${h}`,b={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c},S={MessageBody:JSON.stringify(b),MessageGroupId:"evolution",MessageDeduplicationId:`${e}_${g}_${Date.now()}`,QueueUrl:f};this.sqs.sendMessage(S,w=>{if(w)this.logger.error({local:`${t}.sendData-SQS`,message:w?.message,hostName:w?.hostname,code:w?.code,stack:w?.stack,name:w?.name,url:h,server_url:n});else if(M.get("LOG").LEVEL.includes("WEBHOOKS")){let I={local:`${t}.sendData-SQS`,...b};this.logger.log(I)}})}}async initQueues(e,t){if(!t||!t.length)return;t.map(r=>`${r.replace(/_/g,"_").toLowerCase()}`).forEach(r=>{let n=`${e}_${r}.fifo`;this.sqs.createQueue({QueueName:n,Attributes:{FifoQueue:"true"}},(o,a)=>{o?this.logger.error(`Error creating queue ${n}: ${o.message}`):this.logger.info(`Queue ${n} created: ${a.QueueUrl}`)})})}async removeQueues(e,t){let s=Array.isArray(t)?t.map(n=>String(n)):[];if(!t||!s.length)return;s.map(n=>`${n.replace(/_/g,"_").toLowerCase()}`).forEach(n=>{let o=`${e}_${n}.fifo`;this.sqs.getQueueUrl({QueueName:o},(a,c)=>{if(a)this.logger.error(`Error getting queue URL for ${o}: ${a.message}`);else{let u=c.QueueUrl;this.sqs.deleteQueue({QueueUrl:u},d=>{d?this.logger.error(`Error deleting queue ${o}: ${d.message}`):this.logger.info(`Queue ${o} deleted`)})}})})}};var tr=v(require("axios")),Gs=require("class-validator");var Hs=class extends z{constructor(e,t){super(e,t,!0,"webhook");this.logger=new T("WebhookController")}async set(e,t){if(!(0,Gs.isURL)(t.webhook.url,{require_tld:!1}))throw new y('Invalid "url" property');return t.webhook?.enabled?t.webhook.events.length===0&&(t.webhook.events=z.events):t.webhook.events=[],this.prisma.webhook.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.webhook?.enabled,events:t.webhook?.events,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents},create:{enabled:t.webhook?.enabled,events:t.webhook?.events,instanceId:this.monitor.waInstances[e].instanceId,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents}})}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){let d=await this.get(e);if(!d||!d?.enabled)return;let l=M.get("WEBHOOK"),g=d?.events,h=d?.headers,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=m.replace(/_/gm,"-").toLowerCase(),b=M.get("LOG").LEVEL.includes("WEBHOOKS"),S={event:s,instance:e,data:r,destination:d?.url,date_time:o,sender:a,server_url:n,apikey:c};if(u&&Array.isArray(g)&&g.includes(m)){let w;if(d?.webhookByEvents?w=`${d?.url}/${f}`:w=d?.url,b){let I={local:`${t}.sendData-Webhook`,url:w,...S};this.logger.log(I)}try{d?.enabled&&(0,Gs.isURL)(d.url,{require_tld:!1})&&await tr.default.create({baseURL:w,headers:h}).post("",S)}catch(I){this.logger.error({local:`${t}.sendData-Webhook`,message:I?.message,hostName:I?.hostname,syscall:I?.syscall,code:I?.code,error:I?.errno,stack:I?.stack,name:I?.name,url:w,server_url:n})}}if(l.GLOBAL?.ENABLED&&l.EVENTS[m]){let w=l.GLOBAL.URL;if(l.GLOBAL.WEBHOOK_BY_EVENTS&&(w=`${w}/${f}`),b){let I={local:`${t}.sendData-Webhook-Global`,url:w,...S};this.logger.log(I)}try{(0,Gs.isURL)(w)&&await tr.default.create({baseURL:w}).post("",S)}catch(I){this.logger.error({local:`${t}.sendData-Webhook-Global`,message:I?.message,hostName:I?.hostname,syscall:I?.syscall,code:I?.code,error:I?.errno,stack:I?.stack,name:I?.name,url:w,server_url:n})}}}};var Lo=require("socket.io");var Vs=class extends z{constructor(e,t){super(e,t,M.get("WEBSOCKET")?.ENABLED,"websocket");this.logger=new T("WebsocketController");this.cors=M.get("CORS").ORIGIN}init(e){this.status&&(this.socket=new Lo.Server(e,{cors:{origin:this.cors}}),this.socket.on("connection",t=>{this.logger.info("User connected"),t.on("disconnect",()=>{this.logger.info("User disconnected")})}),this.logger.info("Socket.io initialized"))}set cors(e){this.corsConfig=e}get cors(){return this.corsConfig?.includes("*")?"*":this.corsConfig}set socket(e){this.io=e}get socket(){return this.io}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=s.replace(/[.-]/gm,"_").toUpperCase(),d=M.get("LOG").LEVEL.includes("WEBSOCKET"),l={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c};M.get("WEBSOCKET")?.GLOBAL_EVENTS&&(this.socket.emit(s,l),d&&this.logger.log({local:`${t}.sendData-WebsocketGlobal`,...l}));try{let g=await this.get(e);if(!g?.enabled)return;Array.isArray(g?.events)&&g?.events.includes(u)&&(this.socket.of(`/${e}`).emit(s,l),d&&this.logger.log({local:`${t}.sendData-Websocket`,...l}))}catch(g){d&&this.logger.log(g)}}};var js=class{constructor(i,e){this.prisma=i,this.monitor=e,this.websocket=new Vs(i,e),this.webhook=new Hs(i,e),this.rabbitmq=new $s(i,e),this.sqs=new qs(i,e),this.pusher=new Ws(i,e)}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set websocket(i){this.websocketController=i}get websocket(){return this.websocketController}set webhook(i){this.webhookController=i}get webhook(){return this.webhookController}set rabbitmq(i){this.rabbitmqController=i}get rabbitmq(){return this.rabbitmqController}set sqs(i){this.sqsController=i}get sqs(){return this.sqsController}set pusher(i){this.pusherController=i}get pusher(){return this.pusherController}init(i){this.websocket.init(i),this.rabbitmq.init(),this.sqs.init(),this.pusher.init()}async emit(i){await this.websocket.emit(i),await this.rabbitmq.emit(i),await this.sqs.emit(i),await this.webhook.emit(i),await this.pusher.emit(i)}async setInstance(i,e){e.websocket&&await this.websocket.set(i,{websocket:{enabled:!0,events:e.websocket?.events}}),e.rabbitmq&&await this.rabbitmq.set(i,{rabbitmq:{enabled:!0,events:e.rabbitmq?.events}}),e.sqs&&await this.sqs.set(i,{sqs:{enabled:!0,events:e.sqs?.events}}),e.webhook&&await this.webhook.set(i,{webhook:{enabled:!0,events:e.webhook?.events,url:e.webhook?.url,headers:e.webhook?.headers,base64:e.webhook?.base64,byEvents:e.webhook?.byEvents}}),e.pusher&&await this.pusher.set(i,{pusher:{enabled:!0,events:e.pusher?.events,appId:e.pusher?.appId,key:e.pusher?.key,secret:e.pusher?.secret,cluster:e.pusher?.cluster,useTLS:e.pusher?.useTLS}})}};var Ks=class{constructor(i){this.s3Service=i}async getMedia(i,e){return this.s3Service.getMedia(i,e)}async getMediaUrl(i,e){return this.s3Service.getMediaUrl(i,e)}};var Ys=class{constructor(i){this.prismaRepository=i;this.logger=new T("S3Service")}async getMedia(i,e){try{let t={instanceId:i.instanceId,...e},s=await this.prismaRepository.media.findMany({where:t,select:{id:!0,fileName:!0,type:!0,mimetype:!0,createdAt:!0,Message:!0}});if(!s||s.length===0)throw"Media not found";return s}catch(t){throw new y(t)}}async getMediaUrl(i,e){let t=(await this.getMedia(i,{id:e.id}))[0];return{mediaUrl:await Ve(t.fileName,e.expiry),...t}}};var Fo=require("child_process"),sr=require("fs"),Qs=require("path"),zs=class{constructor(i,e,t,s,r,n,o){this.eventEmitter=i;this.configService=e;this.prismaRepository=t;this.providerFiles=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.db={};this.redis={};this.logger=new T("WAMonitoringService");this.waInstances={};this.providerSession=Object.freeze(this.configService.get("PROVIDER"));this.removeInstance(),this.noConnection(),Object.assign(this.db,e.get("DATABASE")),Object.assign(this.redis,e.get("CACHE"))}delInstanceTime(i){let e=this.configService.get("DEL_INSTANCE");typeof e=="number"&&e>0&&setTimeout(async()=>{this.waInstances[i]?.connectionStatus?.state!=="open"&&(this.waInstances[i]?.connectionStatus?.state==="connecting"?(await this.waInstances[i].integration===P.WHATSAPP_BAILEYS&&(await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i]?.client?.end(void 0)),this.eventEmitter.emit("remove.instance",i,"inner")):this.eventEmitter.emit("remove.instance",i,"inner"))},1e3*60*e)}async instanceInfo(i){if(i&&i.length>0){let r=i?i.filter(n=>!this.waInstances[n]):[];if(r.length>0)throw new W(`Instance${r.length>1?"s":""} "${r.join(", ")}" not found`)}let e=this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,t=i&&i.length>0?{name:{in:i},clientName:e}:{clientName:e};return await this.prismaRepository.instance.findMany({where:t,include:{Chatwoot:!0,Proxy:!0,Rabbitmq:!0,Sqs:!0,Websocket:!0,Setting:!0,_count:{select:{Message:!0,Contact:!0,Chat:!0}}}})}async instanceInfoById(i,e){let t;if(i){if(t=await this.prismaRepository.instance.findFirst({where:{id:i}}).then(r=>r?.name),!t)throw new W(`Instance "${i}" not found`)}else if(e&&(t=await this.prismaRepository.instance.findFirst({where:{number:e}}).then(r=>r?.name),!t))throw new W(`Instance "${e}" not found`);if(!t)throw new W(`Instance "${i}" not found`);if(t&&!this.waInstances[t])throw new W(`Instance "${t}" not found`);let s=t?[t]:null;return this.instanceInfo(s)}async cleaningUp(i){let e;if(this.db.SAVE_DATA.INSTANCE&&await this.prismaRepository.instance.findFirst({where:{name:i}})){let s=await this.prismaRepository.instance.update({where:{name:i},data:{connectionStatus:"close"}});(0,sr.rmSync)((0,Qs.join)(Ct,s.id),{recursive:!0,force:!0}),e=s.id,await this.prismaRepository.session.deleteMany({where:{sessionId:s.id}})}this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&(await this.cache.delete(i),e&&await this.cache.delete(e)),this.providerSession?.ENABLED&&await this.providerFiles.removeSession(i)}async cleaningStoreData(i){this.configService.get("CHATWOOT").ENABLED&&(0,Fo.execSync)(`rm -rf ${(0,Qs.join)(uo,"chatwoot",i+"*")}`);let e=await this.prismaRepository.instance.findFirst({where:{name:i}});e&&((0,sr.rmSync)((0,Qs.join)(Ct,e.id),{recursive:!0,force:!0}),await this.prismaRepository.session.deleteMany({where:{sessionId:e.id}}),await this.prismaRepository.chat.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.contact.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.messageUpdate.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.message.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.webhook.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.chatwoot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.proxy.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.rabbitmq.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.sqs.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.integrationSession.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.typebot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.websocket.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.setting.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.label.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.instance.delete({where:{name:i}}))}async loadInstance(){try{this.providerSession?.ENABLED?await this.loadInstancesFromProvider():this.db.SAVE_DATA.INSTANCE?await this.loadInstancesFromDatabasePostgres():this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&await this.loadInstancesFromRedis()}catch(i){this.logger.error(i)}}async saveInstance(i){try{let e=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME;await this.prismaRepository.instance.create({data:{id:i.instanceId,name:i.instanceName,connectionStatus:i.integration&&i.integration===P.WHATSAPP_BAILEYS?"close":i.status??"open",number:i.number,integration:i.integration||P.WHATSAPP_BAILEYS,token:i.hash,clientName:e,businessId:i.businessId}})}catch(e){this.logger.error(e)}}deleteInstance(i){try{this.eventEmitter.emit("remove.instance",i,"inner")}catch(e){this.logger.error(e)}}async setInstance(i){let e=Xt.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});e&&(e.setInstance({instanceId:i.instanceId,instanceName:i.instanceName,integration:i.integration,token:i.token,number:i.number,businessId:i.businessId}),await e.connectToWhatsapp(),this.waInstances[i.instanceName]=e)}async loadInstancesFromRedis(){let i=await this.cache.keys();i?.length>0&&await Promise.all(i.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e.split(":")[1]}});if(!t)return;let s={instanceId:e.split(":")[1],instanceName:e.split(":")[2],integration:t.integration,token:t.token,number:t.number,businessId:t.businessId};this.setInstance(s)}))}async loadInstancesFromDatabasePostgres(){let i=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,e=await this.prismaRepository.instance.findMany({where:{clientName:i}});e.length!==0&&await Promise.all(e.map(async t=>{this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,number:t.number,businessId:t.businessId})}))}async loadInstancesFromProvider(){let[i]=await this.providerFiles.allInstances();i?.data&&await Promise.all(i?.data?.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e}});this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,businessId:t.businessId})}))}removeInstance(){this.eventEmitter.on("remove.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("remove.instance",null),this.cleaningUp(i),this.cleaningStoreData(i)}finally{this.logger.warn(`Instance "${i}" - REMOVED`)}try{delete this.waInstances[i]}catch(e){this.logger.error(e)}}),this.eventEmitter.on("logout.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("logout.instance",null),this.configService.get("CHATWOOT").ENABLED&&this.waInstances[i]?.clearCacheChatwoot(),this.cleaningUp(i)}finally{this.logger.warn(`Instance "${i}" - LOGOUT`)}})}noConnection(){this.eventEmitter.on("no.connection",async i=>{try{await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i].instance.qrcode={count:0},this.waInstances[i].stateConnection.state="close"}catch(e){this.logger.error({localError:"noConnection",warn:"Error deleting instance from memory.",error:e})}finally{this.logger.warn(`Instance "${i}" - NOT CONNECTION`)}})}};var Xs=class{constructor(i){this.waMonitor=i;this.logger=new T("ProxyService")}create(i,e){return this.waMonitor.waInstances[i.instanceName].setProxy(e),{proxy:{...i,proxy:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findProxy();if(Object.keys(e).length===0)throw new Error("Proxy not found");return e}catch{return null}}};var Zs=class{constructor(i){this.waMonitor=i;this.logger=new T("SettingsService")}async create(i,e){return await this.waMonitor.waInstances[i.instanceName].setSettings(e),{settings:{...i,settings:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findSettings();if(Object.keys(e).length===0)throw new Error("Settings not found");return e}catch{return null}}};var ir=v(require("axios")),ei=class{constructor(i,e,t){this.waMonitor=i;this.prismaRepository=e;this.configService=t;this.logger=new T("TemplateService")}async find(i){let e=await this.waMonitor.waInstances[i.instanceName].instance;if(!e)throw new Error("Instance not found");this.businessId=e.businessId,this.token=e.token;let t=await this.requestTemplate({},"GET");if(!t)throw new Error("Error to create template");return t.data}async create(i,e){try{let t=await this.waMonitor.waInstances[i.instanceName].instance;if(!t)throw new Error("Instance not found");this.businessId=t.businessId,this.token=t.token;let s={name:e.name,category:e.category,allow_category_change:e.allowCategoryChange,language:e.language,components:e.components},r=await this.requestTemplate(s,"POST");if(!r||r.error)throw new Error("Error to create template");return await this.prismaRepository.template.create({data:{templateId:r.id,name:e.name,template:r,webhookUrl:e.webhookUrl,instanceId:t.id}})}catch(t){throw this.logger.error(t),new Error("Error to create template")}}async requestTemplate(i,e){try{let t=this.configService.get("WA_BUSINESS").URL,s=this.configService.get("WA_BUSINESS").VERSION;t=`${t}/${s}/${this.businessId}/message_templates`;let r={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};if(e==="GET")return(await ir.default.get(t,{headers:r})).data;if(e==="POST")return(await ir.default.post(t,i,{headers:r})).data}catch(t){return this.logger.error(t.response.data),t.response.data.error}}};var Ip=new T("WA MODULE"),ti=null;M.get("CHATWOOT").ENABLED&&(ti=new Re(new Ce(M,Ae.name).getEngine()));var si=new Re(new Ce(M,"instance").getEngine()),Uo=new Re(new Ce(M,"baileys").getEngine()),nr=null;M.get("PROVIDER").ENABLED&&(nr=new Xe(M));var B=new Ze(M),k=new zs(Pn,M,B,nr,si,ti,Uo),Mp=new Ys(B),rr=new Ks(Mp),Tp=new ei(k,B,M),or=new is(Tp),Cp=new Xs(k),ii=new es(Cp,k),Jo=new Ae(k,M,B,ti),ni=new xs(Jo,M,B),Wo=new Zs(k),ar=new ss(Wo),Oe=new zt(k,M,B,Pn,Jo,Wo,ii,si,ti,Uo,nr),pe=new ts(k),$o=new Kt(k),K=new Yt(k),se=new Qt(k),cr=new Zt(k),Y=new js(B,k),Pe=new ae(B,k),Xt=new Ue(B,k),qo=new Ds(B,k),Go=new Ps(B,k),vp=new nt(k,M,B),ce=new Fs(vp,B,k),Ap=new it(k,M,B),te=new Ls(Ap,B,k),Rp=new st(k,M,B),le=new Os(Rp,B,k),Dp=new Ns(k,M,B),ue=new _s(Dp,B,k),Pp=new Bs(k,M,B),de=new ks(Pp,B,k);Ip.info("Module - ON");var xp=new T("GUARD");async function Op(p,i,e){let t=M.get("AUTHENTICATION").API_KEY,s=p.get("apikey"),r=M.get("DATABASE");if(!s)throw new qe;if(t.KEY===s)return e();if((p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))&&!s)throw new et("Missing global api key","The global api key must be set");let n=p.params;try{if(n?.instanceName){if((await B.instance.findUnique({where:{name:n.instanceName}})).token===s)return e()}else if(p.originalUrl.includes("/instance/fetchInstances")&&r.SAVE_DATA.INSTANCE&&await B.instance.findFirst({where:{token:s}}))return e()}catch(o){xp.error(o)}throw new qe}var pr={apikey:Op};async function Ho(p){try{let i=M.get("CACHE"),e=!!k.waInstances[p];if(i.REDIS.ENABLED&&i.REDIS.SAVE_INSTANCES){let t=await si.has(p);return e||t}return e||(await B.instance.findMany({where:{name:p}})).length>0}catch(i){throw new F(i?.toString())}}async function Vo(p,i,e){if(p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))return e();let t=p.params;if(!t?.instanceName)throw new y('"instanceName" not provided.');if(!await Ho(t.instanceName))throw new W(`The "${t.instanceName}" instance does not exist`);e()}async function jo(p,i,e){if(p.originalUrl.includes("/instance/create")){let t=p.body;if(await Ho(t.instanceName))throw new et(`This name "${t.instanceName}" is already in use.`);k.waInstances[t.instanceName]&&delete k.waInstances[t.instanceName]}e()}var lr=class{collectTelemetry(i,e,t){$(i.path),t()}},Ko=lr;var zo=require("express");var vf=require("express-async-errors");var ct=require("jsonschema"),At=new T("Validate"),x=class{constructor(){}routerPath(i,e=!0){let t="/"+i;return e&&(t+="/:instanceName"),t}async dataValidate(i){let{request:e,schema:t,ClassRef:s,execute:r}=i,n=new s,o=e.body,a=e.params;e?.query&&Object.keys(e.query).length>0&&Object.assign(a,e.query),e.originalUrl.includes("/instance/create")&&Object.assign(a,o),Object.assign(n,o);let c=t?(0,ct.validate)(n,t):{valid:!0,errors:[]};if(!c.valid){let u=c.errors.map(({stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),g});throw At.error(u),new y(u)}return await r(a,n)}async groupNoValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.params,o=new t;Object.assign(o,e.body);let a=(0,ct.validate)(o,s);if(!a.valid){let c=a.errors.map(({property:u,stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),{property:u.replace("instance.",""),message:g}});throw At.error([...c]),new y(...c)}return await r(n,o)}async groupValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.params,o=e.body,a=o?.groupJid;if(!a)if(e.query?.groupJid)a=e.query.groupJid;else throw new y("The group id needs to be informed in the query",'ex: "groupJid=120362@g.us"');a.endsWith("@g.us")||(a=a+"@g.us"),Object.assign(o,{groupJid:a});let c=new t;Object.assign(c,o);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw At.error([...d]),new y(...d)}return await r(n,c)}async inviteCodeValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.query;if(!n?.inviteCode)throw new y("The group invite code id needs to be informed in the query",'ex: "inviteCode=F1EX5QZxO181L3TMVP31gY" (Obtained from group join link)');let o=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw At.error([...d]),new y(...d)}return await r(o,c)}async getParticipantsValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.query;if(!n?.getParticipants)throw new y("The getParticipants needs to be informed in the query");let o=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw At.error([...d]),new y(...d)}return await r(o,c)}};var Yo=require("express"),ri=class extends x{constructor(e){super();this.configService=e;this.router=(0,Yo.Router)();this.router.post(this.routerPath("webhook/evolution",!1),async(t,s)=>{let{body:r}=t,n=await qo.receiveWebhook(r);return s.status(200).json(n)})}};var Qo=require("express"),oi=class extends x{constructor(e){super();this.configService=e;this.router=(0,Qo.Router)();this.router.get(this.routerPath("webhook/meta",!1),async(t,s)=>{t.query["hub.verify_token"]===e.get("WA_BUSINESS").TOKEN_WEBHOOK?s.send(t.query["hub.challenge"]):s.send("Error, wrong validation token")}).post(this.routerPath("webhook/meta",!1),async(t,s)=>{let{body:r}=t,n=await Go.receiveWebhook(r);return s.status(200).json(n)})}};var ai=class{constructor(i){this.router=(0,zo.Router)(),this.router.use("/",new ri(i).router),this.router.use("/",new oi(i).router)}};var ci=class{};function Xo(p){return class extends p{}}var ye=class{};function Zo(p){return class extends p{}}var pi=class extends Zo(Xo(class{})){};var A=class extends pi{},li=class{};var ie=require("uuid"),ne=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},_p={type:"string",description:"Invalid format"},ea={$id:(0,ie.v4)(),type:"object",properties:{numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",description:'"numbers" must be an array of numeric strings'}}}},ta={$id:(0,ie.v4)(),type:"object",properties:{readMessages:{type:"array",minItems:1,uniqueItems:!0,items:{properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")}}},required:["readMessages"]},sa={$id:(0,ie.v4)(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...ne("messageTimestamp")},archive:{type:"boolean",enum:[!0,!1]}},required:["archive"]},ia={$id:(0,ie.v4)(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...ne("messageTimestamp")}},required:["lastMessage"]},na={$id:(0,ie.v4)(),type:"object",properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"},participant:{type:"string"}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid","participant")},Rt={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},picture:{type:"string"}}},ra={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},text:{type:"string"},key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")}},...ne("number","text","key")},oa={$id:(0,ie.v4)(),type:"object",properties:{number:{..._p},delay:{type:"number"},presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["number","presence","delay"]},aa={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},status:{type:"string",enum:["block","unblock"]}},required:["number","status"],...ne("number","status")},ur={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},pushName:{type:"string",minLength:1},id:{type:"string",minLength:1}},...ne("_id","id","pushName")}}},ca={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},key:{type:"object",if:{propertyNames:{enum:["fromMe","remoteJid","id"]}},then:{properties:{remoteJid:{type:"string",minLength:1,description:"The property cannot be empty"},id:{type:"string",minLength:1,description:"The property cannot be empty"},fromMe:{type:"boolean",enum:[!0,!1]}}}},message:{type:"object"}},...ne("_id")},limit:{type:"integer"}}},pa={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string"},remoteJid:{type:"string"},id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},participant:{type:"string"},status:{type:"string",enum:["ERROR","PENDING","SERVER_ACK","DELIVERY_ACK","READ","PLAYED"]}},...ne("_id","remoteJid","id","status")},limit:{type:"integer"}}},la={$id:(0,ie.v4)(),type:"object",properties:{readreceipts:{type:"string",enum:["all","none"]},profile:{type:"string",enum:["all","contacts","contact_blacklist","none"]},status:{type:"string",enum:["all","contacts","contact_blacklist","none"]},online:{type:"string",enum:["all","match_last_seen"]},last:{type:"string",enum:["all","contacts","contact_blacklist","none"]},groupadd:{type:"string",enum:["all","contacts","contact_blacklist","none"]}},required:["readreceipts","profile","status","online","last","groupadd"],...ne("readreceipts","profile","status","online","last","groupadd")},ua={$id:(0,ie.v4)(),type:"object",properties:{name:{type:"string"}},...ne("name")},da={$id:(0,ie.v4)(),type:"object",properties:{status:{type:"string"}},...ne("status")},ga={type:"object",properties:{wuid:{type:"string"},name:{type:"string"},picture:{type:"string"},status:{type:"string"},isBusiness:{type:"boolean"}}};var ge=require("uuid"),fe=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},ma={$id:(0,ge.v4)(),type:"object",properties:{subject:{type:"string"},description:{type:"string"},profilePicture:{type:"string"},promoteParticipants:{type:"boolean",enum:[!0,!1]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["subject","participants"],...fe("subject","description","profilePicture")},Dt={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string",pattern:"^[\\d-]+@g.us$"}},required:["groupJid"],...fe("groupJid")},ha={$id:(0,ge.v4)(),type:"object",properties:{getParticipants:{type:"string",enum:["true","false"]}},required:["getParticipants"],...fe("getParticipants")},ya={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"},numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"numbers" must be an array of numeric strings'}}},required:["groupJid","description","numbers"],...fe("groupJid","description","numbers")},fa={$id:(0,ge.v4)(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...fe("inviteCode")},wa={$id:(0,ge.v4)(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...fe("inviteCode")},ba={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["add","remove","promote","demote"]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["groupJid","action","participants"],...fe("groupJid","action")},Sa={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["announcement","not_announcement","locked","unlocked"]}},required:["groupJid","action"],...fe("groupJid","action")},Ea={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},expiration:{type:"number",enum:[0,86400,604800,7776e3]}},required:["groupJid","expiration"],...fe("groupJid","expiration")},Ia={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},image:{type:"string"}},required:["groupJid","image"],...fe("groupJid","image")},Ma={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},subject:{type:"string"}},required:["groupJid","subject"],...fe("groupJid","subject")},Ta={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"}},required:["groupJid","description"],...fe("groupJid","description")};var dr=require("uuid"),Np=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},D={$id:(0,dr.v4)(),type:"object",properties:{instanceName:{type:"string"},token:{type:"string"},number:{type:"string",pattern:"^\\d+[\\.@\\w-]+"},businessId:{type:"string"},qrcode:{type:"boolean"},Integration:{type:"string",enum:Object.values(P)},rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"},proxyHost:{type:"string"},proxyPort:{type:"string"},proxyProtocol:{type:"string"},proxyUsername:{type:"string"},proxyPassword:{type:"string"},webhookUrl:{type:"string"},webhookByEvents:{type:"boolean"},webhookBase64:{type:"boolean"},webhookEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},rabbitmqEnabled:{type:"boolean"},rabbitmqEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},sqsEnabled:{type:"boolean"},sqsEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},chatwootAccountId:{type:"string"},chatwootToken:{type:"string"},chatwootUrl:{type:"string"},chatwootSignMsg:{type:"boolean"},chatwootReopenConversation:{type:"boolean"},chatwootConversationPending:{type:"boolean"},chatwootImportContacts:{type:"boolean"},chatwootNameInbox:{type:"string"},chatwootMergeBrazilContacts:{type:"boolean"},chatwootImportMessages:{type:"boolean"},chatwootDaysLimitImportMessages:{type:"number"}},...Np("instanceName")},Ca={$id:(0,dr.v4)(),type:"object",properties:{presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["presence"]};var va=require("uuid"),kp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Bp={type:"string",description:"Invalid format"},Aa={$id:(0,va.v4)(),type:"object",properties:{number:{...Bp},labelId:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["number","labelId","action"],...kp("number","labelId","action")};var re=require("uuid"),pt=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},we={type:"string",description:"Invalid format"},Ra={$id:(0,re.v4)(),type:"object",properties:{number:{...we},name:{type:"string"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","language"]},_e={properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id"],...pt("id")},message:{type:"object"}}},Da={$id:(0,re.v4)(),type:"object",properties:{number:{...we},isVideo:{type:"boolean",enum:[!0,!1]},callDuration:{type:"integer",minimum:1,maximum:15}},required:["number","callDuration"]},Pa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},text:{type:"string"},linkPreview:{type:"boolean"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","text"]},xa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},mediatype:{type:"string",enum:["image","document","video","audio"]},mimetype:{type:"string"},media:{type:"string"},fileName:{type:"string"},caption:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","mediatype"]},Oa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},video:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},_a={$id:(0,re.v4)(),type:"object",properties:{number:{...we},audio:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Na={$id:(0,re.v4)(),type:"object",properties:{type:{type:"string",enum:["text","image","audio","video"]},content:{type:"string"},caption:{type:"string"},backgroundColor:{type:"string"},font:{type:"integer",minimum:0,maximum:5},statusJidList:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"statusJidList" must be an array of numeric strings'}},allContacts:{type:"boolean",enum:[!0,!1]}},required:["type"]},ka={$id:(0,re.v4)(),type:"object",properties:{number:{...we},sticker:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Ba={$id:(0,re.v4)(),type:"object",properties:{number:{...we},latitude:{type:"number"},longitude:{type:"number"},name:{type:"string"},address:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","latitude","longitude","name","address"]},La={$id:(0,re.v4)(),type:"object",properties:{number:{...we},contact:{type:"array",items:{type:"object",properties:{fullName:{type:"string"},wuid:{type:"string",minLength:10,pattern:"\\d+",description:'"wuid" must be a numeric string'},phoneNumber:{type:"string",minLength:10},organization:{type:"string"},email:{type:"string"},url:{type:"string"}},required:["fullName","phoneNumber"],...pt("fullName")},minItems:1,uniqueItems:!0}},required:["number","contact"]},Fa={$id:(0,re.v4)(),type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","remoteJid","fromMe"],...pt("id","remoteJid")},reaction:{type:"string"}},required:["key","reaction"]},Ua={$id:(0,re.v4)(),type:"object",properties:{number:{...we},name:{type:"string"},selectableCount:{type:"integer",minimum:0,maximum:10},values:{type:"array",minItems:2,maxItems:10,uniqueItems:!0,items:{type:"string"}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","name","selectableCount","values"]},Ja={$id:(0,re.v4)(),type:"object",properties:{number:{...we},title:{type:"string"},description:{type:"string"},footerText:{type:"string"},buttonText:{type:"string"},sections:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},rows:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},description:{type:"string"},rowId:{type:"string"}},required:["title","rowId"],...pt("title","description","rowId")}}},required:["title","rows"],...pt("title")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","title","footerText","buttonText","sections"]},Wa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},thumbnailUrl:{type:"string"},title:{type:"string"},description:{type:"string"},footer:{type:"string"},buttons:{type:"array",items:{type:"object",properties:{type:{type:"string",enum:["reply","copy","url","call","pix"]},displayText:{type:"string"},id:{type:"string"},url:{type:"string"},phoneNumber:{type:"string"},currency:{type:"string"},name:{type:"string"},keyType:{type:"string",enum:["phone","email","cpf","cnpj","random"]},key:{type:"string"}},required:["type"],...pt("id","url","phoneNumber")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]};var $a=require("uuid"),Lp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},qa={$id:(0,$a.v4)(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},host:{type:"string"},port:{type:"string"},protocol:{type:"string"},username:{type:"string"},password:{type:"string"}},required:["enabled","host","port","protocol"],...Lp("enabled","host","port","protocol")};var Ga=require("uuid"),Fp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ha={$id:(0,Ga.v4)(),type:"object",properties:{rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"}},required:["rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory"],...Fp("rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory")};var Va=require("uuid"),Up=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},ja={$id:(0,Va.v4)(),type:"object",properties:{name:{type:"string"},category:{type:"string",enum:["AUTHENTICATION","MARKETING","UTILITY"]},allowCategoryChange:{type:"boolean"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","category","language","components"],...Up("name","category","language","components")};var Ka=require("uuid"),Jp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ya={$id:(0,Ka.v4)(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},accountId:{type:"string"},token:{type:"string"},url:{type:"string"},signMsg:{type:"boolean",enum:[!0,!1]},signDelimiter:{type:["string","null"]},nameInbox:{type:["string","null"]},reopenConversation:{type:"boolean",enum:[!0,!1]},conversationPending:{type:"boolean",enum:[!0,!1]},autoCreate:{type:"boolean",enum:[!0,!1]},importContacts:{type:"boolean",enum:[!0,!1]},mergeBrazilContacts:{type:"boolean",enum:[!0,!1]},importMessages:{type:"boolean",enum:[!0,!1]},daysLimitImportMessages:{type:"number"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","accountId","token","url","signMsg","reopenConversation","conversationPending"],...Jp("enabled","accountId","token","url","signMsg","reopenConversation","conversationPending")};var Pt=require("uuid"),ui=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},gr={$id:(0,Pt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},botType:{type:"string",enum:["chatBot","textGenerator","agent","workflow"]},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","botType","triggerType"],...ui("enabled","botType","triggerType")},Qa={$id:(0,Pt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...ui("remoteJid","status")},za={$id:(0,Pt.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},difyIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...ui("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},Xa={$id:(0,Pt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...ui("remoteJid","action")};var xt=require("uuid"),di=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},mr={$id:(0,xt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","apiUrl","triggerType"],...di("enabled","apiUrl","triggerType")},Za={$id:(0,xt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...di("remoteJid","status")},ec={$id:(0,xt.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...di("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},tc={$id:(0,xt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...di("remoteJid","action")};var Ot=require("uuid"),gi=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},hr={$id:(0,Ot.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","apiUrl","triggerType"],...gi("enabled","apiUrl","triggerType")},sc={$id:(0,Ot.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...gi("remoteJid","status")},ic={$id:(0,Ot.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...gi("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},nc={$id:(0,Ot.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...gi("remoteJid","action")};var lt=require("uuid"),_t=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},yr={$id:(0,lt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},openaiCredsId:{type:"string"},botType:{type:"string",enum:["assistant","chatCompletion"]},assistantId:{type:"string"},functionUrl:{type:"string"},model:{type:"string"},systemMessages:{type:"array",items:{type:"string"}},assistantMessages:{type:"array",items:{type:"string"}},userMessages:{type:"array",items:{type:"string"}},maxTokens:{type:"integer"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","openaiCredsId","botType","triggerType"],..._t("enabled","openaiCredsId","botType","triggerType")},rc={$id:(0,lt.v4)(),type:"object",properties:{name:{type:"string"},apiKey:{type:"string"}},required:["name","apiKey"],..._t("name","apiKey")},oc={$id:(0,lt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],..._t("remoteJid","status")},ac={$id:(0,lt.v4)(),type:"object",properties:{openaiCredsId:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},speechToText:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}},openaiIdFallback:{type:"string"}},required:["openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],..._t("openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},cc={$id:(0,lt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],..._t("remoteJid","action")};var ut=require("uuid"),Nt=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},fr={$id:(0,ut.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},url:{type:"string"},typebot:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","url","typebot","triggerType"],...Nt("enabled","url","typebot","triggerType")},pc={$id:(0,ut.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Nt("remoteJid","status")},lc={$id:(0,ut.v4)(),type:"object",properties:{remoteJid:{type:"string"},url:{type:"string"},typebot:{type:"string"}},required:["remoteJid","url","typebot"],...Nt("remoteJid","url","typebot")},uc={$id:(0,ut.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},typebotIdFallback:{type:"string"},ignoreJids:{type:"array",items:{type:"string"}}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe"],...Nt("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe")},dc={$id:(0,ut.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Nt("remoteJid","action")};var fc=require("uuid");var gc=require("uuid");var Wp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},mc={$id:(0,gc.v4)(),type:"object",properties:{pusher:{type:"object",properties:{enabled:{type:"boolean"},appId:{type:"string"},key:{type:"string"},secret:{type:"string"},cluster:{type:"string"},useTLS:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:z.events}}},required:["enabled","appId","key","secret","cluster","useTLS"],...Wp("enabled","appId","key","secret","cluster","useTLS")}},required:["pusher"]};var hc=require("uuid");var $p=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},yc={$id:(0,hc.v4)(),type:"object",properties:{webhook:{type:"object",properties:{enabled:{type:"boolean"},url:{type:"string"},headers:{type:"object"},byEvents:{type:"boolean"},base64:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:z.events}}},required:["enabled","url"],...$p("enabled","url")}},required:["webhook"]};var dt={$id:(0,fc.v4)(),type:"object",properties:{websocket:{$ref:"#/$defs/event"},rabbitmq:{$ref:"#/$defs/event"},sqs:{$ref:"#/$defs/event"}},$defs:{event:{type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},events:{type:"array",minItems:0,items:{type:"string",enum:z.events}}},required:["enabled"]}}};var wc=require("express"),mi=class extends x{constructor(...e){super();this.router=(0,wc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ya,ClassRef:ci,execute:(n,o)=>ni.createChatwoot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ni.findChatwoot(n)});s.status(200).json(r)}).post(this.routerPath("webhook"),async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:(n,o)=>ni.receiveWebhook(n,o)});s.status(200).json(r)})}};var be=class{};var kt=class{},hi=class{};var bc=require("express"),yi=class extends x{constructor(...e){super();this.router=(0,bc.Router)();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:gr,ClassRef:kt,execute:(n,o)=>le.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>le.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>le.fetchBot(n,t.params.difyId)});s.status(200).json(r)}).put(this.routerPath("update/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:gr,ClassRef:kt,execute:(n,o)=>le.updateBot(n,t.params.difyId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>le.deleteBot(n,t.params.difyId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:za,ClassRef:hi,execute:(n,o)=>le.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>le.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Qa,ClassRef:A,execute:(n,o)=>le.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>le.fetchSessions(n,t.params.difyId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Xa,ClassRef:be,execute:(n,o)=>le.ignoreJid(n,o)});s.status(200).json(r)})}};var fi=class{},Bt=class{},wi=class{};var Sc=require("express"),bi=class extends x{constructor(...e){super();this.router=(0,Sc.Router)();this.router.post(this.routerPath("creds"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:rc,ClassRef:fi,execute:(n,o)=>te.createOpenaiCreds(n,o)});s.status(201).json(r)}).get(this.routerPath("creds"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.findOpenaiCreds(n)});s.status(200).json(r)}).delete(this.routerPath("creds/:openaiCredsId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.deleteCreds(n,t.params.openaiCredsId)});s.status(200).json(r)}).post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:yr,ClassRef:Bt,execute:(n,o)=>te.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.fetchBot(n,t.params.openaiBotId)});s.status(200).json(r)}).put(this.routerPath("update/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:yr,ClassRef:Bt,execute:(n,o)=>te.updateBot(n,t.params.openaiBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.deleteBot(n,t.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ac,ClassRef:wi,execute:(n,o)=>te.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:oc,ClassRef:A,execute:(n,o)=>te.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.fetchSessions(n,t.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:cc,ClassRef:be,execute:(n,o)=>te.ignoreJid(n,o)});s.status(200).json(r)}).get(this.routerPath("getModels"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>te.getModels(n)});s.status(200).json(r)})}};var Lt=class{},Si=class{};var Ec=require("express"),Ei=class extends x{constructor(...e){super();this.router=(0,Ec.Router)();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:fr,ClassRef:Lt,execute:(n,o)=>ce.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ce.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ce.fetchBot(n,t.params.typebotId)});s.status(200).json(r)}).put(this.routerPath("update/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:fr,ClassRef:Lt,execute:(n,o)=>ce.updateBot(n,t.params.typebotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ce.deleteBot(n,t.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:uc,ClassRef:Si,execute:(n,o)=>ce.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ce.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("start"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:lc,ClassRef:A,execute:(n,o)=>ce.startBot(n,o)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:pc,ClassRef:A,execute:(n,o)=>ce.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ce.fetchSessions(n,t.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:dc,ClassRef:be,execute:(n,o)=>ce.ignoreJid(n,o)});s.status(200).json(r)})}};var Tc=require("express");var Ic=require("express");var Ft=class{},Ii=class{};var Mi=class extends x{constructor(...e){super();this.router=(0,Ic.Router)();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:mr,ClassRef:Ft,execute:(n,o)=>ue.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ue.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ue.fetchBot(n,t.params.evolutionBotId)});s.status(200).json(r)}).put(this.routerPath("update/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:mr,ClassRef:Ft,execute:(n,o)=>ue.updateBot(n,t.params.evolutionBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ue.deleteBot(n,t.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ec,ClassRef:Ii,execute:(n,o)=>ue.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ue.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Za,ClassRef:A,execute:(n,o)=>ue.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ue.fetchSessions(n,t.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:tc,ClassRef:be,execute:(n,o)=>ue.ignoreJid(n,o)});s.status(200).json(r)})}};var Mc=require("express");var Ut=class{},Ti=class{};var Ci=class extends x{constructor(...e){super();this.router=(0,Mc.Router)();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:hr,ClassRef:Ut,execute:(n,o)=>de.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>de.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>de.fetchBot(n,t.params.flowiseId)});s.status(200).json(r)}).put(this.routerPath("update/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:hr,ClassRef:Ut,execute:(n,o)=>de.updateBot(n,t.params.flowiseId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>de.deleteBot(n,t.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ic,ClassRef:Ti,execute:(n,o)=>de.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>de.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:sc,ClassRef:A,execute:(n,o)=>de.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>de.fetchSessions(n,t.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:nc,ClassRef:be,execute:(n,o)=>de.ignoreJid(n,o)});s.status(200).json(r)})}};var vi=class{constructor(...i){this.router=(0,Tc.Router)(),this.router.use("/evolutionBot",new Mi(...i).router),this.router.use("/chatwoot",new mi(...i).router),this.router.use("/typebot",new Ei(...i).router),this.router.use("/openai",new bi(...i).router),this.router.use("/dify",new yi(...i).router),this.router.use("/flowise",new Ci(...i).router)}};var Cc=require("express"),Ai=class extends x{constructor(...e){super();this.router=(0,Cc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:mc,ClassRef:ye,execute:(n,o)=>Y.pusher.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>Y.pusher.get(n.instanceName)});s.status(200).json(r)})}};var vc=require("express"),Ri=class extends x{constructor(...e){super();this.router=(0,vc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:dt,ClassRef:ye,execute:(n,o)=>Y.rabbitmq.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>Y.rabbitmq.get(n.instanceName)});s.status(200).json(r)})}};var Ac=require("express"),Di=class extends x{constructor(...e){super();this.router=(0,Ac.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:dt,ClassRef:ye,execute:(n,o)=>Y.sqs.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>Y.sqs.get(n.instanceName)});s.status(200).json(r)})}};var Rc=require("express"),Pi=class extends x{constructor(e,...t){super();this.configService=e;this.router=(0,Rc.Router)();this.router.post(this.routerPath("set"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:yc,ClassRef:ye,execute:(o,a)=>Y.webhook.set(o.instanceName,a)});r.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:A,execute:o=>Y.webhook.get(o.instanceName)});r.status(200).json(n)})}};var Dc=require("express"),xi=class extends x{constructor(...e){super();this.router=(0,Dc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:dt,ClassRef:ye,execute:(n,o)=>Y.websocket.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>Y.websocket.get(n.instanceName)});s.status(200).json(r)})}};var Pc=require("express"),Oi=class{constructor(i,...e){this.router=(0,Pc.Router)(),this.router.use("/webhook",new Pi(i,...e).router),this.router.use("/websocket",new xi(...e).router),this.router.use("/rabbitmq",new Ri(...e).router),this.router.use("/pusher",new Ai(...e).router),this.router.use("/sqs",new Di(...e).router)}};var Jt=class{};var wr=require("uuid"),xc=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Oc={$id:(0,wr.v4)(),type:"object",properties:{id:{type:"string"},type:{type:"string"},messageId:{type:"integer"}},...xc("id","type","messageId")},_c={$id:(0,wr.v4)(),type:"object",properties:{id:{type:"string",pattern:"\\d+",minLength:1},expiry:{type:"string",pattern:"\\d+",minLength:1}},...xc("id"),required:["id"]};var Nc=require("express"),_i=class extends x{constructor(...e){super();this.router=(0,Nc.Router)();this.router.post(this.routerPath("getMedia"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Oc,ClassRef:Jt,execute:(n,o)=>rr.getMedia(n,o)});s.status(201).json(r)}).post(this.routerPath("getMediaUrl"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:_c,ClassRef:Jt,execute:(n,o)=>rr.getMediaUrl(n,o)});s.status(200).json(r)})}};var kc=require("express"),Ni=class{constructor(...i){this.router=(0,kc.Router)(),this.router.use("/s3",new _i(...i).router)}};var Hc=require("express"),En=v(require("fs")),Vc=v(require("mime")),Ir=v(require("path"));var br=class{},ki=class extends br{};var Bc=require("express");var Bi=class extends x{constructor(...e){super();this.router=(0,Bc.Router)();this.router.post(this.routerPath("offer"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Da,ClassRef:ki,execute:(n,o)=>$o.offerCall(n,o)});return s.status(201).json(r)})}};var Lc=require("express");var Li=class extends x{constructor(...e){super();this.router=(0,Lc.Router)();this.router.post(this.routerPath("whatsappNumbers"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ea,ClassRef:us,execute:(n,o)=>K.whatsappNumber(n,o)});return s.status(200).json(r)}).post(this.routerPath("markMessageAsRead"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ta,ClassRef:ms,execute:(n,o)=>K.readMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("archiveChat"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:sa,ClassRef:hs,execute:(n,o)=>K.archiveChat(n,o)});return s.status(201).json(r)}).post(this.routerPath("markChatUnread"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ia,ClassRef:ys,execute:(n,o)=>K.markChatUnread(n,o)});return s.status(201).json(r)}).delete(this.routerPath("deleteMessageForEveryone"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:na,ClassRef:ws,execute:(n,o)=>K.deleteMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("fetchProfilePictureUrl"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Rt,ClassRef:Mt,execute:(n,o)=>K.fetchProfilePicture(n,o)});return s.status(200).json(r)}).post(this.routerPath("getBase64FromMediaMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:ls,execute:(n,o)=>K.getBase64FromMediaMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ra,ClassRef:Es,execute:(n,o)=>K.updateMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("sendPresence"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:oa,ClassRef:Ss,execute:(n,o)=>K.sendPresence(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateBlockStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:aa,ClassRef:Is,execute:(n,o)=>K.blockUser(n,o)});return s.status(201).json(r)}).post(this.routerPath("findContacts"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ur,ClassRef:$e,execute:(n,o)=>K.fetchContacts(n,o)});return s.status(200).json(r)}).post(this.routerPath("findMessages"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ca,ClassRef:$e,execute:(n,o)=>K.fetchMessages(n,o)});return s.status(200).json(r)}).post(this.routerPath("findStatusMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:pa,ClassRef:$e,execute:(n,o)=>K.fetchStatusMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("findChats"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ur,ClassRef:$e,execute:(n,o)=>K.fetchChats(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchBusinessProfile"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Rt,ClassRef:ot,execute:(n,o)=>K.fetchBusinessProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchProfile"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ga,ClassRef:Mt,execute:(n,o)=>K.fetchProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileName"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ua,ClassRef:ds,execute:(n,o)=>K.updateProfileName(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:da,ClassRef:gs,execute:(n,o)=>K.updateProfileStatus(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfilePicture"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Rt,ClassRef:ot,execute:(n,o)=>K.updateProfilePicture(n,o)});return s.status(200).json(r)}).delete(this.routerPath("removeProfilePicture"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Rt,ClassRef:ot,execute:n=>K.removeProfilePicture(n)});return s.status(200).json(r)}).get(this.routerPath("fetchPrivacySettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:A,execute:n=>K.fetchPrivacySettings(n)});return s.status(200).json(r)}).post(this.routerPath("updatePrivacySettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:la,ClassRef:fs,execute:(n,o)=>K.updatePrivacySettings(n,o)});return s.status(201).json(r)})}};var Fi=class{},Ui=class{},Ji=class{},Wi=class{},Te=class{},$i=class{},qi=class{},Gi=class{},Hi=class{},Vi=class extends Te{},ji=class extends Te{},Ki=class extends Te{};var Fc=require("express");var Yi=class extends x{constructor(...e){super();this.router=(0,Fc.Router)();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ma,ClassRef:Fi,execute:(n,o)=>se.createGroup(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupSubject"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Ma,ClassRef:Ji,execute:(n,o)=>se.updateGroupSubject(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupPicture"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Ia,ClassRef:Ui,execute:(n,o)=>se.updateGroupPicture(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupDescription"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Ta,ClassRef:Wi,execute:(n,o)=>se.updateGroupDescription(n,o)});s.status(201).json(r)}).get(this.routerPath("findGroupInfos"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Dt,ClassRef:Te,execute:(n,o)=>se.findGroupInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchAllGroups"),...e,async(t,s)=>{let r=await this.getParticipantsValidate({request:t,schema:ha,ClassRef:$i,execute:(n,o)=>se.fetchAllGroups(n,o)});s.status(200).json(r)}).get(this.routerPath("participants"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Dt,ClassRef:Te,execute:(n,o)=>se.findParticipants(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteCode"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Dt,ClassRef:Te,execute:(n,o)=>se.inviteCode(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteInfo"),...e,async(t,s)=>{let r=await this.inviteCodeValidate({request:t,schema:fa,ClassRef:qi,execute:(n,o)=>se.inviteInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("acceptInviteCode"),...e,async(t,s)=>{let r=await this.inviteCodeValidate({request:t,schema:wa,ClassRef:Gi,execute:(n,o)=>se.acceptInviteCode(n,o)});s.status(200).json(r)}).post(this.routerPath("sendInvite"),...e,async(t,s)=>{let r=await this.groupNoValidate({request:t,schema:ya,ClassRef:Hi,execute:(n,o)=>se.sendInvite(n,o)});s.status(200).json(r)}).post(this.routerPath("revokeInviteCode"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Dt,ClassRef:Te,execute:(n,o)=>se.revokeInviteCode(n,o)});s.status(201).json(r)}).post(this.routerPath("updateParticipant"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:ba,ClassRef:Vi,execute:(n,o)=>se.updateGParticipate(n,o)});s.status(201).json(r)}).post(this.routerPath("updateSetting"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Sa,ClassRef:ji,execute:(n,o)=>se.updateGSetting(n,o)});s.status(201).json(r)}).post(this.routerPath("toggleEphemeral"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Ea,ClassRef:Ki,execute:(n,o)=>se.toggleEphemeral(n,o)});s.status(201).json(r)}).delete(this.routerPath("leaveGroup"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:{},ClassRef:Te,execute:(n,o)=>se.leaveGroup(n,o)});s.status(200).json(r)})}};var Uc=require("express");var Qi=class extends x{constructor(e,...t){super();this.configService=e;this.router=(0,Uc.Router)();this.router.post("/create",...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:A,execute:o=>Oe.createInstance(o)});return r.status(201).json(n)}).post(this.routerPath("restart"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Oe.restartInstance(o)});return r.status(200).json(n)}).get(this.routerPath("connect"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Oe.connectToWhatsapp(o)});return r.status(200).json(n)}).get(this.routerPath("connectionState"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Oe.connectionState(o)});return r.status(200).json(n)}).get(this.routerPath("fetchInstances",!1),...t,async(s,r)=>{let n=s.get("apikey"),o=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:a=>Oe.fetchInstances(a,n)});return r.status(200).json(o)}).post(this.routerPath("setPresence"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:Ca,ClassRef:li,execute:(o,a)=>Oe.setPresence(o,a)});return r.status(201).json(n)}).delete(this.routerPath("logout"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Oe.logout(o)});return r.status(200).json(n)}).delete(this.routerPath("delete"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Oe.deleteInstance(o)});return r.status(200).json(n)})}};var zi=class{},Xi=class{};var Jc=require("express");var Zi=class extends x{constructor(...e){super();this.router=(0,Jc.Router)();this.router.get(this.routerPath("findLabels"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:zi,execute:n=>cr.fetchLabels(n)});return s.status(200).json(r)}).post(this.routerPath("handleLabel"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Aa,ClassRef:Xi,execute:(n,o)=>cr.handleLabel(n,o)});return s.status(200).json(r)})}};var en=class{};var Wc=require("express");var tn=class extends x{constructor(...e){super();this.router=(0,Wc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:qa,ClassRef:en,execute:(n,o)=>ii.createProxy(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:D,ClassRef:A,execute:n=>ii.findProxy(n)});s.status(200).json(r)})}};var me=class{},sn=class extends me{};var nn=class extends me{},rn=class extends me{},Wt=class extends me{},on=class extends me{},an=class extends me{};var cn=class extends me{},pn=class extends me{};var ln=class extends me{};var un=class extends me{},dn=class extends me{},gn=class{};var $c=require("express"),Sr=v(require("multer"));var $t=(0,Sr.default)({storage:Sr.default.memoryStorage()}),mn=class extends x{constructor(...e){super();this.router=(0,$c.Router)();this.router.post(this.routerPath("sendTemplate"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ra,ClassRef:un,execute:(n,o)=>pe.sendTemplate(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendText"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Pa,ClassRef:sn,execute:(n,o)=>pe.sendText(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendMedia"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:xa,ClassRef:Wt,execute:o=>pe.sendMedia(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendPtv"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Oa,ClassRef:on,execute:o=>pe.sendPtv(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendWhatsAppAudio"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:_a,ClassRef:Wt,execute:o=>pe.sendWhatsAppAudio(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendStatus"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Na,ClassRef:nn,execute:o=>pe.sendStatus(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendSticker"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:ka,ClassRef:an,execute:o=>pe.sendSticker(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendLocation"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ba,ClassRef:pn,execute:(n,o)=>pe.sendLocation(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendContact"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:La,ClassRef:dn,execute:(n,o)=>pe.sendContact(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendReaction"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Fa,ClassRef:gn,execute:(n,o)=>pe.sendReaction(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendPoll"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ua,ClassRef:rn,execute:(n,o)=>pe.sendPoll(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendList"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ja,ClassRef:ln,execute:(n,o)=>pe.sendList(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendButtons"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Wa,ClassRef:cn,execute:(n,o)=>pe.sendButtons(n,o)});return s.status(201).json(r)})}};var hn=class{};var qc=require("express");var yn=class extends x{constructor(...e){super();this.router=(0,qc.Router)();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ha,ClassRef:hn,execute:(n,o)=>ar.createSettings(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:A,execute:n=>ar.findSettings(n)});s.status(200).json(r)})}};var fn=class{};var Gc=require("express");var wn=class extends x{constructor(e,...t){super();this.configService=e;this.router=(0,Gc.Router)();this.router.post(this.routerPath("create"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:ja,ClassRef:fn,execute:(o,a)=>or.createTemplate(o,a)});r.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:A,execute:o=>or.findTemplate(o)});r.status(200).json(n)})}};var Sn=v(require("express")),Er=v(require("path")),bn=class extends x{constructor(){super(),this.router=(0,Sn.Router)();let i=Er.default.join(process.cwd(),"manager","dist"),e=Er.default.join(i,"index.html");this.router.use(Sn.default.static(i)),this.router.get("*",(t,s)=>{s.sendFile(e)})}};var qt=(0,Hc.Router)(),jc=M.get("SERVER"),Se=[Vo,jo,pr.apikey],qp=new Ko,Gp=JSON.parse(En.default.readFileSync("./package.json","utf8"));jc.DISABLE_MANAGER||qt.use("/manager",new bn().router);qt.get("/assets/*",(p,i)=>{let e=p.params[0],t=Ir.default.join(process.cwd(),"manager","dist"),s=Ir.default.join(t,"assets/",e);En.default.existsSync(s)?(i.set("Content-Type",Vc.default.getType(s)||"text/css"),i.send(En.default.readFileSync(s))):i.status(404).send("File not found")});qt.use((p,i,e)=>qp.collectTelemetry(p,i,e)).get("/",(p,i)=>{i.status(200).json({status:200,message:"Welcome to the Evolution API, it is working!",version:Gp.version,clientName:process.env.DATABASE_CONNECTION_CLIENT_NAME,manager:jc.DISABLE_MANAGER?void 0:`${p.protocol}://${p.get("host")}/manager`,documentation:"https://doc.evolution-api.com"})}).post("/verify-creds",pr.apikey,async(p,i)=>i.status(200).json({status:200,message:"Credentials are valid",facebookAppId:process.env.FACEBOOK_APP_ID,facebookConfigId:process.env.FACEBOOK_CONFIG_ID,facebookUserToken:process.env.FACEBOOK_USER_TOKEN})).use("/instance",new Qi(M,...Se).router).use("/message",new mn(...Se).router).use("/call",new Bi(...Se).router).use("/chat",new Li(...Se).router).use("/group",new Yi(...Se).router).use("/template",new wn(M,...Se).router).use("/settings",new yn(...Se).router).use("/proxy",new tn(...Se).router).use("/label",new Zi(...Se).router).use("",new ai(M).router).use("",new Oi(M,...Se).router).use("",new vi(...Se).router).use("",new Ni(...Se).router);function Kc(){process.on("uncaughtException",(p,i)=>{new T("uncaughtException").error({origin:i,stderr:process.stderr.fd,error:p})}),process.on("unhandledRejection",(p,i)=>{let e=new T("unhandledRejection");e.error({origin:i,stderr:process.stderr.fd}),e.error(p)})}var Mn=v(require("@sentry/node"));var Mr=require("fs"),Yc=v(require("http")),Qc=v(require("https"));var gt,Gt=class Gt{static set app(i){Rr(this,gt,i)}static get https(){let{FULLCHAIN:i,PRIVKEY:e}=M.get("SSL_CONF");return Qc.createServer({cert:(0,Mr.readFileSync)(i),key:(0,Mr.readFileSync)(e)},Cn(Gt,gt))}static get http(){return Yc.createServer(Cn(Gt,gt))}};gt=new WeakMap,Ar(Gt,gt);var Ht=Gt;var zc=v(require("axios")),Xc=v(require("compression")),Zc=v(require("cors")),Je=v(require("express")),In=require("path");function Hp(){k.loadInstance()}async function Vp(){let p=new T("SERVER"),i=(0,Je.default)(),e=process.env.SENTRY_DSN;e&&(p.info("Sentry - ON"),Mn.init({dsn:e,environment:process.env.NODE_ENV||"development",tracesSampleRate:1,profilesSampleRate:1}),Mn.setupExpressErrorHandler(i));let t=null;M.get("PROVIDER").ENABLED&&(t=new Xe(M),await t.onModuleInit(),p.info("Provider:Files - ON")),await new Ze(M).onModuleInit(),i.use((0,Zc.default)({origin(o,a){let{ORIGIN:c}=M.get("CORS");return c.includes("*")||c.indexOf(o)!==-1?a(null,!0):a(new Error("Not allowed by CORS"))},methods:[...M.get("CORS").METHODS],credentials:M.get("CORS").CREDENTIALS}),(0,Je.urlencoded)({extended:!0,limit:"136mb"}),(0,Je.json)({limit:"136mb"}),(0,Xc.default)()),i.set("view engine","hbs"),i.set("views",(0,In.join)(Fe,"views")),i.use(Je.default.static((0,In.join)(Fe,"public"))),i.use("/store",Je.default.static((0,In.join)(Fe,"store"))),i.use("/",qt),i.use((o,a,c,u)=>{if(o){let d=M.get("WEBHOOK");if(d.EVENTS.ERRORS_WEBHOOK&&d.EVENTS.ERRORS_WEBHOOK!=""&&d.EVENTS.ERRORS){let l=new Date().getTimezoneOffset()*6e4,h=new Date(Date.now()-l).toISOString(),m=M.get("AUTHENTICATION").API_KEY.KEY,f=M.get("SERVER").URL,b={event:"error",data:{error:o.error||"Internal Server Error",message:o.message||"Internal Server Error",status:o.status||500,response:{message:o.message||"Internal Server Error"}},date_time:h,api_key:m,server_url:f};p.error(b);let S=d.EVENTS.ERRORS_WEBHOOK;zc.default.create({baseURL:S}).post("",b)}return c.status(o.status||500).json({status:o.status||500,error:o.error||"Internal Server Error",response:{message:o.message||"Internal Server Error"}})}u()},(o,a,c)=>{let{method:u,url:d}=o;a.status(404).json({status:404,error:"Not Found",response:{message:[`Cannot ${u.toUpperCase()} ${d}`]}}),c()});let r=M.get("SERVER");Ht.app=i;let n=Ht[r.TYPE];Y.init(n),n.listen(r.PORT,()=>p.log(r.TYPE.toUpperCase()+" - ON: "+r.PORT)),Hp(),Kc()}Vp();
/**
 * ┌──────────────────────────────────────────────────────────────────────────────┐
 * │ @author jrCleber                                                             │
 * │ @filename use-multi-file-auth-state-provider-files.ts                              │
 * │ Developed by: Cleber Wilson                                                  │
 * │ Creation date: May 31, 2024                                                 │
 * │ Contact: contato@codechat.dev                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @copyright © Cleber Wilson 2023. All rights reserved.                        │
 * │ Licensed under the Apache License, Version 2.0                               │
 * │                                                                              │
 * │  @license "https://github.com/code-chat-br/whatsapp-api/blob/main/LICENSE"   │
 * │                                                                              │
 * │ You may not use this file except in compliance with the License.             │
 * │ You may obtain a copy of the License at                                      │
 * │                                                                              │
 * │    http://www.apache.org/licenses/LICENSE-2.0                                │
 * │                                                                              │
 * │ Unless required by applicable law or agreed to in writing, software          │
 * │ distributed under the License is distributed on an "AS IS" BASIS,            │
 * │ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     │
 * │                                                                              │
 * │ See the License for the specific language governing permissions and          │
 * │ limitations under the License.                                               │
 * │                                                                              │
 * │ @type {AuthState}                                                            │
 * │ @function useMultiFileAuthStateRedisDb                                       │
 * │ @returns {Promise<AuthState>}                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @important                                                                   │
 * │ For any future changes to the code in this file, it is recommended to        │
 * │ contain, together with the modification, the information of the developer    │
 * │ who changed it and the date of modification.                                 │
 * └──────────────────────────────────────────────────────────────────────────────┘
 */
//# sourceMappingURL=main.js.map