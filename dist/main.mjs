var Or=p=>{throw TypeError(p)};var _r=(p=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(p,{get:(i,e)=>(typeof require<"u"?require:i)[e]}):p)(function(p){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+p+'" is not supported')});var E=(p,i)=>()=>(p&&(i=p(p=0)),i);var bl=(p,i)=>()=>(i||p((i={exports:{}}).exports,i),i.exports);var Nr=(p,i,e)=>i.has(p)||Or("Cannot "+e);var Ln=(p,i,e)=>(Nr(p,i,"read from private field"),e?e.call(p):i.get(p)),kr=(p,i,e)=>i.has(p)?Or("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(p):i.set(p,e),Br=(p,i,e,t)=>(Nr(p,i,"write to private field"),t?t.call(p,e):i.set(p,e),e);import{isBooleanString as Lr}from"class-validator";import Sl from"dotenv";var Ye,T,z=E(()=>{Sl.config();Ye=class{constructor(){this.loadEnv()}get(i){return this.env[i]}loadEnv(){this.env=this.envProcess(),this.env.PRODUCTION=process.env?.NODE_ENV==="PROD",process.env?.DOCKER_ENV==="true"&&(this.env.SERVER.TYPE=process.env.SERVER_TYPE,this.env.SERVER.PORT=Number.parseInt(process.env.SERVER_PORT)||8080)}envProcess(){return{SERVER:{TYPE:process.env.SERVER_TYPE||"http",PORT:Number.parseInt(process.env.SERVER_PORT)||8080,URL:process.env.SERVER_URL,DISABLE_DOCS:process.env?.SERVER_DISABLE_DOCS==="true",DISABLE_MANAGER:process.env?.SERVER_DISABLE_MANAGER==="true"},CORS:{ORIGIN:process.env.CORS_ORIGIN?.split(",")||["*"],METHODS:process.env.CORS_METHODS?.split(",")||["POST","GET","PUT","DELETE"],CREDENTIALS:process.env?.CORS_CREDENTIALS==="true"},SSL_CONF:{PRIVKEY:process.env?.SSL_CONF_PRIVKEY||"",FULLCHAIN:process.env?.SSL_CONF_FULLCHAIN||""},PROVIDER:{ENABLED:process.env?.PROVIDER_ENABLED==="true",HOST:process.env.PROVIDER_HOST,PORT:process.env?.PROVIDER_PORT||"5656",PREFIX:process.env?.PROVIDER_PREFIX||"evolution"},DATABASE:{CONNECTION:{URI:process.env.DATABASE_CONNECTION_URI||"",CLIENT_NAME:process.env.DATABASE_CONNECTION_CLIENT_NAME||"evolution"},PROVIDER:process.env.DATABASE_PROVIDER||"postgresql",SAVE_DATA:{INSTANCE:process.env?.DATABASE_SAVE_DATA_INSTANCE==="true",NEW_MESSAGE:process.env?.DATABASE_SAVE_DATA_NEW_MESSAGE==="true",MESSAGE_UPDATE:process.env?.DATABASE_SAVE_MESSAGE_UPDATE==="true",CONTACTS:process.env?.DATABASE_SAVE_DATA_CONTACTS==="true",CHATS:process.env?.DATABASE_SAVE_DATA_CHATS==="true",HISTORIC:process.env?.DATABASE_SAVE_DATA_HISTORIC==="true",LABELS:process.env?.DATABASE_SAVE_DATA_LABELS==="true",IS_ON_WHATSAPP:process.env?.DATABASE_SAVE_IS_ON_WHATSAPP==="true",IS_ON_WHATSAPP_DAYS:Number.parseInt(process.env?.DATABASE_SAVE_IS_ON_WHATSAPP_DAYS??"7")},DELETE_DATA:{LOGICAL_MESSAGE_DELETE:process.env?.DATABASE_DELETE_MESSAGE==="true"}},RABBITMQ:{ENABLED:process.env?.RABBITMQ_ENABLED==="true",GLOBAL_ENABLED:process.env?.RABBITMQ_GLOBAL_ENABLED==="true",EXCHANGE_NAME:process.env?.RABBITMQ_EXCHANGE_NAME||"evolution_exchange",URI:process.env.RABBITMQ_URI||"",EVENTS:{APPLICATION_STARTUP:process.env?.RABBITMQ_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.RABBITMQ_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.RABBITMQ_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.RABBITMQ_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.RABBITMQ_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.RABBITMQ_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.RABBITMQ_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.RABBITMQ_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.RABBITMQ_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.RABBITMQ_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.RABBITMQ_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.RABBITMQ_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.RABBITMQ_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.RABBITMQ_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.RABBITMQ_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.RABBITMQ_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.RABBITMQ_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.RABBITMQ_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.RABBITMQ_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.RABBITMQ_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.RABBITMQ_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.RABBITMQ_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.RABBITMQ_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.RABBITMQ_EVENTS_CALL==="true",TYPEBOT_START:process.env?.RABBITMQ_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},SQS:{ENABLED:process.env?.SQS_ENABLED==="true",ACCESS_KEY_ID:process.env.SQS_ACCESS_KEY_ID||"",SECRET_ACCESS_KEY:process.env.SQS_SECRET_ACCESS_KEY||"",ACCOUNT_ID:process.env.SQS_ACCOUNT_ID||"",REGION:process.env.SQS_REGION||""},WEBSOCKET:{ENABLED:process.env?.WEBSOCKET_ENABLED==="true",GLOBAL_EVENTS:process.env?.WEBSOCKET_GLOBAL_EVENTS==="true"},PUSHER:{ENABLED:process.env?.PUSHER_ENABLED==="true",GLOBAL:{ENABLED:process.env?.PUSHER_GLOBAL_ENABLED==="true",APP_ID:process.env?.PUSHER_GLOBAL_APP_ID||"",KEY:process.env?.PUSHER_GLOBAL_KEY||"",SECRET:process.env?.PUSHER_GLOBAL_SECRET||"",CLUSTER:process.env?.PUSHER_GLOBAL_CLUSTER||"",USE_TLS:process.env?.PUSHER_GLOBAL_USE_TLS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.PUSHER_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.PUSHER_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.PUSHER_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.PUSHER_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.PUSHER_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.PUSHER_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.PUSHER_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.PUSHER_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.PUSHER_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.PUSHER_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.PUSHER_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.PUSHER_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.PUSHER_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.PUSHER_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.PUSHER_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.PUSHER_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.PUSHER_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.PUSHER_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.PUSHER_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.PUSHER_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.PUSHER_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.PUSHER_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.PUSHER_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.PUSHER_EVENTS_CALL==="true",TYPEBOT_START:process.env?.PUSHER_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},WA_BUSINESS:{TOKEN_WEBHOOK:process.env.WA_BUSINESS_TOKEN_WEBHOOK||"evolution",URL:process.env.WA_BUSINESS_URL||"https://graph.facebook.com",VERSION:process.env.WA_BUSINESS_VERSION||"v18.0",LANGUAGE:process.env.WA_BUSINESS_LANGUAGE||"en"},LOG:{LEVEL:process.env?.LOG_LEVEL?.split(",")||["ERROR","WARN","DEBUG","INFO","LOG","VERBOSE","DARK","WEBHOOKS","WEBSOCKET"],COLOR:process.env?.LOG_COLOR==="true",BAILEYS:process.env?.LOG_BAILEYS||"error"},DEL_INSTANCE:Lr(process.env?.DEL_INSTANCE)?process.env.DEL_INSTANCE==="true":Number.parseInt(process.env.DEL_INSTANCE)||!1,DEL_TEMP_INSTANCES:Lr(process.env?.DEL_TEMP_INSTANCES)?process.env.DEL_TEMP_INSTANCES==="true":!0,LANGUAGE:process.env?.LANGUAGE||"en",WEBHOOK:{GLOBAL:{URL:process.env?.WEBHOOK_GLOBAL_URL||"",ENABLED:process.env?.WEBHOOK_GLOBAL_ENABLED==="true",WEBHOOK_BY_EVENTS:process.env?.WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.WEBHOOK_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.WEBHOOK_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.WEBHOOK_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.WEBHOOK_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.WEBHOOK_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.WEBHOOK_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.WEBHOOK_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.WEBHOOK_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.WEBHOOK_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.WEBHOOK_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.WEBHOOK_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.WEBHOOK_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.WEBHOOK_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.WEBHOOK_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.WEBHOOK_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.WEBHOOK_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.WEBHOOK_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.WEBHOOK_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.WEBHOOK_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.WEBHOOK_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.WEBHOOK_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.WEBHOOK_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.WEBHOOK_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.WEBHOOK_EVENTS_CALL==="true",TYPEBOT_START:process.env?.WEBHOOK_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS==="true",ERRORS:process.env?.WEBHOOK_EVENTS_ERRORS==="true",ERRORS_WEBHOOK:process.env?.WEBHOOK_EVENTS_ERRORS_WEBHOOK||""}},CONFIG_SESSION_PHONE:{CLIENT:process.env?.CONFIG_SESSION_PHONE_CLIENT||"Evolution API",NAME:process.env?.CONFIG_SESSION_PHONE_NAME||"Chrome",VERSION:process.env?.CONFIG_SESSION_PHONE_VERSION||null},QRCODE:{LIMIT:Number.parseInt(process.env.QRCODE_LIMIT)||30,COLOR:process.env.QRCODE_COLOR||"#198754"},TYPEBOT:{ENABLED:process.env?.TYPEBOT_ENABLED==="true",API_VERSION:process.env?.TYPEBOT_API_VERSION||"old",SEND_MEDIA_BASE64:process.env?.TYPEBOT_SEND_MEDIA_BASE64==="true"},CHATWOOT:{ENABLED:process.env?.CHATWOOT_ENABLED==="true",MESSAGE_DELETE:process.env.CHATWOOT_MESSAGE_DELETE==="true",MESSAGE_READ:process.env.CHATWOOT_MESSAGE_READ==="true",BOT_CONTACT:!process.env.CHATWOOT_BOT_CONTACT||process.env.CHATWOOT_BOT_CONTACT==="true",IMPORT:{DATABASE:{CONNECTION:{URI:process.env.CHATWOOT_IMPORT_DATABASE_CONNECTION_URI||""}},PLACEHOLDER_MEDIA_MESSAGE:process.env?.CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE==="true"}},OPENAI:{ENABLED:process.env?.OPENAI_ENABLED==="true",API_KEY_GLOBAL:process.env?.OPENAI_API_KEY_GLOBAL||null},DIFY:{ENABLED:process.env?.DIFY_ENABLED==="true"},CACHE:{REDIS:{ENABLED:process.env?.CACHE_REDIS_ENABLED==="true",URI:process.env?.CACHE_REDIS_URI||"",PREFIX_KEY:process.env?.CACHE_REDIS_PREFIX_KEY||"evolution-cache",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||604800,SAVE_INSTANCES:process.env?.CACHE_REDIS_SAVE_INSTANCES==="true"},LOCAL:{ENABLED:process.env?.CACHE_LOCAL_ENABLED==="true",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||86400}},S3:{ACCESS_KEY:process.env?.S3_ACCESS_KEY,SECRET_KEY:process.env?.S3_SECRET_KEY,ENDPOINT:process.env?.S3_ENDPOINT,BUCKET_NAME:process.env?.S3_BUCKET,ENABLE:process.env?.S3_ENABLED==="true",PORT:Number.parseInt(process.env?.S3_PORT||"9000"),USE_SSL:process.env?.S3_USE_SSL==="true",REGION:process.env?.S3_REGION},AUTHENTICATION:{API_KEY:{KEY:process.env.AUTHENTICATION_API_KEY||"BQYHJGJHJ"},EXPOSE_IN_FETCH_INSTANCES:process.env?.AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES==="true"}}}},T=new Ye});import El from"dayjs";import Il from"fs";var Ml,Fr,We,Ur,Jr,Wr,C,_=E(()=>{z();Ml=JSON.parse(Il.readFileSync("./package.json","utf8")),Fr=p=>El(p).toDate().toString().replace(/\sGMT.+/,""),We=(o=>(o.LOG="\x1B[32m",o.INFO="\x1B[34m",o.WARN="\x1B[33m",o.ERROR="\x1B[31m",o.DEBUG="\x1B[36m",o.VERBOSE="\x1B[37m",o.DARK="\x1B[30m",o))(We||{}),Ur=(o=>(o.LOG="\x1B[32m%s\x1B[0m",o.DARK="\x1B[30m%s\x1B[0m",o.INFO="\x1B[34m%s\x1B[0m",o.WARN="\x1B[33m%s\x1B[0m",o.ERROR="\x1B[31m%s\x1B[0m",o.DEBUG="\x1B[36m%s\x1B[0m",o.VERBOSE="\x1B[37m%s\x1B[0m",o))(Ur||{}),Jr=(o=>(o.LOG="LOG",o.WARN="WARN",o.INFO="INFO",o.DARK="DARK",o.ERROR="ERROR",o.DEBUG="DEBUG",o.VERBOSE="VERBOSE",o))(Jr||{}),Wr=(o=>(o.LOG="\x1B[42m",o.INFO="\x1B[44m",o.WARN="\x1B[43m",o.DARK="\x1B[40m",o.ERROR="\x1B[41m",o.DEBUG="\x1B[46m",o.VERBOSE="\x1B[47m",o))(Wr||{}),C=class{constructor(i="Logger"){this.configService=T;this.instance=null;this.context=i}setContext(i){this.context=i}setInstance(i){this.instance=i}console(i,e){let t=[];this.configService.get("LOG").LEVEL.forEach(r=>t.push(Jr[r]));let s=typeof i;t.includes(e)&&(T.get("LOG").COLOR?(console.log("\x1B[1m"+Ur[e],"[Evolution API]","\x1B[1m"+We[e],this.instance?`[${this.instance}]`:"","\x1B[1m"+We[e],`v${Ml.version}`,"\x1B[1m"+We[e],process.pid.toString(),"\x1B[0m","\x1B[1m"+We[e],"-","\x1B[1m\x1B[37m",`${Fr(Date.now())}  `,"\x1B[0m",We[e]+Wr[e]+"\x1B[1m",`${e} \x1B[0m`,"\x1B[33m\x1B[1m",`[${this.context}]\x1B[0m`,We[e]+"\x1B[1m",`[${s}]\x1B[0m`,We[e],s!=="object"?i:"","\x1B[0m"),s==="object"&&console.log(i,`
`)):console.log("[Evolution API]",this.instance?`[${this.instance}]`:"",process.pid.toString(),"-",`${Fr(Date.now())}  `,`${e} `,`[${this.context}]`,`[${s}]`,i))}log(i){this.console(i,"LOG")}info(i){this.console(i,"INFO")}warn(i){this.console(i,"WARN")}error(i){this.console(i,"ERROR")}verbose(i){this.console(i,"VERBOSE")}debug(i){this.console(i,"DEBUG")}dark(i){this.console(i,"DARK")}}});import $e from"axios";import{execSync as Tl}from"child_process";var at,Fn=E(()=>{_();at=class{constructor(i){this.configService=i;this.logger=new C("ProviderFiles");this.config=Object.freeze(this.configService.get("PROVIDER"));this.baseUrl=`http://${this.config.HOST}:${this.config.PORT}/session/${this.config.PREFIX}`,this.globalApiToken=this.configService.get("AUTHENTICATION").API_KEY.KEY}get isEnabled(){return!!this.config?.ENABLED}async onModuleInit(){if(this.config.ENABLED){let i=`http://${this.config.HOST}:${this.config.PORT}`;try{if((await $e.options(i+"/ping"))?.data!="pong")throw new Error("Offline file provider.");await $e.post(`${i}/session`,{group:this.config.PREFIX},{headers:{apikey:this.globalApiToken}})}catch(e){this.logger.error(["Failed to connect to the file server",e?.message,e?.stack]);let t=process.pid;Tl(`kill -9 ${t}`)}}}async onModuleDestroy(){}async create(i){try{let e=await $e.post(`${this.baseUrl}`,{instance:i},{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}async write(i,e,t){try{let s=await $e.post(`${this.baseUrl}/${i}/${e}`,t,{headers:{apikey:this.globalApiToken}});return[{status:s.status,data:s?.data}]}catch(s){return[{status:s?.response?.status,data:s?.response?.data},s]}}async read(i,e){try{let t=await $e.get(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async delete(i,e){try{let t=await $e.delete(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async allInstances(){try{let i=await $e.get(`${this.baseUrl}/list-instances`,{headers:{apikey:this.globalApiToken}});return[{status:i.status,data:i?.data}]}catch(i){return[{status:i?.response?.status,data:i?.response?.data},i]}}async removeSession(i){try{let e=await $e.delete(`${this.baseUrl}/${i}`,{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}}});import{PrismaClient as Cl}from"@prisma/client";var Qe,ct,Vt=E(()=>{_();Qe=class{},ct=class extends Cl{constructor(e){super();this.configService=e;this.logger=new C("PrismaRepository")}async onModuleInit(){await this.$connect(),this.logger.info("Repository:Prisma - ON")}async onModuleDestroy(){await this.$disconnect(),this.logger.warn("Repository:Prisma - OFF")}}});import{BufferJSON as $r}from"baileys";import vl from"node-cache";var de,jt,qr=E(()=>{_();de=class de{constructor(i,e){this.configService=i;this.module=e;this.logger=new C("LocalCache");this.conf=this.configService.get("CACHE")?.LOCAL}async get(i){return de.localCache.get(this.buildKey(i))}async set(i,e,t){return de.localCache.set(this.buildKey(i),e,t||this.conf.TTL)}async has(i){return de.localCache.has(this.buildKey(i))}async delete(i){return de.localCache.del(this.buildKey(i))}async deleteAll(i){let e=await this.keys(i);return e?.length?de.localCache.del(e):0}async keys(i){let e=`${this.buildKey("")}${i?`${i}:`:""}`;return de.localCache.keys().filter(t=>t.substring(0,e.length)===e)}buildKey(i){return`${this.module}:${i}`}async hGet(i,e){try{let t=de.localCache.get(this.buildKey(i));return t&&e in t?JSON.parse(t[e],$r.reviver):null}catch(t){this.logger.error(t)}}async hSet(i,e,t){try{let s=JSON.stringify(t,$r.replacer),r=de.localCache.get(this.buildKey(i));r||(r={}),r[e]=s,de.localCache.set(this.buildKey(i),r)}catch(s){this.logger.error(s)}}async hDelete(i,e){try{let t=de.localCache.get(this.buildKey(i));return t&&e in t?(delete t[e],de.localCache.set(this.buildKey(i),t),1):0}catch(t){this.logger.error(t)}}};de.localCache=new vl;jt=de});import{createClient as Al}from"redis";var Un,Gr,Hr=E(()=>{z();_();Un=class{constructor(){this.logger=new C("Redis");this.client=null;this.connected=!1;this.conf=T.get("CACHE")?.REDIS}getConnection(){if(this.connected)return this.client;this.client=Al({url:this.conf.URI}),this.client.on("connect",()=>{this.logger.verbose("redis connecting")}),this.client.on("ready",()=>{this.logger.verbose("redis ready"),this.connected=!0}),this.client.on("error",()=>{this.logger.error("redis disconnected"),this.connected=!1}),this.client.on("end",()=>{this.logger.verbose("redis connection ended"),this.connected=!1});try{this.client.connect(),this.connected=!0}catch(i){return this.connected=!1,this.logger.error("redis connect exception caught: "+i),null}return this.client}},Gr=new Un});import{BufferJSON as Vr}from"baileys";var Kt,jr=E(()=>{_();Hr();Kt=class{constructor(i,e){this.configService=i;this.module=e;this.logger=new C("RedisCache");this.conf=this.configService.get("CACHE")?.REDIS,this.client=Gr.getConnection()}async get(i){try{return JSON.parse(await this.client.get(this.buildKey(i)))}catch(e){this.logger.error(e)}}async hGet(i,e){try{let t=await this.client.hGet(this.buildKey(i),e);return t?JSON.parse(t,Vr.reviver):null}catch(t){this.logger.error(t)}}async set(i,e,t){try{await this.client.setEx(this.buildKey(i),t||this.conf?.TTL,JSON.stringify(e))}catch(s){this.logger.error(s)}}async hSet(i,e,t){try{let s=JSON.stringify(t,Vr.replacer);await this.client.hSet(this.buildKey(i),e,s)}catch(s){this.logger.error(s)}}async has(i){try{return await this.client.exists(this.buildKey(i))>0}catch(e){this.logger.error(e)}}async delete(i){try{return await this.client.del(this.buildKey(i))}catch(e){this.logger.error(e)}}async hDelete(i,e){try{return await this.client.hDel(this.buildKey(i),e)}catch(t){this.logger.error(t)}}async deleteAll(i){try{let e=await this.keys(i);return e?.length?await this.client.del(e):0}catch(e){this.logger.error(e)}}async keys(i){try{let e=`${this.buildKey("")}${i?`${i}:`:""}*`,t=[];for await(let s of this.client.scanIterator({MATCH:e,COUNT:100}))t.push(s);return[...new Set(t)]}catch(e){this.logger.error(e)}}buildKey(i){return`${this.conf?.PREFIX_KEY}:${this.module}:${i}`}}});var Kr,Oe,Yt=E(()=>{_();qr();jr();Kr=new C("CacheEngine"),Oe=class{constructor(i,e){this.configService=i;let t=i.get("CACHE");t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""?(Kr.verbose(`RedisCache initialized for ${e}`),this.engine=new Kt(i,e)):t?.LOCAL?.ENABLED&&(Kr.verbose(`LocalCache initialized for ${e}`),this.engine=new jt(i,e))}getEngine(){return this.engine}}});import Rl from"eventemitter2";var Dl,Jn,Yr=E(()=>{Dl=parseInt(process.env.EVENT_EMITTER_MAX_LISTENERS,10)||50,Jn=new Rl({delimiter:".",newListener:!1,ignoreErrors:!1,maxListeners:Dl})});var Qt,Qr=E(()=>{Qt=class{constructor(i){this.waMonitor=i}async offerCall({instanceName:i},e){return await this.waMonitor.waInstances[i].offerCall(e)}}});var zt,zr=E(()=>{zt=class{constructor(i){this.waMonitor=i}async whatsappNumber({instanceName:i},e){return await this.waMonitor.waInstances[i].whatsappNumber(e)}async readMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].markMessageAsRead(e)}async archiveChat({instanceName:i},e){return await this.waMonitor.waInstances[i].archiveChat(e)}async markChatUnread({instanceName:i},e){return await this.waMonitor.waInstances[i].markChatUnread(e)}async deleteMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].deleteMessage(e)}async fetchProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].profilePicture(e.number)}async fetchProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchProfile(i,e.number)}async fetchContacts({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchContacts(e)}async getBase64FromMediaMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].getBase64FromMediaMessage(e)}async fetchMessages({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchMessages(e)}async fetchStatusMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchStatusMessage(e)}async fetchChats({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchChats(e)}async sendPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].sendPresence(e)}async fetchPrivacySettings({instanceName:i}){return await this.waMonitor.waInstances[i].fetchPrivacySettings()}async updatePrivacySettings({instanceName:i},e){return await this.waMonitor.waInstances[i].updatePrivacySettings(e)}async fetchBusinessProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchBusinessProfile(e.number)}async updateProfileName({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileName(e.name)}async updateProfileStatus({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileStatus(e.status)}async updateProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfilePicture(e.picture)}async removeProfilePicture({instanceName:i}){return await this.waMonitor.waInstances[i].removeProfilePicture()}async updateMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].updateMessage(e)}async blockUser({instanceName:i},e){return await this.waMonitor.waInstances[i].blockUser(e)}}});var Xt,Xr=E(()=>{Xt=class{constructor(i){this.waMonitor=i}async createGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].createGroup(e)}async updateGroupPicture(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupPicture(e)}async updateGroupSubject(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupSubject(e)}async updateGroupDescription(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupDescription(e)}async findGroupInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].findGroup(e)}async fetchAllGroups(i,e){return await this.waMonitor.waInstances[i.instanceName].fetchAllGroups(e)}async inviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteCode(e)}async inviteInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteInfo(e)}async sendInvite(i,e){return await this.waMonitor.waInstances[i.instanceName].sendInvite(e)}async acceptInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].acceptInviteCode(e)}async revokeInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].revokeInviteCode(e)}async findParticipants(i,e){return await this.waMonitor.waInstances[i.instanceName].findParticipants(e)}async updateGParticipate(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGParticipant(e)}async updateGSetting(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGSetting(e)}async toggleEphemeral(i,e){return await this.waMonitor.waInstances[i.instanceName].toggleEphemeral(e)}async leaveGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].leaveGroup(e)}}});var Zr,eo,D,pe=E(()=>{Zr=["imageMessage","documentMessage","audioMessage","videoMessage","stickerMessage","ptvMessage"],eo=["ephemeralMessage","documentWithCaptionMessage","viewOnceMessage","viewOnceMessageV2"],D={WHATSAPP_BUSINESS:"WHATSAPP-BUSINESS",WHATSAPP_BAILEYS:"WHATSAPP-BAILEYS",EVOLUTION:"EVOLUTION"}});var y,to=E(()=>{V();y=class{constructor(...i){throw{status:400,error:"Bad Request",message:i.length>0?i:void 0}}}});var ze,so=E(()=>{V();ze=class{constructor(...i){throw{status:401,error:"Unauthorized",message:i.length>0?i:"Unauthorized"}}}});var pt,io=E(()=>{V();pt=class{constructor(...i){throw{status:403,error:"Forbidden",message:i.length>0?i:void 0}}}});var $,no=E(()=>{V();$=class{constructor(...i){throw{status:404,error:"Not Found",message:i.length>0?i:void 0}}}});var U,ro=E(()=>{V();U=class{constructor(...i){throw{status:500,error:"Internal Server Error",message:i.length>0?i:void 0}}}});var te=E(()=>{to();so();io();no();ro()});import{delay as oo}from"baileys";import{isArray as ao,isURL as Pl}from"class-validator";import{v4 as co}from"uuid";var Zt,po=E(()=>{B();pe();_();te();Zt=class{constructor(i,e,t,s,r,n,o,a,c,u,d){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.eventEmitter=s;this.chatwootService=r;this.settingsService=n;this.proxyService=o;this.cache=a;this.chatwootCache=c;this.baileysCache=u;this.providerFiles=d;this.logger=new C("InstanceController")}async createInstance(i){try{let e=es.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});if(!e)throw new y("Invalid integration");let t=co();i.instanceId=t;let s;if(i.token?s=i.token:s=co().toUpperCase(),await this.waMonitor.saveInstance({instanceId:t,integration:i.integration,instanceName:i.instanceName,hash:s,number:i.number,businessId:i.businessId,status:i.status}),e.setInstance({instanceName:i.instanceName,instanceId:t,integration:i.integration,token:s,number:i.number,businessId:i.businessId}),this.waMonitor.waInstances[e.instanceName]=e,this.waMonitor.delInstanceTime(e.instanceName),await Z.setInstance(e.instanceName,i),e.sendDataWebhook("instance.create",{instanceName:i.instanceName,instanceId:t}),i.proxyHost&&i.proxyPort&&i.proxyProtocol){if(!await this.proxyService.testProxy({host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword}))throw new y("Invalid proxy");await this.proxyService.createProxy(e,{enabled:!0,host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword})}let r={rejectCall:i.rejectCall===!0,msgCall:i.msgCall||"",groupsIgnore:i.groupsIgnore===!0,alwaysOnline:i.alwaysOnline===!0,readMessages:i.readMessages===!0,readStatus:i.readStatus===!0,syncFullHistory:i.syncFullHistory===!0};await this.settingsService.create(e,r);let n=null,o="";if(i.integration===D.WHATSAPP_BUSINESS){if(!i.number)throw new y("number is required");n=`${this.configService.get("SERVER").URL}/webhook/meta`,o=this.configService.get("WA_BUSINESS").TOKEN_WEBHOOK}if(!i.chatwootAccountId||!i.chatwootToken||!i.chatwootUrl){let u;return i.qrcode&&i.integration===D.WHATSAPP_BAILEYS&&(await e.connectToWhatsapp(i.number),await oo(5e3),u=e.qrCode),{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,qrcode:u}}if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is not enabled");if(!i.chatwootAccountId)throw new y("accountId is required");if(!i.chatwootToken)throw new y("token is required");if(!i.chatwootUrl)throw new y("url is required");if(!Pl(i.chatwootUrl,{require_tld:!1}))throw new y('Invalid "url" property in chatwoot');if(i.chatwootSignMsg!==!0&&i.chatwootSignMsg!==!1)throw new y("signMsg is required");if(i.chatwootReopenConversation!==!0&&i.chatwootReopenConversation!==!1)throw new y("reopenConversation is required");if(i.chatwootConversationPending!==!0&&i.chatwootConversationPending!==!1)throw new y("conversationPending is required");let a=this.configService.get("SERVER").URL,c;try{c=await this.chatwootService.create(e,{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,nameInbox:i.chatwootNameInbox??e.instanceName.split("-cwId-")[0],number:i.number,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,importContacts:i.chatwootImportContacts??!0,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages??60,organization:i.chatwootOrganization,logo:i.chatwootLogo,autoCreate:i.chatwootAutoCreate!==!1}),this.logger.log(`Generated Inbox ID in controller: ${JSON.stringify(c)}`)}catch(u){this.logger.log(u)}return{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,chatwoot:{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importContacts:i.chatwootImportContacts??!0,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages||60,number:i.number,nameInbox:i.chatwootNameInbox??e.instanceName,inbox_id:c?.inboxId,webhookUrl:`${a}/chatwoot/webhook/${encodeURIComponent(e.instanceName)}`}}}catch(e){throw this.waMonitor.deleteInstance(i.instanceName),this.logger.error(ao(e.message)?e.message[0]:e.message),new y(ao(e.message)?e.message[0]:e.message)}}async connectToWhatsapp({instanceName:i,number:e=null}){try{let t=this.waMonitor.waInstances[i],s=t?.connectionStatus?.state;if(!s)throw new y('The "'+i+'" instance does not exist');return s=="open"?await this.connectionState({instanceName:i}):s=="connecting"?t.qrCode:s=="close"?(await t.connectToWhatsapp(e),await oo(2e3),t.qrCode):{instance:{instanceName:i,status:s},qrcode:t?.qrCode}}catch(t){return this.logger.error(t),{error:!0,message:t.toString()}}}async restartInstance({instanceName:i}){try{let e=this.waMonitor.waInstances[i],t=e?.connectionStatus?.state;if(!t)throw new y('The "'+i+'" instance does not exist');if(t=="close")throw new y('The "'+i+'" instance is not connected');if(t=="open")return this.configService.get("CHATWOOT").ENABLED&&e.clearCacheChatwoot(),this.logger.info("restarting instance"+i),e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i});if(t=="connecting")return e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i})}catch(e){return this.logger.error(e),{error:!0,message:e.toString()}}}async connectionState({instanceName:i}){return{instance:{instanceName:i,state:this.waMonitor.waInstances[i]?.connectionStatus?.state}}}async fetchInstances({instanceName:i,instanceId:e,number:t},s){if(this.configService.get("AUTHENTICATION").API_KEY.KEY!==s){let o=await this.prismaRepository.instance.findMany({where:{token:s,name:i||void 0,id:e||void 0}});if(o.length>0){let a=o.map(c=>c.name);return this.waMonitor.instanceInfo(a)}else throw new ze}if(e||t)return this.waMonitor.instanceInfoById(e,t);let n=i?[i]:null;return this.waMonitor.instanceInfo(n)}async setPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].setPresence(e)}async logout({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});if(e.state==="close")throw new y('The "'+i+'" instance is not connected');try{return this.waMonitor.waInstances[i]?.logoutInstance(),{status:"SUCCESS",error:!1,response:{message:"Instance logged out"}}}catch(t){throw new U(t.toString())}}async deleteInstance({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});if(e.state==="open")throw new y('The "'+i+'" instance needs to be disconnected');try{let t=this.waMonitor.waInstances[i];this.configService.get("CHATWOOT").ENABLED&&t?.clearCacheChatwoot(),e.state==="connecting"&&await this.logout({instanceName:i});try{t?.sendDataWebhook("instance.delete",{instanceName:i,instanceId:t.instanceId})}catch(s){this.logger.error(s)}return this.eventEmitter.emit("remove.instance",i,"inner"),{status:"SUCCESS",error:!1,response:{message:"Instance deleted"}}}catch(t){throw new y(t.toString())}}}});var ts,lo=E(()=>{ts=class{constructor(i){this.waMonitor=i}async fetchLabels({instanceName:i}){return await this.waMonitor.waInstances[i].fetchLabels()}async handleLabel({instanceName:i},e){return await this.waMonitor.waInstances[i].handleLabel(e)}}});import{HttpsProxyAgent as uo}from"https-proxy-agent";function Re(p){if(typeof p=="string")return new uo(p);let{host:i,password:e,port:t,protocol:s,username:r}=p,n=`${s}://${i}:${t}`;return r&&e&&(n=`${s}://${r}:${e}@${i}:${t}`),new uo(n)}var Wn=E(()=>{});import ss from"axios";var $n,is,go=E(()=>{_();te();Wn();$n=new C("ProxyController"),is=class{constructor(i,e){this.proxyService=i;this.waMonitor=e}async createProxy(i,e){if(!this.waMonitor.waInstances[i.instanceName])throw new $(`The "${i.instanceName}" instance does not exist`);if(e?.enabled||(e.host="",e.port="",e.protocol="",e.username="",e.password=""),e.host&&!await this.testProxy(e))throw new y("Invalid proxy");return this.proxyService.create(i,e)}async findProxy(i){if(!this.waMonitor.waInstances[i.instanceName])throw new $(`The "${i.instanceName}" instance does not exist`);return this.proxyService.find(i)}async testProxy(i){try{let e=await ss.get("https://icanhazip.com/");return(await ss.get("https://icanhazip.com/",{httpsAgent:Re(i)}))?.data!==e?.data}catch(e){return ss.isAxiosError(e)&&e.response?.data?$n.error("testProxy error: "+e.response.data):(ss.isAxiosError(e),$n.error("testProxy error: ")),!1}}}});import{isBase64 as bt,isURL as ns}from"class-validator";var rs,mo=E(()=>{te();rs=class{constructor(i){this.waMonitor=i}async sendTemplate({instanceName:i},e){return await this.waMonitor.waInstances[i].templateMessage(e)}async sendText({instanceName:i},e){return await this.waMonitor.waInstances[i].textMessage(e)}async sendMedia({instanceName:i},e,t){if(bt(e?.media)&&!e?.fileName&&e?.mediatype==="document")throw new y("For base64 the file name must be informed.");if(t||ns(e?.media)||bt(e?.media))return await this.waMonitor.waInstances[i].mediaMessage(e,t);throw new y("Owned media must be a url or base64")}async sendPtv({instanceName:i},e,t){if(t||ns(e?.video)||bt(e?.video))return await this.waMonitor.waInstances[i].ptvMessage(e,t);throw new y("Owned media must be a url or base64")}async sendSticker({instanceName:i},e,t){if(t||ns(e.sticker)||bt(e.sticker))return await this.waMonitor.waInstances[i].mediaSticker(e,t);throw new y("Owned media must be a url or base64")}async sendWhatsAppAudio({instanceName:i},e,t){if(t?.buffer||ns(e.audio)||bt(e.audio))return await this.waMonitor.waInstances[i].audioWhatsapp(e,t);throw console.error("El archivo no tiene buffer o el audio no es una URL o Base64 v\xE1lida"),new y("Owned media must be a url, base64, or valid file with buffer")}async sendButtons({instanceName:i},e){return await this.waMonitor.waInstances[i].buttonMessage(e)}async sendLocation({instanceName:i},e){return await this.waMonitor.waInstances[i].locationMessage(e)}async sendList({instanceName:i},e){return await this.waMonitor.waInstances[i].listMessage(e)}async sendContact({instanceName:i},e){return await this.waMonitor.waInstances[i].contactMessage(e)}async sendReaction({instanceName:i},e){if(!e.reaction.match(/[^()\w\sà-ú"-+]+/))throw new y('"reaction" must be an emoji');return await this.waMonitor.waInstances[i].reactionMessage(e)}async sendPoll({instanceName:i},e){return await this.waMonitor.waInstances[i].pollMessage(e)}async sendStatus({instanceName:i},e,t){return await this.waMonitor.waInstances[i].statusMessage(e,t)}}});var os,ho=E(()=>{os=class{constructor(i){this.settingsService=i}async createSettings(i,e){return this.settingsService.create(i,e)}async findSettings(i){return this.settingsService.find(i)}}});var as,yo=E(()=>{as=class{constructor(i){this.templateService=i}async createTemplate(i,e){return this.templateService.create(i,e)}async findTemplate(i){return this.templateService.find(i)}}});import xl from"pg";var Ol,qn,_e,Gn=E(()=>{z();_();({Pool:Ol}=xl),qn=class{constructor(){this.logger=new C("Postgres");this.connected=!1}getConnection(i){if(this.connected)return this.pool;this.pool=new Ol({connectionString:i,ssl:{rejectUnauthorized:!1}}),this.pool.on("error",()=>{this.logger.error("postgres disconnected"),this.connected=!1});try{this.connected=!0}catch(e){return this.connected=!1,this.logger.error("postgres connect exception caught: "+e),null}return this.pool}getChatwootConnection(){let i=T.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return this.getConnection(i)}},_e=new qn});var Hn,re,Vn=E(()=>{Gn();z();_();Hn=class{constructor(){this.logger=new C("ChatwootImport");this.repositoryMessagesCache=new Map;this.historyMessages=new Map;this.historyContacts=new Map}getRepositoryMessagesCache(i){return this.repositoryMessagesCache.has(i.instanceName)?this.repositoryMessagesCache.get(i.instanceName):null}setRepositoryMessagesCache(i,e){this.repositoryMessagesCache.set(i.instanceName,e)}deleteRepositoryMessagesCache(i){this.repositoryMessagesCache.delete(i.instanceName)}addHistoryMessages(i,e){let t=this.historyMessages.has(i.instanceName)?this.historyMessages.get(i.instanceName):[];this.historyMessages.set(i.instanceName,[...t,...e])}addHistoryContacts(i,e){let t=this.historyContacts.has(i.instanceName)?this.historyContacts.get(i.instanceName):[];this.historyContacts.set(i.instanceName,t.concat(e))}deleteHistoryMessages(i){this.historyMessages.delete(i.instanceName)}deleteHistoryContacts(i){this.historyContacts.delete(i.instanceName)}clearAll(i){this.deleteRepositoryMessagesCache(i),this.deleteHistoryMessages(i),this.deleteHistoryContacts(i)}getHistoryMessagesLenght(i){return this.historyMessages.get(i.instanceName)?.length??0}async importHistoryContacts(i,e){try{if(this.getHistoryMessagesLenght(i)>0)return;let t=_e.getChatwootConnection(),s=0,r=this.historyContacts.get(i.instanceName)||[];if(r.length===0)return 0;let n=this.sliceIntoChunks(r,3e3);for(;n.length>0;){let o=`SELECT id FROM labels WHERE title = '${e.nameInbox}' AND account_id = ${e.accountId} LIMIT 1`,a=(await t.query(o))?.rows[0]?.id;if(!a){let f=`INSERT INTO labels (title, color, show_on_sidebar, account_id, created_at, updated_at) VALUES ('${e.nameInbox}', '#34039B', true, ${e.accountId}, NOW(), NOW()) RETURNING id`;a=(await t.query(f))?.rows[0]?.id}let c=`INSERT INTO contacts
          (name, phone_number, account_id, identifier, created_at, updated_at) VALUES `,u=[e.accountId];for(let f of n){u.push(f.pushName);let b=`$${u.length}`;u.push(`+${f.remoteJid.split("@")[0]}`);let S=`$${u.length}`;u.push(f.remoteJid);let w=`$${u.length}`;c+=`(${b}, ${S}, $1, ${w}, NOW(), NOW()),`}c.slice(-1)===","&&(c=c.slice(0,-1)),c+=` ON CONFLICT (identifier, account_id)
                       DO UPDATE SET
                        name = EXCLUDED.name,
                        phone_number = EXCLUDED.phone_number,
                        identifier = EXCLUDED.identifier`,s+=(await t.query(c,u))?.rowCount??0;let d=`SELECT id FROM tags WHERE name = '${e.nameInbox}' LIMIT 1`,g=(await t.query(d))?.rows[0]?.id,h=`INSERT INTO tags (name, taggings_count) VALUES ('${e.nameInbox}', ${s}) ON CONFLICT (name) DO UPDATE SET taggings_count = tags.taggings_count + ${s} RETURNING id`;g=(await t.query(h))?.rows[0]?.id,await t.query(h);let m="INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) VALUES ";n.forEach(f=>{let b=`(SELECT id FROM contacts WHERE identifier = '${f.remoteJid}' AND account_id = ${e.accountId})`;m+=`($1, $2, ${b}, $3, NOW()),`}),m.slice(-1)===","&&(m=m.slice(0,-1)),await t.query(m,[g,"Contact","labels"]),n=this.sliceIntoChunks(r,3e3)}return this.deleteHistoryContacts(i),s}catch(t){this.logger.error(`Error on import history contacts: ${t.toString()}`)}}async getExistingSourceIds(i){try{let e=new Set;if(i.length===0)return e;let t=i.map(o=>`WAID:${o.replace("WAID:","")}`),n=await _e.getChatwootConnection().query("SELECT source_id FROM messages WHERE source_id = ANY($1)",[t]);for(let o of n.rows)e.add(o.source_id);return e}catch{return null}}async importHistoryMessages(i,e,t,s){try{let r=_e.getChatwootConnection(),n=await this.getChatwootUser(s);if(!n)throw new Error("User not found to import messages.");let o=0,a=this.historyMessages.get(i.instanceName)||[];if(a.length===0)return 0;a.sort((m,f)=>{let b=m.key,S=f.key,w=m.messageTimestamp,M=f.messageTimestamp;return parseInt(b.remoteJid)-parseInt(S.remoteJid)||w-M});let c=this.createMessagesMapByPhoneNumber(a),u=new Map;c.forEach((m,f)=>{u.set(f,{first:m[0]?.messageTimestamp,last:m[m.length-1]?.messageTimestamp})});let d=await this.getExistingSourceIds(a.map(m=>m.key.id));a=a.filter(m=>!d.has(m.key.id));let l=4e3,g=this.sliceIntoChunks(a,l);for(;g.length>0;){let m=this.createMessagesMapByPhoneNumber(g);if(m.size>0){let f=await this.selectOrCreateFksFromChatwoot(s,t,u,m),b=`INSERT INTO messages
            (content, processed_message_content, account_id, inbox_id, conversation_id, message_type, private, content_type,
            sender_type, sender_id, source_id, created_at, updated_at) VALUES `,S=[s.accountId,t.id];m.forEach((w,M)=>{let I=f.get(M);w.forEach(v=>{if(!v.message||!I?.conversation_id||!I?.contact_id)return;let x=this.getContentMessage(e,v);if(!x)return;S.push(x);let N=`$${S.length}`;S.push(I.conversation_id);let O=`$${S.length}`;S.push(v.key.fromMe?"1":"0");let F=`$${S.length}`;S.push(v.key.fromMe?n.user_type:"Contact");let G=`$${S.length}`;S.push(v.key.fromMe?n.user_id:I.contact_id);let j=`$${S.length}`;S.push("WAID:"+v.key.id);let K=`$${S.length}`;S.push(v.messageTimestamp);let H=`$${S.length}`;b+=`(${N}, ${N}, $1, $2, ${O}, ${F}, FALSE, 0,
                  ${G},${j},${K}, to_timestamp(${H}), to_timestamp(${H})),`})}),S.length>2&&(b.slice(-1)===","&&(b=b.slice(0,-1)),o+=(await r.query(b,S))?.rowCount??0)}g=this.sliceIntoChunks(a,l)}this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i);let h={...s,ignoreJids:Array.isArray(s.ignoreJids)?s.ignoreJids.map(m=>String(m)):[]};return this.importHistoryContacts(i,h),o}catch(r){this.logger.error(`Error on import history messages: ${r.toString()}`),this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i)}}async selectOrCreateFksFromChatwoot(i,e,t,s){let r=_e.getChatwootConnection(),n=[i.accountId,e.id],a=`WITH
              phone_number AS (
                SELECT phone_number, created_at::INTEGER, last_activity_at::INTEGER FROM (
                  VALUES 
                   ${Array.from(s.keys()).map(u=>{let d=t.get(u);if(d){n.push(u);let l=`($${n.length},`;return n.push(d.first),l+=`$${n.length},`,n.push(d.last),`${l}$${n.length})`}}).join(",")}
                 ) as t (phone_number, created_at, last_activity_at)
              ),

              only_new_phone_number AS (
                SELECT * FROM phone_number
                WHERE phone_number NOT IN (
                  SELECT phone_number
                  FROM contacts
                    JOIN contact_inboxes ci ON ci.contact_id = contacts.id AND ci.inbox_id = $2
                    JOIN conversations con ON con.contact_inbox_id = ci.id 
                      AND con.account_id = $1
                      AND con.inbox_id = $2
                      AND con.contact_id = contacts.id
                  WHERE contacts.account_id = $1
                )
              ),

              new_contact AS (
                INSERT INTO contacts (name, phone_number, account_id, identifier, created_at, updated_at)
                SELECT REPLACE(p.phone_number, '+', ''), p.phone_number, $1, CONCAT(REPLACE(p.phone_number, '+', ''),
                  '@s.whatsapp.net'), to_timestamp(p.created_at), to_timestamp(p.last_activity_at)
                FROM only_new_phone_number AS p
                ON CONFLICT(identifier, account_id) DO UPDATE SET updated_at = EXCLUDED.updated_at
                RETURNING id, phone_number, created_at, updated_at
              ),

              new_contact_inbox AS (
                INSERT INTO contact_inboxes (contact_id, inbox_id, source_id, created_at, updated_at)
                SELECT new_contact.id, $2, gen_random_uuid(), new_contact.created_at, new_contact.updated_at
                FROM new_contact 
                RETURNING id, contact_id, created_at, updated_at
              ),

              new_conversation AS (
                INSERT INTO conversations (account_id, inbox_id, status, contact_id,
                  contact_inbox_id, uuid, last_activity_at, created_at, updated_at)
                SELECT $1, $2, 0, new_contact_inbox.contact_id, new_contact_inbox.id, gen_random_uuid(),
                  new_contact_inbox.updated_at, new_contact_inbox.created_at, new_contact_inbox.updated_at
                FROM new_contact_inbox
                RETURNING id, contact_id
              )

              SELECT new_contact.phone_number, new_conversation.contact_id, new_conversation.id AS conversation_id
              FROM new_conversation 
              JOIN new_contact ON new_conversation.contact_id = new_contact.id

              UNION

              SELECT p.phone_number, c.id contact_id, con.id conversation_id
                FROM phone_number p
              JOIN contacts c ON c.phone_number = p.phone_number
              JOIN contact_inboxes ci ON ci.contact_id = c.id AND ci.inbox_id = $2
              JOIN conversations con ON con.contact_inbox_id = ci.id AND con.account_id = $1
                AND con.inbox_id = $2 AND con.contact_id = c.id`,c=await r.query(a,n);return new Map(c.rows.map(u=>[u.phone_number,u]))}async getChatwootUser(i){try{return(await _e.getChatwootConnection().query(`SELECT owner_type AS user_type, owner_id AS user_id
                         FROM access_tokens
                       WHERE token = $1`,[i.token]))?.rows[0]||!1}catch(e){this.logger.error(`Error on getChatwootUser: ${e.toString()}`)}}createMessagesMapByPhoneNumber(i){return i.reduce((e,t)=>{let s=t?.key;if(!this.isIgnorePhoneNumber(s?.remoteJid)){let r=s?.remoteJid?.split("@")[0];if(r){let n=`+${r}`,o=e.has(n)?e.get(n):[];o.push(t),e.set(n,o)}}return e},new Map)}async getContactsOrderByRecentConversations(i,e,t=50){try{return(await _e.getChatwootConnection().query(`SELECT contacts.id, contacts.identifier, contacts.phone_number
                     FROM conversations
                   JOIN contacts ON contacts.id = conversations.contact_id
                   WHERE conversations.account_id = $1
                     AND inbox_id = $2
                   ORDER BY conversations.last_activity_at DESC
                   LIMIT $3`,[e.accountId,i.id,t]))?.rows}catch(s){this.logger.error(`Error on get recent conversations: ${s.toString()}`)}}getContentMessage(i,e){let t=i.getConversationMessage(e.message);if(t)return t;if(!T.get("CHATWOOT").IMPORT.PLACEHOLDER_MEDIA_MESSAGE)return"";let s={documentMessage:e.message.documentMessage,documentWithCaptionMessage:e.message.documentWithCaptionMessage?.message?.documentMessage,imageMessage:e.message.imageMessage,videoMessage:e.message.videoMessage,audioMessage:e.message.audioMessage,stickerMessage:e.message.stickerMessage,templateMessage:e.message.templateMessage?.hydratedTemplate?.hydratedContentText};switch(Object.keys(s).find(n=>s[n]!==void 0)){case"documentMessage":return`_<File: ${e.message.documentMessage.fileName}${e.message.documentMessage.caption?` ${e.message.documentMessage.caption}`:""}>_`;case"documentWithCaptionMessage":return`_<File: ${e.message.documentWithCaptionMessage.message.documentMessage.fileName}${e.message.documentWithCaptionMessage.message.documentMessage.caption?` ${e.message.documentWithCaptionMessage.message.documentMessage.caption}`:""}>_`;case"templateMessage":return e.message.templateMessage.hydratedTemplate.hydratedTitleText?`*${e.message.templateMessage.hydratedTemplate.hydratedTitleText}*\\n`:""+e.message.templateMessage.hydratedTemplate.hydratedContentText;case"imageMessage":return"_<Image Message>_";case"videoMessage":return"_<Video Message>_";case"audioMessage":return"_<Audio Message>_";case"stickerMessage":return"_<Sticker Message>_";default:return""}}sliceIntoChunks(i,e){return i.splice(0,e)}isGroup(i){return i.includes("@g.us")}isIgnorePhoneNumber(i){return this.isGroup(i)||i==="status@broadcast"||i==="0@s.whatsapp.net"}updateMessageSourceID(i,e){return _e.getChatwootConnection().query("UPDATE messages SET source_id = $1, status = 0, created_at = NOW(), updated_at = NOW() WHERE id = $2;",[`WAID:${e}`,i])}},re=new Hn});import _l from"fs";import fo from"i18next";import wo from"path";var Nl,kl,Bl,bo,J,So=E(()=>{z();Nl=["en","pt-BR","es"],kl=wo.join(__dirname,"translations"),Bl=new Ye,bo={};Nl.forEach(p=>{let i=wo.join(kl,`${p}.json`);_l.existsSync(i)&&(bo[p]={translation:_r(i)})});fo.init({resources:bo,fallbackLng:"en",lng:Bl.get("LANGUAGE"),debug:!1,interpolation:{escapeValue:!1}});J=fo});import Ll from"axios";import Fl from"fs";var Ul,q,qe=E(()=>{Ul=JSON.parse(Fl.readFileSync("./package.json","utf8")),q=async p=>{if(!(process.env.TELEMETRY_ENABLED===void 0||process.env.TELEMETRY_ENABLED==="true")||p==="/")return;let e={route:p,apiVersion:`${Ul.version}`,timestamp:new Date},t=process.env.TELEMETRY_URL&&process.env.TELEMETRY_URL!==""?process.env.TELEMETRY_URL:"https://log.evolution-api.com/telemetry";Ll.post(t,e).then(()=>{}).catch(()=>{})}});import Jl from"@figuro/chatwoot-sdk";import{request as jn}from"@figuro/chatwoot-sdk/dist/core/request";import cs from"axios";import Wl from"dayjs";import Eo from"form-data";import Io from"jimp";import Mo from"long";import St from"mime";import To from"path";import{Readable as Kn}from"stream";var Ne,ps=E(()=>{Gn();Vn();pe();_();So();qe();Ne=class{constructor(i,e,t,s){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.cache=s;this.logger=new C("ChatwootService");this.pgClient=_e.getChatwootConnection()}async getProvider(i){let e=`${i.instanceName}:getProvider`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.waMonitor.waInstances[i.instanceName]?.findChatwoot();return t?(this.cache.set(e,t),t):(this.logger.warn("provider not found"),null)}async clientCw(i){let e=await this.getProvider(i);return e?(this.provider=e,new Jl({config:this.getClientCwConfig()})):(this.logger.error("provider not found"),null)}getClientCwConfig(){return{basePath:this.provider.url,with_credentials:!0,credentials:"include",token:this.provider.token,nameInbox:this.provider.nameInbox,mergeBrazilContacts:this.provider.mergeBrazilContacts}}getCache(){return this.cache}async create(i,e){await this.waMonitor.waInstances[i.instanceName].setChatwoot(e);let t="";if(e.autoCreate){this.logger.log("Auto create chatwoot instance");let s=this.configService.get("SERVER").URL;t=await this.initInstanceChatwoot(i,e.nameInbox??i.instanceName.split("-cwId-")[0],`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`,!0,e.number,e.organization,e.logo),this.logger.log(`Generated Inbox ID in service: ${JSON.stringify(t)}`)}return e.inboxId=t,e}async find(i){try{return await this.waMonitor.waInstances[i.instanceName].findChatwoot()}catch{return this.logger.error("chatwoot not found"),{enabled:null,url:""}}}async getContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;let s=await t.contact.getContactable({accountId:this.provider.accountId,id:e});return s||(this.logger.warn("contact not found"),null)}async initInstanceChatwoot(i,e,t,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c=await a.inboxes.list({accountId:this.provider.accountId}),u=c.payload.map(h=>h.name).includes(e),d;if(this.logger.log("Creating chatwoot inbox"),u){let h=c.payload.find(m=>m.name===e);if(!h)return this.logger.warn("inbox not found"),null;d=h.id}else{let h={type:"api",webhook_url:t},m=await a.inboxes.create({accountId:this.provider.accountId,data:{name:e,channel:h}});if(!m)return this.logger.warn("inbox not found"),null;d=m.id}if(this.logger.log(`Inbox created - inboxId: ${d}`),!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;this.logger.log("Creating chatwoot bot contact");let l=await this.findContact(i,"123456")||await this.createContact(i,"123456",d,!1,n||"EvolutionAPI",o||"https://evolution-api.com/files/evolution-api-favicon.png");if(!l)return this.logger.warn("contact not found"),null;let g=l.id||l.payload.contact.id;if(this.logger.log(`Contact created - contactId: ${g}`),s){this.logger.log("QR code enabled");let h={contact_id:g.toString(),inbox_id:d.toString()},m=await a.conversations.create({accountId:this.provider.accountId,data:h});if(!m)return this.logger.warn("conversation not found"),null;let f="init";if(r&&(f=`init:${r}`),!await a.messages.create({accountId:this.provider.accountId,conversationId:m.id,data:{content:f,message_type:"outgoing"}}))return this.logger.warn("conversation not found"),null;this.logger.log("Init message sent")}return d}async createContact(i,e,t,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c={};s?c={inbox_id:t,name:r||e,identifier:e,avatar_url:n}:(c={inbox_id:t,name:r||e,identifier:o,avatar_url:n},(o&&o.includes("@")||!o)&&(c.phone_number=`+${e}`));let u=await a.contacts.create({accountId:this.provider.accountId,data:c});if(!u)return this.logger.warn("contact not found"),null;let l=(await this.findContact(i,e))?.id;return await this.addLabelToContact(this.provider.nameInbox,l),u}async updateContact(i,e,t){let s=await this.clientCw(i);if(!s)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;try{return await s.contacts.update({accountId:this.provider.accountId,id:e,data:t})}catch{return null}}async addLabelToContact(i,e){try{if(!this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI)return!1;let r=(await this.pgClient.query("SELECT id, taggings_count FROM tags WHERE name = $1 LIMIT 1",[i]))?.rows[0],n=r?.id,o=r?.taggings_count||0;return n=(await this.pgClient.query(`INSERT INTO tags (name, taggings_count) 
                      VALUES ($1, $2) 
                      ON CONFLICT (name) 
                      DO UPDATE SET taggings_count = tags.taggings_count + 1 
                      RETURNING id`,[i,o+1]))?.rows[0]?.id,(await this.pgClient.query(`SELECT 1 FROM taggings 
                               WHERE tag_id = $1 AND taggable_type = 'Contact' AND taggable_id = $2 AND context = 'labels' LIMIT 1`,[n,e]))?.rowCount>0||await this.pgClient.query(`INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) 
                                VALUES ($1, 'Contact', $2, 'labels', NOW())`,[n,e]),!0}catch{return!1}}async findContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s,r=e.includes("@g.us");r?s=e:s=`+${e}`;let n;return r?n=await t.contacts.search({accountId:this.provider.accountId,q:s}):n=await jn(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/contacts/filter`,body:{payload:this.getFilterPayload(s)}}),!n&&n?.payload?.length===0?(this.logger.warn("contact not found"),null):r?n.payload.find(o=>o.identifier===s):n.payload.length>1?this.findContactInContactList(n.payload,s):n.payload[0]}async mergeBrazilianContacts(i){try{return await jn(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/actions/contact_merge`,body:{base_contact_id:i.find(t=>t.phone_number.length===14)?.id,mergee_contact_id:i.find(t=>t.phone_number.length===13)?.id}})}catch{return this.logger.error("Error merging contacts"),null}}findContactInContactList(i,e){let t=this.getNumbers(e),s=this.getSearchableFields();if(i.length===2&&this.getClientCwConfig().mergeBrazilContacts&&e.startsWith("+55")){let o=this.mergeBrazilianContacts(i);if(o)return o}let r=t.reduce((o,a)=>a.length>o.length?a:o,""),n=i.find(o=>o.phone_number===r);if(n)return n;for(let o of i)for(let a of s)if(o[a]&&t.includes(o[a]))return o;return null}getNumbers(i){let e=[];if(e.push(i),i.startsWith("+55")&&i.length===14){let t=i.slice(0,5)+i.slice(6);e.push(t)}else if(i.startsWith("+55")&&i.length===13){let t=i.slice(0,5)+"9"+i.slice(5);e.push(t)}return e}getSearchableFields(){return["phone_number"]}getFilterPayload(i){let e=[],t=this.getNumbers(i),s=this.getSearchableFields();return s.forEach((r,n)=>{t.forEach((o,a)=>{let c=s.length-1===n&&t.length-1===a?null:"OR";e.push({attribute_key:r,filter_operator:"equal_to",values:[o.replace("+","")],query_operator:c})})}),e}async createConversation(i,e){try{this.logger.verbose("--- Start createConversation ---"),this.logger.verbose(`Instance: ${JSON.stringify(i)}`);let t=await this.clientCw(i);if(!t)return this.logger.warn(`Client not found for instance: ${JSON.stringify(i)}`),null;let s=`${i.instanceName}:createConversation-${e.key.remoteJid}`;if(this.logger.verbose(`Cache key: ${s}`),await this.cache.has(s)){this.logger.verbose(`Cache hit for key: ${s}`);let m=await this.cache.get(s);this.logger.verbose(`Cached conversation ID: ${m}`);let f;try{f=await t.conversations.get({accountId:this.provider.accountId,conversationId:m}),this.logger.verbose(`Conversation exists: ${JSON.stringify(f)}`)}catch(b){this.logger.error(`Error getting conversation: ${b}`),f=!1}return f?m:(this.logger.verbose("Conversation does not exist, re-calling createConversation"),this.cache.delete(s),await this.createConversation(i,e))}let r=e.key.remoteJid.includes("@g.us");this.logger.verbose(`Is group: ${r}`);let n=r?e.key.remoteJid:e.key.remoteJid.split("@")[0];this.logger.verbose(`Chat ID: ${n}`);let o;o=e.key.fromMe?n:e.pushName,this.logger.verbose(`Name contact: ${o}`);let a=await this.getInbox(i);if(!a)return this.logger.warn(`Inbox not found for instance: ${JSON.stringify(i)}`),null;if(r){this.logger.verbose("Processing group conversation");let m=await this.waMonitor.waInstances[i.instanceName].client.groupMetadata(n);this.logger.verbose(`Group metadata: ${JSON.stringify(m)}`),o=`${m.subject} (GROUP)`;let f=await this.waMonitor.waInstances[i.instanceName].profilePicture(e.key.participant.split("@")[0]);this.logger.verbose(`Participant profile picture URL: ${JSON.stringify(f)}`);let b=await this.findContact(i,e.key.participant.split("@")[0]);this.logger.verbose(`Found participant: ${JSON.stringify(b)}`),b?(!b.name||b.name===n)&&await this.updateContact(i,b.id,{name:e.pushName,avatar_url:f.profilePictureUrl||null}):await this.createContact(i,e.key.participant.split("@")[0],a.id,!1,e.pushName,f.profilePictureUrl||null,e.key.participant)}let c=await this.waMonitor.waInstances[i.instanceName].profilePicture(n);this.logger.verbose(`Contact profile picture URL: ${JSON.stringify(c)}`);let u=await this.findContact(i,n);if(this.logger.verbose(`Found contact: ${JSON.stringify(u)}`),u){if(!e.key.fromMe){let m=c?.profilePictureUrl?.split("#")[0].split("?")[0].split("/").pop()||"",f=u?.thumbnail?.split("#")[0].split("?")[0].split("/").pop()||"",b=m!==f,S=!u.name||u.name===n||(`+${n}`.startsWith("+55")?this.getNumbers(`+${n}`).some(w=>u.name===w||u.name===w.substring(3)||u.name===w.substring(1)):!1);this.logger.verbose(`Picture needs update: ${b}`),this.logger.verbose(`Name needs update: ${S}`),(b||S)&&(u=await this.updateContact(i,u.id,{...S&&{name:o},...m===""&&{avatar:null},...b&&{avatar_url:c?.profilePictureUrl}}))}}else{let m=e.key.remoteJid;u=await this.createContact(i,n,a.id,r,o,c.profilePictureUrl||null,m)}if(!u)return this.logger.warn("Contact not created or found"),null;let d=u?.payload?.id||u?.payload?.contact?.id||u?.id;this.logger.verbose(`Contact ID: ${d}`);let l=await t.contacts.listConversations({accountId:this.provider.accountId,id:d});if(this.logger.verbose(`Contact conversations: ${JSON.stringify(l)}`),!l||!l.payload)return this.logger.error("No conversations found or payload is undefined"),null;if(l.payload.length){let m;if(this.provider.reopenConversation?(m=l.payload.find(f=>f.inbox_id==a.id),this.logger.verbose(`Found conversation in reopenConversation mode: ${JSON.stringify(m)}`),this.provider.conversationPending&&m&&await t.conversations.toggleStatus({accountId:this.provider.accountId,conversationId:m.id,data:{status:"pending"}})):(m=l.payload.find(f=>f.status!=="resolved"&&f.inbox_id==a.id),this.logger.verbose(`Found conversation: ${JSON.stringify(m)}`)),m)return this.logger.verbose(`Returning existing conversation ID: ${m.id}`),this.cache.set(s,m.id),m.id}let g={contact_id:d.toString(),inbox_id:a.id.toString()};this.provider.conversationPending&&(g.status="pending");let h=await t.conversations.create({accountId:this.provider.accountId,data:g});return h?(this.logger.verbose(`New conversation created with ID: ${h.id}`),this.cache.set(s,h.id),h.id):(this.logger.warn("Conversation not created or found"),null)}catch(t){this.logger.error(`Error in createConversation: ${t}`)}}async getInbox(i){let e=`${i.instanceName}:getInbox`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await t.inboxes.list({accountId:this.provider.accountId});if(!s)return this.logger.warn("inbox not found"),null;let r=s.payload.find(n=>n.name===this.getClientCwConfig().nameInbox);return r?(this.cache.set(e,r),r):(this.logger.warn("inbox not found"),null)}async createMessage(i,e,t,s,r,n,o,a,c){let u=await this.clientCw(i);if(!u)return this.logger.warn("client not found"),null;let d=await this.getReplyToIds(o,i),l=c?.chatwootMessageId||null,g=await u.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:t,message_type:s,attachments:n,private:r||!1,source_id:a,content_attributes:{...d},source_reply_id:l?l.toString():null}});return g||(this.logger.warn("message not found"),null)}async getOpenConversationByContact(i,e,t){let s=await this.clientCw(i);return s?(await s.contacts.listConversations({accountId:this.provider.accountId,id:t.id})).payload.find(n=>n.inbox_id===e.id&&n.status==="open")||void 0:(this.logger.warn("client not found"),null)}async createBotMessage(i,e,t,s){let r=await this.clientCw(i);if(!r)return this.logger.warn("client not found"),null;let n=await this.findContact(i,"123456");if(!n)return this.logger.warn("contact not found"),null;let o=await this.getInbox(i);if(!o)return this.logger.warn("inbox not found"),null;let a=await this.getOpenConversationByContact(i,o,n);if(!a){this.logger.warn("conversation not found");return}let c=await r.messages.create({accountId:this.provider.accountId,conversationId:a.id,data:{content:e,message_type:t,attachments:s}});return c||(this.logger.warn("message not found"),null)}async sendData(i,e,t,s,r,n,o,a,c){if(a&&this.isImportHistoryAvailable()){let g=await re.getExistingSourceIds([a]);if(g&&g.size>0)return this.logger.warn("Message already saved on chatwoot"),null}let u=new Eo;r&&u.append("content",r),u.append("message_type",s),u.append("attachments[]",e,{filename:t});let d=c?.chatwootMessageId||null;if(o&&n){let g=await this.getReplyToIds(o,n);if(g.in_reply_to||g.in_reply_to_external_id){let h=JSON.stringify({...g});u.append("content_attributes",h)}}d&&u.append("source_reply_id",d.toString()),a&&u.append("source_id",a);let l={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${i}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:g}=await cs.request(l);return g}catch(g){this.logger.error(g)}}async createBotQr(i,e,t,s,r){if(!await this.clientCw(i))return this.logger.warn("client not found"),null;if(!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;let o=await this.findContact(i,"123456");if(!o)return this.logger.warn("contact not found"),null;let a=await this.getInbox(i);if(!a)return this.logger.warn("inbox not found"),null;let c=await this.getOpenConversationByContact(i,a,o);if(!c){this.logger.warn("conversation not found");return}let u=new Eo;e&&u.append("content",e),u.append("message_type",t),s&&r&&u.append("attachments[]",s,{filename:r});let d={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${c.id}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:l}=await cs.request(d);return l}catch(l){this.logger.error(l)}}async sendAttachment(i,e,t,s,r){try{let n=To.parse(decodeURIComponent(t)),o=St.getType(n?.ext)||"",a=n?.name+n?.ext;if(!o){let l=t.split("/");a=decodeURIComponent(l[l.length-1]),o=(await cs.get(t,{responseType:"arraybuffer"})).headers["content-type"]}let c="document";switch(o.split("/")[0]){case"image":c="image";break;case"video":c="video";break;case"audio":c="audio";break;default:c="document";break}if(c==="audio"){let l={number:e,audio:t,delay:1200,quoted:r?.quoted};return q("/message/sendWhatsAppAudio"),await i?.audioWhatsapp(l,!0)}c==="image"&&n&&n?.ext===".gif"&&(c="document");let u={number:e,mediatype:c,fileName:a,media:t,delay:1200,quoted:r?.quoted};return q("/message/sendMedia"),s&&(u.caption=s),await i?.mediaMessage(u,null,!0)}catch(n){this.logger.error(n)}}async onSendMessageError(i,e,t){this.logger.verbose(`onSendMessageError ${JSON.stringify(t)}`);let s=await this.clientCw(i);if(s){if(t&&t?.status===400&&t?.message[0]?.exists===!1){s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:`${J.t("cw.message.numbernotinwhatsapp")}`,message_type:"outgoing",private:!0}});return}s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:J.t("cw.message.notsent",{error:t?`_${t.toString()}_`:""}),message_type:"outgoing",private:!0}})}}async receiveWebhook(i,e){try{if(await new Promise(c=>setTimeout(c,500)),!await this.clientCw(i))return this.logger.warn("client not found"),null;if(this.provider.reopenConversation===!1&&e.event==="conversation_status_changed"&&e.status==="resolved"&&e.meta?.sender?.identifier){let c=`${i.instanceName}:createConversation-${e.meta.sender.identifier}`;this.cache.delete(c)}if(!e?.conversation||e.private||e.event==="message_updated"&&!e.content_attributes?.deleted)return{message:"bot"};let s=e.conversation.meta.sender?.identifier||e.conversation.meta.sender?.phone_number.replace("+",""),r=e.content?e.content.replaceAll(/(?<!\*)\*((?!\s)([^\n*]+?)(?<!\s))\*(?!\*)/g,"_$1_").replaceAll(/\*{2}((?!\s)([^\n*]+?)(?<!\s))\*{2}/g,"*$1*").replaceAll(/~{2}((?!\s)([^\n*]+?)(?<!\s))~{2}/g,"~$1~").replaceAll(/(?<!`)`((?!\s)([^`*]+?)(?<!\s))`(?!`)/g,"```$1```"):e.content,n=e?.conversation?.messages[0]?.sender?.available_name||e?.sender?.name,o=this.waMonitor.waInstances[i.instanceName];if(e.event==="message_updated"&&e.content_attributes?.deleted){let c=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:e.id,instanceId:i.instanceId}});if(c){let u=c.key;await o?.client.sendMessage(u.remoteJid,{delete:u}),await this.prismaRepository.message.deleteMany({where:{instanceId:i.instanceId,chatwootMessageId:e.id}})}return{message:"bot"}}let a=this.configService.get("CHATWOOT").BOT_CONTACT;if(s==="123456"&&e.message_type==="outgoing"){let c=r.replace("/","");if(a&&(c.includes("init")||c.includes("iniciar")))if(o?.connectionStatus?.state!=="open"){let d=c.split(":")[1];await o.connectToWhatsapp(d)}else await this.createBotMessage(i,J.t("cw.inbox.alreadyConnected",{inboxName:e.inbox.name}),"incoming");if(c==="clearcache"&&(o.clearCacheChatwoot(),await this.createBotMessage(i,J.t("cw.inbox.clearCache",{inboxName:e.inbox.name}),"incoming")),c==="status"){let u=o?.connectionStatus?.state;u||await this.createBotMessage(i,J.t("cw.inbox.notFound",{inboxName:e.inbox.name}),"incoming"),u&&await this.createBotMessage(i,J.t("cw.inbox.status",{inboxName:e.inbox.name,state:u}),"incoming")}if(a&&(c==="disconnect"||c==="desconectar")){let u=J.t("cw.inbox.disconnect",{inboxName:e.inbox.name});await this.createBotMessage(i,u,"incoming"),await o?.client?.logout("Log out instance: "+i.instanceName),await o?.client?.ws?.close()}}if(e.message_type==="outgoing"&&e?.conversation?.messages?.length&&s!=="123456"){if(e?.conversation?.messages[0]?.source_id?.substring(0,5)==="WAID:")return{message:"bot"};if(!o&&e.conversation?.id)return this.onSendMessageError(i,e.conversation?.id,"Instance not found"),{message:"bot"};let c;if(n==null)c=r;else{let d=this.provider.signDelimiter?this.provider.signDelimiter.replaceAll("\\n",`
`):`
`,l=this.provider.signMsg?[`*${n}:*`]:[];l.push(r),c=l.join(d)}for(let d of e.conversation.messages)if(d.attachments&&d.attachments.length>0)for(let l of d.attachments){r||(c=null);let g={quoted:await this.getQuotedMessage(e,i)},h=await this.sendAttachment(o,s,l.data_url,c,g);!h&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id),await this.updateChatwootMessageId({...h,owner:i.instanceName},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}else{let l={number:s,text:c,delay:1200,quoted:await this.getQuotedMessage(e,i)};q("/message/sendText");let g;try{if(g=await o?.textMessage(l,!0),!g)throw new Error("Message not sent");Mo.isLong(g?.messageTimestamp)&&(g.messageTimestamp=g.messageTimestamp?.toNumber()),await this.updateChatwootMessageId({...g,instanceId:i.instanceId},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}catch(h){throw!g&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id,h),h}}if(this.configService.get("CHATWOOT").MESSAGE_READ){let d=await this.prismaRepository.message.findFirst({where:{key:{path:["fromMe"],equals:!1},instanceId:i.instanceId}});if(d&&!d.chatwootIsRead){let l=d.key;o?.markMessageAsRead({readMessages:[{id:l.id,fromMe:l.fromMe,remoteJid:l.remoteJid}]});let g={chatwootMessageId:d.chatwootMessageId,chatwootConversationId:d.chatwootConversationId,chatwootInboxId:d.chatwootInboxId,chatwootContactInboxSourceId:d.chatwootContactInboxSourceId,chatwootIsRead:!0};await this.prismaRepository.message.updateMany({where:{instanceId:i.instanceId,key:{path:["id"],equals:l.id}},data:g})}}}if(e.message_type==="template"&&e.event==="message_created"){let c={number:s,text:e.content.replace(/\\\r\n|\\\n|\n/g,`
`),delay:1200};q("/message/sendText"),await o?.textMessage(c)}return{message:"bot"}}catch(t){return this.logger.error(t),{message:"bot"}}}async updateChatwootMessageId(i,e,t){let s=i.key;!e.messageId||!s?.id||(await this.prismaRepository.message.updateMany({where:{key:{path:["id"],equals:s.id},instanceId:t.instanceId},data:{chatwootMessageId:e.messageId,chatwootConversationId:e.conversationId,chatwootInboxId:e.inboxId,chatwootContactInboxSourceId:e.contactInboxSourceId,chatwootIsRead:e.isRead}}),this.isImportHistoryAvailable()&&re.updateMessageSourceID(e.messageId,s.id))}async getMessageByKeyId(i,e){return await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:e},instanceId:i.instanceId}})||null}async getReplyToIds(i,e){let t=null,s=null;if(i&&(s=i.message?.extendedTextMessage?.contextInfo?.stanzaId??i.contextInfo?.stanzaId,s)){let r=await this.getMessageByKeyId(e,s);r?.chatwootMessageId&&(t=r.chatwootMessageId)}return{in_reply_to:t,in_reply_to_external_id:s}}async getQuotedMessage(i,e){if(i?.content_attributes?.in_reply_to){let t=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:i?.content_attributes?.in_reply_to,instanceId:e.instanceId}}),s=t?.key;if(t&&s?.id)return{key:t.key,message:t.message}}return null}isMediaMessage(i){let e=["imageMessage","documentMessage","documentWithCaptionMessage","audioMessage","videoMessage","stickerMessage","viewOnceMessageV2"];return Object.keys(i).some(r=>e.includes(r))}getAdsMessage(i){return{title:i.extendedTextMessage?.contextInfo?.externalAdReply?.title||i.contextInfo?.externalAdReply?.title,body:i.extendedTextMessage?.contextInfo?.externalAdReply?.body||i.contextInfo?.externalAdReply?.body,thumbnailUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.thumbnailUrl||i.contextInfo?.externalAdReply?.thumbnailUrl,sourceUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.sourceUrl||i.contextInfo?.externalAdReply?.sourceUrl}}getReactionMessage(i){return i?.reactionMessage}getTypeMessage(i){return{conversation:i.conversation,imageMessage:i.imageMessage?.caption,videoMessage:i.videoMessage?.caption,extendedTextMessage:i.extendedTextMessage?.text,messageContextInfo:i.messageContextInfo?.stanzaId,stickerMessage:void 0,documentMessage:i.documentMessage?.caption,documentWithCaptionMessage:i.documentWithCaptionMessage?.message?.documentMessage?.caption,audioMessage:i.audioMessage?.caption,contactMessage:i.contactMessage?.vcard,contactsArrayMessage:i.contactsArrayMessage,locationMessage:i.locationMessage,liveLocationMessage:i.liveLocationMessage,listMessage:i.listMessage,listResponseMessage:i.listResponseMessage,viewOnceMessageV2:i?.message?.viewOnceMessageV2?.message?.imageMessage?.url||i?.message?.viewOnceMessageV2?.message?.videoMessage?.url||i?.message?.viewOnceMessageV2?.message?.audioMessage?.url}}getMessageContent(i){let e=Object.keys(i).find(s=>i[s]!==void 0),t=e?i[e]:void 0;if(t&&typeof t=="string"&&t.includes("externalAdReplyBody|")&&(t=t.split("externalAdReplyBody|").filter(Boolean).join("")),e==="locationMessage"||e==="liveLocationMessage"){let s=t.degreesLatitude,r=t.degreesLongitude,n=t?.name,o=t?.address;return`*${J.t("cw.locationMessage.location")}:*

_${J.t("cw.locationMessage.latitude")}:_ ${s} 
_${J.t("cw.locationMessage.longitude")}:_ ${r} 
`+(n?`_${J.t("cw.locationMessage.locationName")}:_ ${n}
`:"")+(o?`_${J.t("cw.locationMessage.locationAddress")}:_ ${o} 
`:"")+`_${J.t("cw.locationMessage.locationUrl")}:_ https://www.google.com/maps/search/?api=1&query=${s},${r}`}if(e==="contactMessage"){let s=t.split(`
`),r={};s.forEach(a=>{let[c,u]=a.split(":");c&&u&&(r[c]=u)});let n=`*${J.t("cw.contactMessage.contact")}:*

_${J.t("cw.contactMessage.name")}:_ ${r.FN}`,o=1;return Object.keys(r).forEach(a=>{if(a.startsWith("item")&&a.includes("TEL")){let c=r[a];n+=`
_${J.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}else if(a.includes("TEL")){let c=r[a];n+=`
_${J.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}}),n}if(e==="contactsArrayMessage")return t.contacts.map(n=>{let o=n.vcard.split(`
`),a={};o.forEach(d=>{let[l,g]=d.split(":");l&&g&&(a[l]=g)});let c=`*${J.t("cw.contactMessage.contact")}:*

_${J.t("cw.contactMessage.name")}:_ ${n.displayName}`,u=1;return Object.keys(a).forEach(d=>{if(d.startsWith("item")&&d.includes("TEL")){let l=a[d];c+=`
_${J.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}else if(d.includes("TEL")){let l=a[d];c+=`
_${J.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}}),c}).join(`

`);if(e==="listMessage"){let s=t?.title||"Unknown",r=t?.description||"Unknown",n=t?.footerText||"Unknown",o=`*List Menu:*

_Title_: `+s+`
_Description_: `+r+`
_Footer_: `+n;return t.sections&&t.sections.length>0?t.sections.forEach((a,c)=>{o+=`

*Section `+(c+1)+":* "+a.title||`Unknown
`,a.rows&&a.rows.length>0?a.rows.forEach((u,d)=>{o+=`
*Line `+(d+1)+`:*
`,o+="_\u25AA\uFE0F Title:_ "+(u.title||"Unknown")+`
`,o+="_\u25AA\uFE0F Description:_ "+(u.description||"Unknown")+`
`,o+="_\u25AA\uFE0F ID:_ "+(u.rowId||"Unknown")+`
`}):o+=`
No lines found in this section.
`}):o+=`
No sections found.
`,o}if(e==="listResponseMessage"){let s=t?.title||"Unknown",r=t?.description||"Unknown",n=t?.singleSelectReply?.selectedRowId||"Unknown";return`*List Response:*

_Title_: `+s+`
_Description_: `+r+`
_ID_: `+n}return t}getConversationMessage(i){let e=this.getTypeMessage(i);return this.getMessageContent(e)}async eventWhatsapp(i,e,t){try{let s=this.waMonitor.waInstances[e.instanceName];if(!s)return this.logger.warn("wa instance not found"),null;let r=await this.clientCw(e);if(!r)return this.logger.warn("client not found"),null;if(this.provider?.ignoreJids&&this.provider?.ignoreJids.length>0){let n=this.provider?.ignoreJids,o=!1,a=!1;if(n.includes("@g.us")&&(o=!0),n.includes("@s.whatsapp.net")&&(a=!0),o&&t?.key?.remoteJid.endsWith("@g.us")){this.logger.warn("Ignoring message from group: "+t?.key?.remoteJid);return}if(a&&t?.key?.remoteJid.endsWith("@s.whatsapp.net")){this.logger.warn("Ignoring message from contact: "+t?.key?.remoteJid);return}if(n.includes(t?.key?.remoteJid)){this.logger.warn("Ignoring message from jid: "+t?.key?.remoteJid);return}}if(i==="messages.upsert"||i==="send.message"){if(t.key.remoteJid==="status@broadcast")return;t.message?.ephemeralMessage?.message&&(t.message={...t.message?.ephemeralMessage?.message});let n=await this.getConversationMessage(t.message),o=n&&n.replaceAll(/\*((?!\s)([^\n*]+?)(?<!\s))\*/g,"**$1**").replaceAll(/_((?!\s)([^\n_]+?)(?<!\s))_/g,"*$1*").replaceAll(/~((?!\s)([^\n~]+?)(?<!\s))~/g,"~~$1~~");if(o&&o.includes("Por favor, classifique esta conversa, http"))return;let a=t.contextInfo?.stanzaId||t.message?.contextInfo?.stanzaId,c=null;a&&(c=await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:a},chatwootMessageId:{not:null}}}));let u=this.isMediaMessage(t.message),d=this.getAdsMessage(t),l=this.getReactionMessage(t.message);if(!o&&!u&&!l){this.logger.warn("no body message found");return}let g=await this.createConversation(e,t);if(!g){this.logger.warn("conversation not found");return}let h=t.key.fromMe?"outgoing":"incoming";if(u){let f=await s?.getBase64FromMediaMessage({message:{...t}}),b,S=t?.message[t?.messageType],w=S?.fileName||S?.filename||S?.message?.documentMessage?.fileName;if(w){let v=To.parse(w);v.name&&v.ext&&(b=`${v.name}-${Math.floor(Math.random()*90+10)}${v.ext}`)}b||(b=`${Math.random().toString(36).substring(7)}.${St.getExtension(f.mimetype)||""}`);let M=Buffer.from(f.base64,"base64"),I=new Kn;if(I._read=()=>{},I.push(M),I.push(null),t.key.remoteJid.includes("@g.us")){let v=t.pushName,x;t.key.fromMe?x=`${o}`:x=`**${v}:**

${o}`;let N=await this.sendData(g,I,b,h,x,e,t,"WAID:"+t.key.id,c);if(!N){this.logger.warn("message not sent");return}return N}else{let v=await this.sendData(g,I,b,h,o,e,t,"WAID:"+t.key.id,c);if(!v){this.logger.warn("message not sent");return}return v}}if(l){if(l.text&&!await this.createMessage(e,g,l.text,h,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:l.key.id}}}},"WAID:"+t.key.id,c)){this.logger.warn("message not sent");return}return}if(d&&d.title||d.body||d.thumbnailUrl){let f=await cs.get(d.thumbnailUrl,{responseType:"arraybuffer"}),b=St.getExtension(f.headers["content-type"]),S=b&&St.getType(b);if(!S){this.logger.warn("mimetype of Ads message not found");return}let M=`${Math.random().toString(36).substring(7)}.${St.getExtension(S)}`,I=Buffer.from(f.data,"binary"),v=await Io.read(I);await v.cover(320,180);let x=await v.getBufferAsync(Io.MIME_PNG),N=new Kn;N._read=()=>{},N.push(x),N.push(null);let O=(K,H)=>K?K.length>H?K.substring(0,H)+"...":K:"",F=O(d.title,40),G=O(d?.body,75),j=await this.sendData(g,N,M,h,`${o}


**${F}**
${G}
${d.sourceUrl}`,e,t,"WAID:"+t.key.id);if(!j){this.logger.warn("message not sent");return}return j}if(t.key.remoteJid.includes("@g.us")){let f=t.pushName,b;t.key.fromMe?b=`${o}`:b=`**${f}**

${o}`;let S=await this.createMessage(e,g,b,h,!1,[],t,"WAID:"+t.key.id,c);if(!S){this.logger.warn("message not sent");return}return S}else{let f=await this.createMessage(e,g,o,h,!1,[],t,"WAID:"+t.key.id,c);if(!f){this.logger.warn("message not sent");return}return f}}if(i==="messages.delete"&&this.configService.get("CHATWOOT").MESSAGE_DELETE===!0){if(!t?.key?.id){this.logger.warn("message id not found");return}let o=await this.getMessageByKeyId(e,t.key.id);if(o?.chatwootMessageId&&o?.chatwootConversationId)return await this.prismaRepository.message.deleteMany({where:{key:{path:["id"],equals:t.key.id},instanceId:e.instanceId}}),await r.messages.delete({accountId:this.provider.accountId,conversationId:o.chatwootConversationId,messageId:o.chatwootMessageId})}if(i==="messages.edit"){let n=`${t?.editedMessage?.conversation||t?.editedMessage?.extendedTextMessage?.text}

_\`${J.t("cw.message.edited")}.\`_`,o=await this.getMessageByKeyId(e,t?.key?.id),a=o.key,c=a?.fromMe?"outgoing":"incoming";if(o&&o.chatwootConversationId&&!await this.createMessage(e,o.chatwootConversationId,n,c,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:a.id}}}},"WAID:"+t.key.id,null)){this.logger.warn("edited message not sent");return}return}if(i==="messages.read"){if(!t?.key?.id||!t?.key?.remoteJid){this.logger.warn("message id not found");return}let n=await this.getMessageByKeyId(e,t.key.id),o=n?.chatwootConversationId,a=n?.chatwootContactInboxSourceId;if(o){let c=a,u=await this.getInbox(e);if(!c&&u&&(c=(await r.conversations.get({accountId:this.provider.accountId,conversationId:o})).last_non_activity_message?.conversation?.contact_inbox?.source_id),c&&u?.inbox_identifier){let d=`/public/api/v1/inboxes/${u.inbox_identifier}/contacts/${c}/conversations/${o}/update_last_seen`;jn(this.getClientCwConfig(),{method:"POST",url:d})}}return}if(i==="status.instance"){let n=t,o=await this.getInbox(e);if(!o){this.logger.warn("inbox not found");return}let a=J.t("cw.inbox.status",{inboxName:o.name,state:n.status});await this.createBotMessage(e,a,"incoming")}if(i==="connection.update"&&t.status==="open"&&this.waMonitor.waInstances[e.instanceName].qrCode.count>0){let n=J.t("cw.inbox.connected");await this.createBotMessage(e,n,"incoming"),this.waMonitor.waInstances[e.instanceName].qrCode.count=0,re.clearAll(e)}if(i==="qrcode.updated")if(t.statusCode===500){let n=`\u{1F6A8} ${J.t("qrlimitreached")}`;return await this.createBotMessage(e,n,"incoming")}else{let n=Buffer.from(t?.qrcode.base64.replace("data:image/png;base64,",""),"base64"),o=new Kn;o._read=()=>{},o.push(n),o.push(null),await this.createBotQr(e,J.t("qrgeneratedsuccesfully"),"incoming",o,`${e.instanceName}.png`);let a=`\u26A1\uFE0F${J.t("qrgeneratedsuccesfully")}

${J.t("scanqr")}`;t?.qrcode?.pairingCode&&(a=a+`

*Pairing Code:* ${t.qrcode.pairingCode.substring(0,4)}-${t.qrcode.pairingCode.substring(4,8)}`),await this.createBotMessage(e,a,"incoming")}}catch(s){this.logger.error(s)}}getNumberFromRemoteJid(i){return i.replace(/:\d+/,"").split("@")[0]}startImportHistoryMessages(i){this.isImportHistoryAvailable()&&this.createBotMessage(i,J.t("cw.import.startImport"),"incoming")}isImportHistoryAvailable(){let i=this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return i&&i!=="postgres://user:password@hostname:port/dbname"}addHistoryMessages(i,e){this.isImportHistoryAvailable()&&re.addHistoryMessages(i,e)}addHistoryContacts(i,e){if(this.isImportHistoryAvailable())return re.addHistoryContacts(i,e)}async importHistoryMessages(i){if(!this.isImportHistoryAvailable())return;this.createBotMessage(i,J.t("cw.import.importingMessages"),"incoming");let e=await re.importHistoryMessages(i,this,await this.getInbox(i),this.provider);this.updateContactAvatarInRecentConversations(i);let t=Number.isInteger(e)?J.t("cw.import.messagesImported",{totalMessagesImported:e}):J.t("cw.import.messagesException");return this.createBotMessage(i,t,"incoming"),e}async updateContactAvatarInRecentConversations(i,e=100){try{if(!this.isImportHistoryAvailable())return;let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await this.getInbox(i);if(!s)return this.logger.warn("inbox not found"),null;let r=await re.getContactsOrderByRecentConversations(s,this.provider,e),n=r.map(a=>a.identifier).filter(a=>a!==null),o=(await this.prismaRepository.contact.findMany({where:{instanceId:i.instanceId,id:{in:n},profilePicUrl:{not:null}}})).reduce((a,c)=>a.set(c.id,c),new Map);r.forEach(async a=>{o.has(a.identifier)&&t.contacts.update({accountId:this.provider.accountId,id:a.id,data:{avatar_url:o.get(a.identifier).profilePictureUrl||null}})})}catch(t){this.logger.error(`Error on update avatar in recent conversations: ${t.toString()}`)}}async syncLostMessages(i,e,t){try{if(!this.isImportHistoryAvailable()||!this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE)return;let s=await this.getInbox(i),r=`select * from messages m
      where account_id = ${e.accountId}
      and inbox_id = ${s.id}
      and created_at >= now() - interval '6h'
      order by created_at desc`,o=((await this.pgClient.query(r))?.rows).filter(l=>!!l.source_id).map(l=>l.source_id.replace("WAID:","")),c=(await this.prismaRepository.message.findMany({where:{Instance:{name:i.instanceName},messageTimestamp:{gte:Wl().subtract(6,"hours").unix()},AND:o.map(l=>({key:{path:["id"],not:l}}))}})).filter(l=>!re.isIgnorePhoneNumber(l.key?.remoteJid)),u=[];for(let l of c)!l.message||!l.key||!l.messageTimestamp||(Mo.isLong(l?.messageTimestamp)&&(l.messageTimestamp=l.messageTimestamp?.toNumber()),u.push(t(l)));this.addHistoryMessages(i,u.filter(l=>!re.isIgnorePhoneNumber(l.key?.remoteJid))),await re.importHistoryMessages(i,this,s,this.provider),this.waMonitor.waInstances[i.instanceName].clearCacheChatwoot()}catch{return}}}});import ls from"axios";import{Readable as $l}from"stream";var lt,Yn=E(()=>{pe();_();qe();lt=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new C("DifyService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"dify"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async sendMessageToBot(i,e,t,s,r,n,o){try{let a=s.apiUrl;if(s.botType==="chatBot"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"blocking",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.query=g[2]||o}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ls.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===r?l:e.sessionId}})}if(s.botType==="textGenerator"){a+="/completion-messages";let c={inputs:{query:o,pushName:n,remoteJid:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.inputs.query=g[2]||o}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ls.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===r?l:e.sessionId}})}if(s.botType==="agent"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"streaming",conversation_id:e.sessionId===r?void 0:e.sessionId,user:r};if(this.isImageMessage(o)){let m=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:m[1].split("?")[0]}],c.query=m[2]||o}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ls.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`},responseType:"stream"}),d,l="",g=u.data,h=new $l().wrap(g);h.on("data",m=>{let f=m.toString().replace(/data:\s*/g,"");if(!(f.trim()===""||!f.startsWith("{")))try{let b=f.split(`
`).filter(S=>S.trim()!=="");for(let S of b)if(S.trim().startsWith("{")){let w=JSON.parse(S);w?.event==="agent_message"&&(console.log("event:",w),d=d??w?.conversation_id,l+=w?.answer)}}catch(b){console.error("Error parsing stream data:",b)}}),h.on("end",async()=>{i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let m=l;await this.sendMessageWhatsApp(i,r,m,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:d}})}),h.on("error",m=>{console.error("Error reading stream:",m)});return}if(s.botType==="workflow"){a+="/workflows/run";let c={inputs:{query:o,remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",user:r};if(this.isImageMessage(o)){let l=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:l[1].split("?")[0]}],c.inputs.query=l[2]||o}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await ls.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.data.outputs.text;await this.sendMessageWhatsApp(i,r,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}});return}}catch(a){this.logger.error(a.response?.data||a);return}}async sendMessageWhatsApp(i,e,t,s){let r=/(!?)\[(.*?)\]\((.*?)\)/g,n="",o=0,a,c=h=>{let m=h.split(".").pop()?.toLowerCase(),f=["jpg","jpeg","png","gif","bmp","webp"],b=["mp3","wav","aac","ogg"],S=["mp4","avi","mkv","mov"],w=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return f.includes(m||"")?"image":b.includes(m||"")?"audio":S.includes(m||"")?"video":w.includes(m||"")?"document":null};for(;(a=r.exec(t))!==null;){let[h,m,f,b]=a,S=c(b),w=t.slice(o,a.index);if(w&&(n+=w),S){let M=s.splitMessages??!1,I=s.timePerChar??0,v=1e3,x=2e4;if(n.trim())if(M){let N=n.trim().split(`

`);for(let O=0;O<N.length;O++){let F=N[O],G=Math.min(Math.max(F.length*I,v),x);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(j=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:F},!1),j()},G)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1),n="";S==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:b,caption:f}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:S,media:b,caption:f},null,!1)}else n+=`[${f}](${b})`;o=r.lastIndex}if(o<t.length){let h=t.slice(o);h.trim()&&(n+=h)}let u=s.splitMessages??!1,d=s.timePerChar??0,l=1e3,g=2e4;if(n.trim())if(u){let h=n.trim().split(`

`);for(let m=0;m<h.length;m++){let f=h[m],b=Math.min(Math.max(f.length*d,l),g);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(S=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:f},!1),S()},b)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1);q("/message/sendText")}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session),await this.sendMessageToBot(i,r,s,t,e,o,n)}async processDify(i,e,t,s,r,n,o){if(!(s&&s.status!=="opened")){if(s&&r.expire&&r.expire>0){let a=Date.now(),c=new Date(s.updatedAt).getTime(),u=a-c;if(Math.floor(u/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),q("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}await this.sendMessageToBot(i,s,r,t,e,o,n)}}}});import Qn from"axios";import{downloadMediaMessage as ql}from"baileys";import Gl from"form-data";import us from"openai";import Hl from"pino";var ut,zn=E(()=>{pe();_();qe();ut=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new C("OpenaiService")}async sendMessageToBot(i,e,t,s){let n=e.systemMessages.map(m=>({role:"system",content:m})),a=e.assistantMessages.map(m=>({role:"assistant",content:m})),u=e.userMessages.map(m=>({role:"user",content:m})),d={role:"user",content:[{type:"text",text:s}]};if(this.isImageMessage(s)){let m=s.split("|"),f=m[1].split("?")[0];d.content=[{type:"text",text:m[2]||s},{type:"image_url",image_url:{url:f}}]}let l=[...n,...a,...u,d];i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let g=await this.client.chat.completions.create({model:e.model,messages:l,max_tokens:e.maxTokens});return i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),g.choices[0].message.content}async sendMessageToAssistant(i,e,t,s,r,n,o){let a={role:r?"assistant":"user",content:[{type:"text",text:n}]};if(this.isImageMessage(n)){let l=n.split("|"),g=l[1].split("?")[0];a.content=[{type:"text",text:l[2]||n},{type:"image_url",image_url:{url:g}}]}if(await this.client.beta.threads.messages.create(o,a),r){q("/message/sendText");return}let c=await this.client.beta.threads.runs.create(o,{assistant_id:e.assistantId});i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let u=await this.getAIResponse(o,c.id,e.functionUrl,t,s);return i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),u?.data[0].content[0].text.value}async sendMessageWhatsapp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":M.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),M=r.slice(a,c.index);if(M&&(o+=M),w){let I=s.splitMessages??!1,v=s.timePerChar??0,x=1e3,N=2e4;if(o.trim())if(I){let O=o.trim().split(`

`);for(let F=0;F<O.length;F++){let G=O[F],j=Math.min(Math.max(G.length*v,x),N);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(K=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:G},!1),K()},j)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";q("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}})}async createAssistantNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!t)throw new Error("Openai Creds not found");try{this.client=new us({apiKey:t.apiKey});let s=(await this.client.beta.threads.create({})).id,r=null;return s&&(r=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:s,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}})),{session:r}}catch(s){this.logger.error(s);return}}async initAssistantNewSession(i,e,t,s,r,n,o,a){let c=await this.createAssistantNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:r.openaiCredsId,botId:r.id});c.session&&(o=c.session);let u=await this.sendMessageToAssistant(i,r,e,t,s,a,o.sessionId);await this.sendMessageWhatsapp(i,o,e,n,u)}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async getAIResponse(i,e,t,s,r){let n=await this.client.beta.threads.runs.retrieve(i,e),o;switch(n.status){case"requires_action":if(o=n?.required_action?.submit_tool_outputs?.tool_calls,o)for(let a of o){let c=a.id,u=a?.function?.name,d=this.isJSON(a?.function?.arguments)?JSON.parse(a?.function?.arguments):a?.function?.arguments,l=null;try{let{data:g}=await Qn.post(t,{name:u,arguments:{...d,remoteJid:s,pushName:r}});l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}catch(g){l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}await this.client.beta.threads.runs.submitToolOutputs(i,e,{tool_outputs:[{tool_call_id:c,output:l}]})}return this.getAIResponse(i,e,t,s,r);case"queued":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,r);case"in_progress":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,r);case"completed":return await this.client.beta.threads.messages.list(i,{run_id:e,limit:1})}}isImageMessage(i){return i.includes("imageMessage")}async processOpenaiAssistant(i,e,t,s,r,n,o,a){if(n&&n.status==="closed")return;if(n&&o.expire&&o.expire>0){let l=Date.now(),g=new Date(n.updatedAt).getTime(),h=l-g;if(Math.floor(h/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}}),await this.initAssistantNewSession(i,e,t,s,r,o,n,a);return}}if(!n){await this.initAssistantNewSession(i,e,t,s,r,o,n,a);return}if(n.status!=="paused"&&await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"opened",awaitUser:!1}}),!a){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),q("/message/sendText"));return}if(o.keywordFinish&&a.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let c=await this.prismaRepository.openaiCreds.findFirst({where:{id:r.openaiCredsId}});if(!c)throw new Error("Openai Creds not found");this.client=new us({apiKey:c.apiKey});let u=n.sessionId,d=await this.sendMessageToAssistant(i,r,e,t,s,a,u);await this.sendMessageWhatsapp(i,n,e,o,d)}async createChatCompletionNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString(),s=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!s)throw new Error("Openai Creds not found");try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:t,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}}),creds:s}}catch(r){this.logger.error(r);return}}async initChatCompletionNewSession(i,e,t,s,r,n,o){let a=await this.createChatCompletionNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:s.openaiCredsId,botId:s.id});n=a.session;let c=a.creds;this.client=new us({apiKey:c.apiKey});let u=await this.sendMessageToBot(i,s,e,o);await this.sendMessageWhatsapp(i,n,e,r,u)}async processOpenaiChatCompletion(i,e,t,s,r,n,o){if(r&&r.status!=="opened")return;if(r&&n.expire&&n.expire>0){let u=Date.now(),d=new Date(r.updatedAt).getTime(),l=u-d;if(Math.floor(l/1e3/60)>n.expire){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}}),await this.initChatCompletionNewSession(i,e,t,s,n,r,o);return}}if(!r){await this.initChatCompletionNewSession(i,e,t,s,n,r,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"opened",awaitUser:!1}}),!o){n.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:n.delayMessage||1e3,text:n.unknownMessage},!1),q("/message/sendText"));return}if(n.keywordFinish&&o.toLowerCase()===n.keywordFinish.toLowerCase()){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}});return}let a=await this.prismaRepository.openaiCreds.findFirst({where:{id:s.openaiCredsId}});if(!a)throw new Error("Openai Creds not found");this.client=new us({apiKey:a.apiKey});let c=await this.sendMessageToBot(i,s,e,o);await this.sendMessageWhatsapp(i,r,e,n,c)}async speechToText(i,e,t){let s;e?.message?.mediaUrl?s=await Qn.get(e.message.mediaUrl,{responseType:"arraybuffer"}).then(a=>Buffer.from(a.data,"binary")):s=await ql({key:e.key,message:e?.message},"buffer",{},{logger:Hl({level:"error"}),reuploadRequest:t});let r=this.configService.get("LANGUAGE").includes("pt")?"pt":this.configService.get("LANGUAGE"),n=new Gl;return n.append("file",s,"audio.ogg"),n.append("model","whisper-1"),n.append("language",r),(await Qn.post("https://api.openai.com/v1/audio/transcriptions",n,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${i.apiKey}`}}))?.data?.text}}});var Vl,jl,Ee,Ze=E(()=>{z();Vl=p=>{let i;T.get("S3").ENABLE?i=p.message.mediaUrl:i=p.key.id;let e={conversation:p?.message?.conversation,extendedTextMessage:p?.message?.extendedTextMessage?.text,contactMessage:p?.message?.contactMessage?.displayName,locationMessage:p?.message?.locationMessage?.degreesLatitude,viewOnceMessageV2:p?.message?.viewOnceMessageV2?.message?.imageMessage?.url||p?.message?.viewOnceMessageV2?.message?.videoMessage?.url||p?.message?.viewOnceMessageV2?.message?.audioMessage?.url,listResponseMessage:p?.message?.listResponseMessage?.title,responseRowId:p?.message?.listResponseMessage?.singleSelectReply?.selectedRowId,templateButtonReplyMessage:p?.message?.templateButtonReplyMessage?.selectedId,audioMessage:p?.message?.speechToText?p?.message?.speechToText:p?.message?.audioMessage?`audioMessage|${i}`:void 0,imageMessage:p?.message?.imageMessage?`imageMessage|${i}${p?.message?.imageMessage?.caption?`|${p?.message?.imageMessage?.caption}`:""}`:void 0,videoMessage:p?.message?.videoMessage?`videoMessage|${i}${p?.message?.videoMessage?.caption?`|${p?.message?.videoMessage?.caption}`:""}`:void 0,documentMessage:p?.message?.documentMessage?`documentMessage|${i}${p?.message?.documentMessage?.caption?`|${p?.message?.documentMessage?.caption}`:""}`:void 0,documentWithCaptionMessage:p?.message?.documentWithCaptionMessage?.message?.documentMessage?`documentWithCaptionMessage|${i}${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption?`|${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption}`:""}`:void 0,externalAdReplyBody:p?.contextInfo?.externalAdReply?.body?`externalAdReplyBody|${p.contextInfo.externalAdReply.body}`:void 0},t=Object.keys(e).find(s=>e[s]!==void 0)||"unknown";return{...e,messageType:t}},jl=p=>{let i=Object.keys(p).find(t=>t!=="externalAdReplyBody"&&p[t]!==void 0),e=i?p[i]:void 0;return p.externalAdReplyBody&&(e=e?`${e}
${p.externalAdReplyBody}`:p.externalAdReplyBody),e},Ee=p=>{let i=Vl(p);return jl(i)}});import ds from"axios";var dt,Xn=E(()=>{_();Ze();qe();dt=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new C("TypebotService")}async createNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString();try{let s=this.configService.get("TYPEBOT").API_VERSION,r,n;s==="latest"?(r=`${e.url}/api/v1/typebots/${e.typebot}/startChat`,n={prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}):(r=`${e.url}/api/v1/sendMessage`,n={startParams:{publicId:e.typebot,prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}});let o=await ds.post(r,n),a=null;return o?.data?.sessionId&&(a=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName||"",sessionId:`${t}-${o.data.sessionId}`,status:"opened",parameters:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number},awaitUser:!1,botId:e.botId,instanceId:i.id,type:"typebot"}})),{...o.data,session:a}}catch(s){this.logger.error(s);return}}async sendWAMessage(i,e,t,s,r,n,o){u(this.waMonitor.waInstances[i.name],e,t,r,n,o,c,this.prismaRepository).catch(d=>{console.error("Erro ao processar mensagens:",d)});function a(d,l){if(!d)return null;for(let g of d)if(g.lastBubbleBlockId===l)return g.wait?.secondsToWaitFor;return null}function c(d){let l="";if(d.text&&(l+=d.text),d.children&&d.type!=="a")for(let m of d.children)l+=c(m);d.type==="p"&&d.type!=="inline-variable"&&(l=l.trim()+`
`),d.type==="inline-variable"&&(l=l.trim()),d.type==="ol"&&(l=`
`+l.split(`
`).map((m,f)=>m?`${f+1}. ${m}`:"").join(`
`)),d.type==="li"&&(l=l.split(`
`).map(m=>m?`  ${m}`:"").join(`
`));let g="";d.bold&&(g+="*"),d.italic&&(g+="_"),d.underline&&(g+="~");let h=`${g}${l}${g.split("").reverse().join("")}`;return d.url&&(h=d.children[0]?.text?`[${h}]
(${d.url})`:`${d.url}`),h}async function u(d,l,g,h,m,f,b,S){for(let w of h){if(w.type==="text"){let I="";for(let v of w.content.richText){for(let x of v.children)I+=b(x);I+=`
`}if(I=I.replace(/\*\*/g,"").replace(/__/,"").replace(/~~/,"").replace(/\n$/,""),I=I.replace(/\n$/,""),I.includes("[list]")){let v={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},x=I.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=I.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),O=I.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),F=I.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);x&&(v.title=x[1].trim()),N&&(v.description=N[1].trim()),O&&(v.buttonText=O[1].trim()),F&&(v.footerText=F[1].trim());let G=I.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(G){let j=G.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);j&&j.forEach(K=>{let H=K.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),W=K.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),ee={title:H,rows:W?.map(Bn=>({title:Bn.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:Bn.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:Bn.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};v.sections.push(ee)})}await d.listMessage(v)}else if(I.includes("[buttons]")){let v={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},x=I.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),N=I.match(/\[title\]([\s\S]*?)(?=\[description\])/),O=I.match(/\[description\]([\s\S]*?)(?=\[footer\])/),F=I.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);N&&(v.title=N[1].trim()),x&&(v.thumbnailUrl=x[1].trim()),O&&(v.description=O[1].trim()),F&&(v.footer=F[1].trim());let G={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[j,K]of Object.entries(G)){let H;for(;(H=K.exec(I))!==null;){let W=H[1].trim(),ee={type:j};switch(j){case"pix":ee.currency=W.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.name=W.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.keyType=W.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.key=W.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":ee.displayText=W.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.id=W.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":ee.displayText=W.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.copyCode=W.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":ee.displayText=W.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.phoneNumber=W.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":ee.displayText=W.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ee.url=W.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(ee).length>1&&v.buttons.push(ee)}}await d.buttonMessage(v)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:I},!1);q("/message/sendText")}w.type==="image"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"image",media:w.content.url},null,!1),q("/message/sendMedia")),w.type==="video"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"video",media:w.content.url},null,!1),q("/message/sendMedia")),w.type==="audio"&&(await d.audioWhatsapp({number:s.split("@")[0],delay:g?.delayMessage||1e3,encoding:!0,audio:w.content.url},!1),q("/message/sendWhatsAppAudio"));let M=a(f,w.id);M&&await new Promise(I=>setTimeout(I,M*1e3))}if(console.log("input",m),m){if(m.type==="choice input"){let w="",M=m.items;for(let I of M)w+=`\u25B6\uFE0F ${I.content}
`;if(w=w.replace(/\n$/,""),w.includes("[list]")){let I={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},v=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),x=w.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),N=w.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),O=w.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);v&&(I.title=v[1].trim()),x&&(I.description=x[1].trim()),N&&(I.buttonText=N[1].trim()),O&&(I.footerText=O[1].trim());let F=w.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(F){let G=F.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);G&&G.forEach(j=>{let K=j.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),H=j.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),W={title:K,rows:H?.map(ee=>({title:ee.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:ee.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:ee.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};I.sections.push(W)})}await d.listMessage(I)}else if(w.includes("[buttons]")){let I={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},v=w.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),x=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=w.match(/\[description\]([\s\S]*?)(?=\[footer\])/),O=w.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);x&&(I.title=x[1].trim()),v&&(I.thumbnailUrl=v[1].trim()),N&&(I.description=N[1].trim()),O&&(I.footer=O[1].trim());let F={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[G,j]of Object.entries(F)){let K;for(;(K=j.exec(w))!==null;){let H=K[1].trim(),W={type:G};switch(G){case"pix":W.currency=H.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),W.name=H.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),W.keyType=H.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),W.key=H.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":W.displayText=H.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),W.id=H.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":W.displayText=H.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),W.copyCode=H.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":W.displayText=H.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),W.phoneNumber=H.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":W.displayText=H.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),W.url=H.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(W).length>1&&I.buttons.push(W)}}await d.buttonMessage(I)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:w},!1);q("/message/sendText")}await S.integrationSession.update({where:{id:l.id},data:{awaitUser:!0}})}else g?.keepOpen?await S.integrationSession.update({where:{id:l.id},data:{status:"closed"}}):await S.integrationSession.deleteMany({where:{id:l.id}})}}async processTypebot(i,e,t,s,r,n,o,a,c,u,d,l,g,h,m,f){if(s&&o&&o>0){let I=Date.now(),v=new Date(s.updatedAt).getTime(),x=I-v;if(Math.floor(x/1e3/60)>o){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});let O=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:e,pushName:t.pushName,botId:r.id,prefilledVariables:f});if(O.session&&(s=O.session),O.messages.length===0){let F=Ee(t.message);if(!F){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),q("/message/sendText"));return}if(c&&F.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}try{let G=this.configService.get("TYPEBOT").API_VERSION,j,K;G==="latest"?(j=`${n}/api/v1/sessions/${O.sessionId}/continueChat`,K={message:F}):(j=`${n}/api/v1/sendMessage`,K={message:F,sessionId:O.sessionId});let H=await ds.post(j,K);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,H.data.messages,H.data.input,H.data.clientSideActions)}catch(G){this.logger.error(G);return}}await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,O.messages,O.input,O.clientSideActions);return}}if(s&&s.status!=="opened")return;if(!s){let I=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:e,pushName:t?.pushName,botId:r.id,prefilledVariables:f});if(I?.session&&(s=I.session),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,I?.messages,I?.input,I?.clientSideActions),I.messages.length===0){if(!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),q("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let v;try{let x=this.configService.get("TYPEBOT").API_VERSION,N,O;x==="latest"?(N=`${n}/api/v1/sessions/${I.sessionId}/continueChat`,O={message:m}):(N=`${n}/api/v1/sendMessage`,O={message:m,sessionId:I.sessionId}),v=await ds.post(N,O),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,v.data.messages,v.data.input,v.data.clientSideActions)}catch(x){this.logger.error(x);return}}return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:u||1e3,text:d},!1),q("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){h?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:e}});return}let b=this.configService.get("TYPEBOT").API_VERSION,S,w;b==="latest"?(S=`${n}/api/v1/sessions/${s.sessionId.split("-")[1]}/continueChat`,w={message:m}):(S=`${n}/api/v1/sendMessage`,w={message:m,sessionId:s.sessionId.split("-")[1]});let M=await ds.post(S,w);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:h},e,M?.data?.messages,M?.data?.input,M?.data?.clientSideActions)}}});import{isArray as Kl}from"class-validator";import{v4 as Co}from"uuid";var Ge,gs=E(()=>{ps();Yn();zn();Xn();B();pe();_();te();Ge=class p{constructor(i,e,t,s){this.configService=i;this.eventEmitter=e;this.prismaRepository=t;this.chatwootCache=s;this.logger=new C("ChannelStartupService");this.instance={};this.localChatwoot={};this.localProxy={};this.localSettings={};this.localWebhook={};this.chatwootService=new Ne(k,this.configService,this.prismaRepository,this.chatwootCache);this.typebotService=new dt(k,this.configService,this.prismaRepository);this.openaiService=new ut(k,this.configService,this.prismaRepository);this.difyService=new lt(k,this.configService,this.prismaRepository)}setInstance(i){this.logger.setInstance(i.instanceName),this.instance.name=i.instanceName,this.instance.id=i.instanceId,this.instance.integration=i.integration,this.instance.number=i.number,this.instance.token=i.token,this.instance.businessId=i.businessId,this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name},{instance:this.instance.name,status:"created"})}set instanceName(i){if(this.logger.setInstance(i),!i){this.instance.name=Co();return}this.instance.name=i}get instanceName(){return this.instance.name}set instanceId(i){if(!i){this.instance.id=Co();return}this.instance.id=i}get instanceId(){return this.instance.id}set integration(i){this.instance.integration=i}get integration(){return this.instance.integration}set number(i){this.instance.number=i}get number(){return this.instance.number}set token(i){this.instance.token=i}get token(){return this.instance.token}get wuid(){return this.instance.wuid}async loadWebhook(){let i=await this.prismaRepository.webhook.findUnique({where:{instanceId:this.instanceId}});this.localWebhook.enabled=i?.enabled,this.localWebhook.webhookBase64=i?.webhookBase64}async loadSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async setSettings(i){await this.prismaRepository.setting.upsert({where:{instanceId:this.instanceId},update:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory},create:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,instanceId:this.instanceId}}),this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async findSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});return i?{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory}:null}async loadChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});this.localChatwoot.enabled=i?.enabled,this.localChatwoot.accountId=i?.accountId,this.localChatwoot.token=i?.token,this.localChatwoot.url=i?.url,this.localChatwoot.nameInbox=i?.nameInbox,this.localChatwoot.signMsg=i?.signMsg,this.localChatwoot.signDelimiter=i?.signDelimiter,this.localChatwoot.number=i?.number,this.localChatwoot.reopenConversation=i?.reopenConversation,this.localChatwoot.conversationPending=i?.conversationPending,this.localChatwoot.mergeBrazilContacts=i?.mergeBrazilContacts,this.localChatwoot.importContacts=i?.importContacts,this.localChatwoot.importMessages=i?.importMessages,this.localChatwoot.daysLimitImportMessages=i?.daysLimitImportMessages}async setChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)return;if(await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}})){await this.prismaRepository.chatwoot.update({where:{instanceId:this.instanceId},data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signMsg?i.signDelimiter:null,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot();return}await this.prismaRepository.chatwoot.create({data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids,instanceId:this.instanceId}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot()}async findChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return null;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});if(!i)return null;let e=Array.isArray(i.ignoreJids)?i.ignoreJids.map(t=>String(t)):[];return{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signDelimiter||null,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:e}}clearCacheChatwoot(){this.localChatwoot?.enabled&&this.chatwootService.getCache()?.deleteAll(this.instanceName)}async loadProxy(){this.localProxy.enabled=!1,process.env.PROXY_HOST&&(this.localProxy.enabled=!0,this.localProxy.host=process.env.PROXY_HOST,this.localProxy.port=process.env.PROXY_PORT||"80",this.localProxy.protocol=process.env.PROXY_PROTOCOL||"http",this.localProxy.username=process.env.PROXY_USERNAME,this.localProxy.password=process.env.PROXY_PASSWORD);let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});i?.enabled&&(this.localProxy.enabled=!0,this.localProxy.host=i?.host,this.localProxy.port=i?.port,this.localProxy.protocol=i?.protocol,this.localProxy.username=i?.username,this.localProxy.password=i?.password)}async setProxy(i){await this.prismaRepository.proxy.upsert({where:{instanceId:this.instanceId},update:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password},create:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password,instanceId:this.instanceId}}),Object.assign(this.localProxy,i)}async findProxy(){let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});if(!i)throw new $("Proxy not found");return i}async sendDataWebhook(i,e,t=!0){let s=this.configService.get("SERVER").URL,r=new Date().getTimezoneOffset()*6e4,o=new Date(Date.now()-r).toISOString(),a=this.configService.get("AUTHENTICATION").EXPOSE_IN_FETCH_INSTANCES,c=this.token||"Apikey not found";await Z.emit({instanceName:this.instance.name,origin:p.name,event:i,data:e,serverUrl:s,dateTime:o,sender:this.wuid,apiKey:a&&c?c:null,local:t})}formatMXOrARNumber(i){let e=i.substring(0,2);return(Number(e)===52||Number(e)===54)&&i.length===13?e+i.substring(3):i}formatBRNumber(i){let e=new RegExp(/^(\d{2})(\d{2})\d{1}(\d{8})$/);if(e.test(i)){let t=e.exec(i);if(t&&t[1]==="55"){let s=Number.parseInt(t[3][0]),r=Number.parseInt(t[2]);return s<7||r<31?t[0]:t[1]+t[2]+t[3]}return i}else return i}createJid(i){return i.includes("@g.us")||i.includes("@s.whatsapp.net")||i.includes("@lid")||i.includes("@broadcast")?i:(i=i?.replace(/\s/g,"").replace(/\+/g,"").replace(/\(/g,"").replace(/\)/g,"").split(":")[0].split("@")[0],i.includes("-")&&i.length>=24?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=i.replace(/\D/g,""),i.length>=18?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=this.formatMXOrARNumber(i),i=this.formatBRNumber(i),`${i}@s.whatsapp.net`)))}async fetchContacts(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,t={instanceId:this.instanceId};return e&&(t.remoteJid=e),await this.prismaRepository.contact.findMany({where:t})}async fetchMessages(i){let e=i?.where?.key,t=await this.prismaRepository.message.count({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]}});i?.offset||(i.offset=50),i?.page||(i.page=1);let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]},orderBy:{messageTimestamp:"desc"},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset,select:{id:!0,key:!0,pushName:!0,messageType:!0,message:!0,messageTimestamp:!0,instanceId:!0,source:!0,contextInfo:!0,MessageUpdate:{select:{status:!0}}}});return{messages:{total:t,pages:Math.ceil(t/i.offset),currentPage:i.page,records:s}}}async fetchStatusMessage(i){return await this.prismaRepository.messageUpdate.findMany({where:{instanceId:this.instanceId,remoteJid:i.where?.remoteJid,keyId:i.where?.id},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset})}async fetchChats(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,t=[];return e?t=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId} AND "Chat"."remoteJid" = ${e} and "Message"."messageType" != 'reactionMessage'
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `:t=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId}
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `,t&&Kl(t)&&t.length>0?t.map(s=>({id:s.id,remoteJid:s.remoteJid,name:s.name,labels:s.labels,createdAt:s.createdAt,updatedAt:s.updatedAt,pushName:s.pushName,profilePicUrl:s.profilePicUrl,unreadMessages:s.unreadMessages,lastMessage:s.last_message_id?{id:s.last_message_id,key:s.last_message_key,pushName:s.last_message_push_name,participant:s.last_message_participant,messageType:s.last_message_message_type,message:s.last_message_message,contextInfo:s.last_message_context_info,source:s.last_message_source,messageTimestamp:s.last_message_message_timestamp,instanceId:s.last_message_instance_id,sessionId:s.last_message_session_id,status:s.last_message_status}:void 0})):[]}}});var ne,ms=E(()=>{ne={0:"ERROR",1:"PENDING",2:"SERVER_ACK",3:"DELIVERY_ACK",4:"READ",5:"PLAYED"}});import{isURL as vo}from"class-validator";import hs from"mime";import{v4 as Ao}from"uuid";var ys,Ro=E(()=>{B();gs();pe();te();ms();ys=class extends Ge{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"};this.client=null}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async profilePicture(e){return{wuid:this.createJid(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async connectToWhatsapp(e){if(e)try{this.loadChatwoot(),this.eventHandler(e)}catch(t){throw this.logger.error(t),new U(t?.toString())}}async eventHandler(e){try{let t;if(e.message){if(t={key:{id:e.key.id||Ao(),remoteJid:e.key.remoteJid,fromMe:e.key.fromMe},pushName:e.pushName,message:e.message,messageType:e.messageType,messageTimestamp:Math.round(new Date().getTime()/1e3),source:"unknown",instanceId:this.instanceId},this.configService.get("OPENAI").ENABLED){let r=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});r&&r.openaiCredsId&&r.speechToText&&e?.message?.audioMessage&&(t.message.speechToText=await this.openaiService.speechToText(r.OpenaiCreds,e,this.client.updateMediaMessage))}if(this.logger.log(t),this.sendDataWebhook("messages.upsert",t),await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:t.key.remoteJid,msg:t,pushName:t.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let r=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},t);r?.id&&(t.chatwootMessageId=r.id,t.chatwootInboxId=r.id,t.chatwootConversationId=r.id)}await this.prismaRepository.message.create({data:t}),await this.updateContact({remoteJid:t.key.remoteJid,pushName:t.key.fromMe||t.key.fromMe==null?"":e.pushName,profilePicUrl:e.profilePicUrl})}}catch(t){this.logger.error(t)}}async updateContact(e){let t=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:e.remoteJid}});if(t){let o={remoteJid:e.remoteJid,pushName:e?.pushName,instanceId:this.instanceId,profilePicUrl:e?.profilePicUrl};this.sendDataWebhook("contacts.update",o),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},o),await this.prismaRepository.contact.updateMany({where:{remoteJid:t.remoteJid,instanceId:this.instanceId},data:o});return}let s={remoteJid:e.remoteJid,pushName:e?.pushName,instanceId:this.instanceId,profilePicUrl:e?.profilePicUrl};this.sendDataWebhook("contacts.upsert",s),await this.prismaRepository.contact.create({data:s});let r=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:e.remoteJid}});if(r){let o={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.update",o),await this.prismaRepository.chat.updateMany({where:{remoteJid:r.remoteJid},data:o})}let n={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.upsert",n),await this.prismaRepository.chat.create({data:n})}async sendMessageWithTyping(e,t,s,r=!1){try{let n,o;if(s?.quoted){let d=s?.quoted?.key;if(!d)throw"Message not found";n=d}s.delay&&await new Promise(u=>setTimeout(u,s.delay)),s?.webhookUrl&&(o=s.webhookUrl);let c={key:{fromMe:!0,id:Ao(),remoteJid:e},messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:o,source:"unknown",instanceId:this.instanceId,status:ne[1]};return t?.mediaType==="image"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"imageMessage"}:t?.mediaType==="video"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"videoMessage"}:t?.mediaType==="audio"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"audioMessage"}:t?.mediaType==="document"?c={...c,message:{mediaUrl:t.media,quoted:n},messageType:"documentMessage"}:c={...c,message:{...t,quoted:n},messageType:"conversation"},this.logger.log(c),this.sendDataWebhook("send.message",c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName}),await this.prismaRepository.message.create({data:c}),c}catch(n){throw this.logger.error(n),new y(n.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};return vo(e.media)?t=hs.getType(e.media):t=hs.getType(e.fileName),s.mimetype=t,s}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudio(e,t){t=t.replace(/\D/g,"");let s=`${t}-${new Date().getTime()}`,r,n={fileName:`${s}.mp4`,mediaType:"audio",media:e};return vo(e)?r=hs.getType(e):r=hs.getType(n.fileName),n.mimetype=r,n}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else throw console.error("El archivo o buffer no est\uFFFD definido correctamente."),new Error("File or buffer is undefined.");let n=await this.processAudio(r.audio,e.number);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async buttonMessage(){throw new y("Method not available on Evolution Channel")}async locationMessage(){throw new y("Method not available on Evolution Channel")}async listMessage(){throw new y("Method not available on Evolution Channel")}async templateMessage(){throw new y("Method not available on Evolution Channel")}async contactMessage(){throw new y("Method not available on Evolution Channel")}async reactionMessage(){throw new y("Method not available on Evolution Channel")}async getBase64FromMediaMessage(){throw new y("Method not available on Evolution Channel")}async deleteMessage(){throw new y("Method not available on Evolution Channel")}async mediaSticker(){throw new y("Method not available on Evolution Channel")}async pollMessage(){throw new y("Method not available on Evolution Channel")}async statusMessage(){throw new y("Method not available on Evolution Channel")}async reloadConnection(){throw new y("Method not available on Evolution Channel")}async whatsappNumber(){throw new y("Method not available on Evolution Channel")}async markMessageAsRead(){throw new y("Method not available on Evolution Channel")}async archiveChat(){throw new y("Method not available on Evolution Channel")}async markChatUnread(){throw new y("Method not available on Evolution Channel")}async fetchProfile(){throw new y("Method not available on Evolution Channel")}async offerCall(){throw new y("Method not available on WhatsApp Business API")}async sendPresence(){throw new y("Method not available on Evolution Channel")}async setPresence(){throw new y("Method not available on Evolution Channel")}async fetchPrivacySettings(){throw new y("Method not available on Evolution Channel")}async updatePrivacySettings(){throw new y("Method not available on Evolution Channel")}async fetchBusinessProfile(){throw new y("Method not available on Evolution Channel")}async updateProfileName(){throw new y("Method not available on Evolution Channel")}async updateProfileStatus(){throw new y("Method not available on Evolution Channel")}async updateProfilePicture(){throw new y("Method not available on Evolution Channel")}async removeProfilePicture(){throw new y("Method not available on Evolution Channel")}async blockUser(){throw new y("Method not available on Evolution Channel")}async updateMessage(){throw new y("Method not available on Evolution Channel")}async createGroup(){throw new y("Method not available on Evolution Channel")}async updateGroupPicture(){throw new y("Method not available on Evolution Channel")}async updateGroupSubject(){throw new y("Method not available on Evolution Channel")}async updateGroupDescription(){throw new y("Method not available on Evolution Channel")}async findGroup(){throw new y("Method not available on Evolution Channel")}async fetchAllGroups(){throw new y("Method not available on Evolution Channel")}async inviteCode(){throw new y("Method not available on Evolution Channel")}async inviteInfo(){throw new y("Method not available on Evolution Channel")}async sendInvite(){throw new y("Method not available on Evolution Channel")}async acceptInviteCode(){throw new y("Method not available on Evolution Channel")}async revokeInviteCode(){throw new y("Method not available on Evolution Channel")}async findParticipants(){throw new y("Method not available on Evolution Channel")}async updateGParticipant(){throw new y("Method not available on Evolution Channel")}async updateGSetting(){throw new y("Method not available on Evolution Channel")}async toggleEphemeral(){throw new y("Method not available on Evolution Channel")}async leaveGroup(){throw new y("Method not available on Evolution Channel")}async fetchLabels(){throw new y("Method not available on Evolution Channel")}async handleLabel(){throw new y("Method not available on Evolution Channel")}async receiveMobileCode(){throw new y("Method not available on Evolution Channel")}async fakeCall(){throw new y("Method not available on Evolution Channel")}}});import*as Do from"minio";import{join as Po}from"path";var fs,et,De,He,Yl,Ql,zl,Et,tt,ws=E(()=>{z();_();te();fs=new C("S3 Service"),et=new Ye().get("S3"),De=(()=>{if(et?.ENABLE)return new Do.Client({endPoint:et.ENDPOINT,port:et.PORT,useSSL:et.USE_SSL,accessKey:et.ACCESS_KEY,secretKey:et.SECRET_KEY,region:et.REGION})})(),He=process.env.S3_BUCKET,Yl=async()=>{if(De)try{return(await De.listBuckets()).find(i=>i.name===He)}catch{return!1}},Ql=async()=>{if(De){let p={Version:"2012-10-17",Statement:[{Effect:"Allow",Principal:"*",Action:["s3:GetObject"],Resource:[`arn:aws:s3:::${He}/*`]}]};await De.setBucketPolicy(He,JSON.stringify(p))}},zl=async()=>{if(De)try{return await Yl()||await De.makeBucket(He),await Ql(),fs.info(`S3 Bucket ${He} - ON`),!0}catch(p){return fs.error("S3 ERROR:"),fs.error(p),!1}};zl();Et=async(p,i,e,t)=>{if(De){let s=Po("evolution-api",p);try{return t["custom-header-application"]="evolution-api",await De.putObject(He,s,i,e,t)}catch(r){return fs.error(r),r}}},tt=async(p,i)=>{if(De)try{let e=Po("evolution-api",p);return i?await De.presignedGetObject(He,e,i):await De.presignedGetObject(He,e)}catch(e){throw new y(e?.message)}}});import st from"axios";import{arrayUnique as Zn,isURL as Oo}from"class-validator";import Xl from"form-data";import{createReadStream as Zl}from"fs";import bs from"mime";import{join as eu}from"path";var Ss,_o=E(()=>{ws();B();gs();pe();te();ms();Ss=class extends Ge{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"}}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async post(e,t){try{let s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${this.number}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};return(await st.post(s,e,{headers:n})).data}catch(s){return s.response?.data?.error}}async profilePicture(e){return{wuid:this.createJid(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async setWhatsappBusinessProfile(e){let t={messaging_product:"whatsapp",about:e.about,address:e.address,description:e.description,vertical:e.vertical,email:e.email,websites:e.websites,profile_picture_handle:e.profilehandle};return await this.post(t,"whatsapp_business_profile")}async connectToWhatsapp(e){if(!e)return;let t=e.entry[0].changes[0].value;try{this.loadChatwoot(),this.eventHandler(t),this.phoneNumber=this.createJid(t.messages?t.messages[0].from:t.statuses[0]?.recipient_id)}catch(s){throw this.logger.error(s),new U(s?.toString())}}async downloadMediaMessage(e){try{let t=e[e.type].id,s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},o=await st.get(s,{headers:n});return o=await st.get(o.data.url,{headers:n,responseType:"arraybuffer"}),o.data}catch(t){this.logger.error(t)}}messageMediaJson(e){let t=e.messages[0],s=t.type+"Message";return s={[s]:t[t.type]},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageInteractiveJson(e){let t=e.messages[0],s={conversation:t.interactive[t.interactive.type].title};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageButtonJson(e){let t=e.messages[0],s={conversation:e.messages[0].button?.text};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageReactionJson(e){let t=e.messages[0],s={reactionMessage:{key:{id:t.reaction.message_id},text:t.reaction.emoji}};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageTextJson(e){let t,s=e.messages[0];return s.from===e.metadata.phone_number_id?(t={extendedTextMessage:{text:s.text.body}},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})):(t={conversation:s.text.body},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})),t}messageContactsJson(e){let t=e.messages[0],s={},r=n=>{let o=`BEGIN:VCARD
VERSION:3.0
N:${n.name.formatted_name}
FN:${n.name.formatted_name}
`;return n.org&&(o+=`ORG:${n.org.company};
`),n.emails&&(o+=`EMAIL:${n.emails[0].email}
`),n.urls&&(o+=`URL:${n.urls[0].url}
`),n.phones[0]?.wa_id||(n.phones[0].wa_id=this.createJid(n.phones[0].phone)),o+=`item1.TEL;waid=${n.phones[0]?.wa_id}:${n.phones[0].phone}
item1.X-ABLabel:Celular
END:VCARD`,o};return t.contacts.length===1?s.contactMessage={displayName:t.contacts[0].name.formatted_name,vcard:r(t.contacts[0])}:s.contactsArrayMessage={displayName:`${t.length} contacts`,contacts:t.map(n=>({displayName:n.name.formatted_name,vcard:r(n)}))},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}renderMessageType(e){let t;switch(e){case"text":t="conversation";break;case"image":t="imageMessage";break;case"video":t="videoMessage";break;case"audio":t="audioMessage";break;case"document":t="documentMessage";break;case"template":t="conversation";break;default:t="conversation";break}return t}async messageHandle(e,t,s){try{let r,n;if(e.contacts&&(n=e.contacts[0].profile.name),e.messages){let o={id:e.messages[0].id,remoteJid:this.phoneNumber,fromMe:e.messages[0].from===e.metadata.phone_number_id};if(e?.messages[0].document||e?.messages[0].image||e?.messages[0].audio||e?.messages[0].video)if(r={key:o,pushName:n,message:this.messageMediaJson(e),contextInfo:this.messageMediaJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId},this.configService.get("S3").ENABLE)try{let u=e,d=u.messages[0][u.messages[0].type].id,l=this.configService.get("WA_BUSINESS").URL,g=this.configService.get("WA_BUSINESS").VERSION;l=`${l}/${g}/${d}`;let h={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},m=await st.get(l,{headers:h}),f=await st.get(m.data.url,{headers:h,responseType:"arraybuffer"}),b=u.messages[0].document?"document":u.messages[0].image?"image":u.messages[0].audio?"audio":"video",S=m.headers["content-type"],w=m.headers["content-disposition"],M=`${u.messages[0].id}.${S.split("/")[1]}`;if(w){let N=w.match(/filename="(.+?)"/);N&&(M=N[1])}let I=m.headers["content-length"]||f.data.byteLength,v=eu(`${this.instance.id}`,e.key.remoteJid,b,M);await Et(v,f.data,I,{"Content-Type":S}),await this.prismaRepository.media.create({data:{messageId:e.messages[0].id,instanceId:this.instanceId,type:b,fileName:v,mimetype:S}});let x=await tt(v);r.message.mediaUrl=x}catch(u){this.logger.error(["Error on upload file to minio",u?.message,u?.stack])}else{let u=await this.downloadMediaMessage(e?.messages[0]);r.message.base64=u.toString("base64")}else e?.messages[0].interactive?r={key:o,pushName:n,message:{...this.messageInteractiveJson(e)},contextInfo:this.messageInteractiveJson(e)?.contextInfo,messageType:"interactiveMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].button?r={key:o,pushName:n,message:{...this.messageButtonJson(e)},contextInfo:this.messageButtonJson(e)?.contextInfo,messageType:"buttonMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].reaction?r={key:o,pushName:n,message:{...this.messageReactionJson(e)},contextInfo:this.messageReactionJson(e)?.contextInfo,messageType:"reactionMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].contacts?r={key:o,pushName:n,message:{...this.messageContactsJson(e)},contextInfo:this.messageContactsJson(e)?.contextInfo,messageType:"contactMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:r={key:o,pushName:n,message:this.messageTextJson(e),contextInfo:this.messageTextJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId};if(this.localSettings.readMessages,this.configService.get("OPENAI").ENABLED){let u=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});u&&u.openaiCredsId&&u.speechToText&&e?.message?.audioMessage&&(r.message.speechToText=await this.openaiService.speechToText(u.OpenaiCreds,e,this.client.updateMediaMessage))}if(this.logger.log(r),this.sendDataWebhook("messages.upsert",r),await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:r.key.remoteJid,msg:r,pushName:r.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let u=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},r);u?.id&&(r.chatwootMessageId=u.id,r.chatwootInboxId=u.id,r.chatwootConversationId=u.id)}await this.prismaRepository.message.create({data:r});let a=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:o.remoteJid}}),c={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};if(c.remoteJid==="status@broadcast")return;if(a){let u={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};this.sendDataWebhook("contacts.update",u),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},u),await this.prismaRepository.contact.updateMany({where:{remoteJid:a.remoteJid},data:u});return}this.sendDataWebhook("contacts.upsert",c),this.prismaRepository.contact.create({data:c})}if(e.statuses)for await(let o of e.statuses){let a={id:o.id,remoteJid:this.phoneNumber,fromMe:this.phoneNumber===e.metadata.phone_number_id};if(s?.groups_ignore&&a.remoteJid.includes("@g.us"))return;if(a.remoteJid!=="status@broadcast"&&!a?.remoteJid?.match(/(:\d+)/)){let c=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:a.id}}});if(!c)return;if(o.message===null&&o.status===void 0){this.sendDataWebhook("messages.delete",a);let d={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:"DELETED",instanceId:this.instanceId};await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:a});return}let u={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:o.status.toUpperCase(),instanceId:this.instanceId};this.sendDataWebhook("messages.update",u),await this.prismaRepository.messageUpdate.create({data:u}),c.webhookUrl&&await st.post(c.webhookUrl,u)}}}catch(r){this.logger.error(r)}}convertMessageToRaw(e,t){let s;return e?.conversation?t?.context?.message_id?(s={...e,contextInfo:{stanzaId:t.context.message_id}},s):(s=e,s):e?.mediaType==="image"?t?.context?.message_id?(s={imageMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{imageMessage:e}:e?.mediaType==="video"?t?.context?.message_id?(s={videoMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{videoMessage:e}:e?.mediaType==="audio"?t?.context?.message_id?(s={audioMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{audioMessage:e}:e?.mediaType==="document"?t?.context?.message_id?(s={documentMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{documentMessage:e}:e}async eventHandler(e){let t=this.configService.get("DATABASE"),s=await this.findSettings();this.messageHandle(e,t,s)}async sendMessageWithTyping(e,t,s,r=!1){try{let n,o,a=s?.linkPreview!=!1?void 0:!1;if(s?.quoted){let g=s?.quoted?.key;if(!g)throw"Message not found";n=g}s?.webhookUrl&&(o=s.webhookUrl);let c,u=await(async()=>{if(t.reactionMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"reaction",to:e.replace(/\D/g,""),reaction:{message_id:t.reactionMessage.key.id,emoji:t.reactionMessage.text}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.locationMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"location",to:e.replace(/\D/g,""),location:{longitude:t.locationMessage.degreesLongitude,latitude:t.locationMessage.degreesLatitude,name:t.locationMessage.name,address:t.locationMessage.address}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.contacts)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"contacts",to:e.replace(/\D/g,""),contacts:t.contacts},n&&(c.context={message_id:n.id}),t=t.message,await this.post(c,"messages");if(t.conversation)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"text",to:e.replace(/\D/g,""),text:{body:t.conversation,preview_url:a}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.media)return c={messaging_product:"whatsapp",recipient_type:"individual",type:t.mediaType,to:e.replace(/\D/g,""),[t.mediaType]:{[t.type]:t.id,preview_url:a,caption:t.caption}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.audio)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"audio",to:e.replace(/\D/g,""),audio:{[t.type]:t.id}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.buttons){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"button",body:{text:t.text||"Select"},action:{buttons:t.buttons}}},n&&(c.context={message_id:n.id});let l="";for(let g of t.buttons)l+=`\u25B6\uFE0F ${g.reply?.title}
`;return t={conversation:`${t.text||"Select"}
`+l},await this.post(c,"messages")}if(t.listMessage){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"list",header:{type:"text",text:t.listMessage.title},body:{text:t.listMessage.description},footer:{text:t.listMessage.footerText},action:{button:t.listMessage.buttonText,sections:t.listMessage.sections}}},n&&(c.context={message_id:n.id});let l="";for(let g of t.listMessage.sections){l+=`${g?.title}
`;for(let h of g.rows)l+=`${h?.title}
`}return t={conversation:`${t.listMessage.title}
`+l},await this.post(c,"messages")}if(t.template)return c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"template",template:{name:t.template.name,language:{code:t.template.language||"en_US"},components:t.template.components}},n&&(c.context={message_id:n.id}),t={conversation:`\u25B6\uFE0F${t.template.name}\u25C0\uFE0F`},await this.post(c,"messages")})();if(u?.error_data)return this.logger.error(u),u;let d={key:{fromMe:!0,id:u?.messages[0]?.id,remoteJid:this.createJid(e)},message:this.convertMessageToRaw(t,c),messageType:this.renderMessageType(c.type),messageTimestamp:u?.messages[0]?.timestamp||Math.round(new Date().getTime()/1e3),instanceId:this.instanceId,webhookUrl:o,status:ne[1],source:"unknown"};return this.logger.log(d),this.sendDataWebhook("send.message",d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:d.key.remoteJid,msg:d,pushName:d.pushName}),await this.prismaRepository.message.create({data:d}),d}catch(n){throw this.logger.error(n),new y(n.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async getIdMedia(e){let t=new Xl,s=Zl(e.media);t.append("file",s,{filename:"media",contentType:e.mimetype}),t.append("typeFile",e.mimetype),t.append("messaging_product","whatsapp");let r={Authorization:`Bearer ${this.token}`};return(await st.post(process.env.API_URL+"/"+process.env.VERSION+"/"+this.number+"/media",t,{headers:r})).data.id}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};if(Oo(e.media))t=bs.getType(e.media),s.id=e.media,s.type="link";else{t=bs.getType(e.fileName);let r=await this.getIdMedia(s);s.id=r,s.type="id"}return s.mimetype=t,s}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudio(e,t){t=t.replace(/\D/g,"");let s=`${t}-${new Date().getTime()}`,r,n={fileName:`${s}.mp3`,mediaType:"audio",media:e};if(Oo(e))r=bs.getType(e),n.id=e,n.type="link";else{r=bs.getType(n.fileName);let o=await this.getIdMedia(n);n.id=o,n.type="id"}return n.mimetype=r,n}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else throw console.error("El archivo no tiene buffer o file es undefined"),new Error("File or buffer is undefined");let n=await this.processAudio(r.audio,e.number);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async buttonMessage(e){let t={},s={text:e.buttons.map(r=>r.displayText),ids:e.buttons.map(r=>r.id)};if(!Zn(s.text)||!Zn(s.ids))throw new y("Button texts cannot be repeated","Button IDs cannot be repeated.");return await this.sendMessageWithTyping(e.number,{text:t?.mediaKey?void 0:e.title,buttons:e.buttons.map(r=>({type:"reply",reply:{title:r.displayText,id:r.id}})),[t?.mediaKey]:t?.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){let t={title:e.sections.map(r=>r.title)};if(!Zn(t.title))throw new y("Section tiles cannot be repeated");let s={listMessage:{title:e.title,description:e.description,footerText:e?.footerText,buttonText:e?.buttonText,sections:e.sections.map(r=>({title:r.title,rows:r.rows.map(n=>({title:n.title,description:n.description.substring(0,72),id:n.rowId}))}))}};return await this.sendMessageWithTyping(e.number,s,{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async templateMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{template:{name:e.name,language:e.language,components:e.components}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned,webhookUrl:e?.webhookUrl},t)}async contactMessage(e){let t={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contact={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(e.number,{contacts:e.contact.map(r=>({name:{formatted_name:r.fullName,first_name:r.fullName},phones:[{phone:r.phoneNumber}],urls:[{url:r.url}],emails:[{email:r.email}],org:{company:r.organization}})),message:t},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async getBase64FromMediaMessage(e){try{let t=e.message,s=t.messageType.includes("Message")?t.messageType:t.messageType+"Message",r=t.message[s];return{mediaType:t.messageType,fileName:r?.fileName,caption:r?.caption,size:{fileLength:r?.fileLength,height:r?.fileLength,width:r?.width},mimetype:r?.mime_type,base64:t.message.base64}}catch(t){throw this.logger.error(t),new y(t.toString())}}async deleteMessage(){throw new y("Method not available on WhatsApp Business API")}async mediaSticker(){throw new y("Method not available on WhatsApp Business API")}async pollMessage(){throw new y("Method not available on WhatsApp Business API")}async statusMessage(){throw new y("Method not available on WhatsApp Business API")}async reloadConnection(){throw new y("Method not available on WhatsApp Business API")}async whatsappNumber(){throw new y("Method not available on WhatsApp Business API")}async markMessageAsRead(){throw new y("Method not available on WhatsApp Business API")}async archiveChat(){throw new y("Method not available on WhatsApp Business API")}async markChatUnread(){throw new y("Method not available on WhatsApp Business API")}async fetchProfile(){throw new y("Method not available on WhatsApp Business API")}async offerCall(){throw new y("Method not available on WhatsApp Business API")}async sendPresence(){throw new y("Method not available on WhatsApp Business API")}async setPresence(){throw new y("Method not available on WhatsApp Business API")}async fetchPrivacySettings(){throw new y("Method not available on WhatsApp Business API")}async updatePrivacySettings(){throw new y("Method not available on WhatsApp Business API")}async fetchBusinessProfile(){throw new y("Method not available on WhatsApp Business API")}async updateProfileName(){throw new y("Method not available on WhatsApp Business API")}async updateProfileStatus(){throw new y("Method not available on WhatsApp Business API")}async updateProfilePicture(){throw new y("Method not available on WhatsApp Business API")}async removeProfilePicture(){throw new y("Method not available on WhatsApp Business API")}async blockUser(){throw new y("Method not available on WhatsApp Business API")}async updateMessage(){throw new y("Method not available on WhatsApp Business API")}async createGroup(){throw new y("Method not available on WhatsApp Business API")}async updateGroupPicture(){throw new y("Method not available on WhatsApp Business API")}async updateGroupSubject(){throw new y("Method not available on WhatsApp Business API")}async updateGroupDescription(){throw new y("Method not available on WhatsApp Business API")}async findGroup(){throw new y("Method not available on WhatsApp Business API")}async fetchAllGroups(){throw new y("Method not available on WhatsApp Business API")}async inviteCode(){throw new y("Method not available on WhatsApp Business API")}async inviteInfo(){throw new y("Method not available on WhatsApp Business API")}async sendInvite(){throw new y("Method not available on WhatsApp Business API")}async acceptInviteCode(){throw new y("Method not available on WhatsApp Business API")}async revokeInviteCode(){throw new y("Method not available on WhatsApp Business API")}async findParticipants(){throw new y("Method not available on WhatsApp Business API")}async updateGParticipant(){throw new y("Method not available on WhatsApp Business API")}async updateGSetting(){throw new y("Method not available on WhatsApp Business API")}async toggleEphemeral(){throw new y("Method not available on WhatsApp Business API")}async leaveGroup(){throw new y("Method not available on WhatsApp Business API")}async fetchLabels(){throw new y("Method not available on WhatsApp Business API")}async handleLabel(){throw new y("Method not available on WhatsApp Business API")}async receiveMobileCode(){throw new y("Method not available on WhatsApp Business API")}async fakeCall(){throw new y("Method not available on WhatsApp Business API")}}});var gt,Es,Is,It,Ms,Ts,mt,Cs,vs,As,Rs,Ds,er,Ps,xs,Os,_s,tr=E(()=>{gt=class{constructor(i,e,t,s){this.jid=i;this.exists=e;this.number=t;this.name=s}},Es=class{},Is=class{},It=class{},Ms=class{},Ts=class{},mt=class{},Cs=class{},vs=class{},As=class{},Rs=class{},Ds=class{},er=class{},Ps=class extends er{},xs=class extends Ps{},Os=class extends Ps{},_s=class{}});import{BufferJSON as No}from"baileys";var ke,Ns=E(()=>{_();ke=class{constructor(i){this.cache=i;this.logger=new C("CacheService");i?this.logger.verbose(`cacheservice created using cache engine: ${i.constructor?.name}`):this.logger.verbose("cacheservice disabled")}async get(i){if(this.cache)return this.cache.get(i)}async hGet(i,e){if(!this.cache)return null;try{let t=await this.cache.hGet(i,e);return t?JSON.parse(t,No.reviver):null}catch(t){return this.logger.error(t),null}}async set(i,e,t){this.cache&&this.cache.set(i,e,t)}async hSet(i,e,t){if(this.cache)try{let s=JSON.stringify(t,No.replacer);await this.cache.hSet(i,e,s)}catch(s){this.logger.error(s)}}async has(i){if(this.cache)return this.cache.has(i)}async delete(i){if(this.cache)return this.cache.delete(i)}async hDelete(i,e){if(!this.cache)return!1;try{return await this.cache.hDelete(i,e),!0}catch(t){return this.logger.error(t),!1}}async deleteAll(i){if(this.cache)return this.cache.deleteAll(i)}async keys(i){if(this.cache)return this.cache.keys(i)}}});import tu from"dayjs";function ko(p){let i=[];p.startsWith("+")&&(p=p.slice(1));let[e,t]=p.split("@");if(p.startsWith("55")){let s=e.slice(4,5)==="9"&&e.length===13?e:`${e.slice(0,4)}9${e.slice(4)}`,r=e.length===12?e:e.slice(0,4)+e.slice(5);i.push(s),i.push(r)}else if(e.startsWith("52")||e.startsWith("54")){let s="";e.startsWith("52")&&(s="1"),e.startsWith("54")&&(s="9");let r=e.slice(2,3)===s&&e.length===13?e:`${e.slice(0,2)}${s}${e.slice(2)}`,n=e.length===12?e:e.slice(0,2)+e.slice(3);i.push(r),i.push(n)}else i.push(p);return i.map(s=>`${s}@${t}`)}async function it(p){if(T.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let i=p.map(e=>{let t=e.remoteJid.startsWith("+")?e.remoteJid.slice(1):e.remoteJid,s=ko(t);return L.isOnWhatsapp.upsert({create:{remoteJid:t,jidOptions:s.join(",")},update:{jidOptions:s.join(",")},where:{remoteJid:t}})});await L.$transaction(i)}}async function Bo(p){let i=[];if(T.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let e=p.map(s=>ko(s)).flat();i=(await L.isOnWhatsapp.findMany({where:{OR:e.map(s=>({jidOptions:{contains:s}})),updatedAt:{gte:tu().subtract(T.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP_DAYS,"days").toDate()}}})).map(s=>({remoteJid:s.remoteJid,number:s.remoteJid.split("@")[0],jidOptions:s.jidOptions.split(",")}))}return i}var Lo=E(()=>{B();z()});import{join as ks}from"path";var Ve,Mt,Wy,$y,Fo,Bs=E(()=>{Ve=process.cwd(),Mt=ks(Ve,"instances"),Wy=ks(Ve,"src"),$y=ks(Ve,"store","auth"),Fo=ks(Ve,"store")});import{BufferJSON as Uo,initAuthCreds as su,WAProto as iu}from"baileys";import nu from"fs/promises";import ru from"path";async function sr(p){try{return!!await L.session.findUnique({where:{sessionId:p}})}catch{return!1}}async function ou(p,i){let e=await sr(p);try{if(!e)return await L.session.create({data:{sessionId:p,creds:JSON.stringify(i)}});await L.session.update({where:{sessionId:p},data:{creds:JSON.stringify(i)}})}catch{return null}}async function au(p){try{if(!await sr(p))return null;let e=await L.session.findUnique({where:{sessionId:p}});return JSON.parse(e?.creds)}catch{return null}}async function cu(p){try{if(!await sr(p))return;await L.session.delete({where:{sessionId:p}})}catch{return}}async function ir(p,i){let e=ru.join(Mt,p);await nu.mkdir(e,{recursive:!0});async function t(o,a){let c=JSON.stringify(o,Uo.replacer);if(a!="creds")return await i.hSet(p,a,o);await ou(p,c)}async function s(o){try{let a;return o!="creds"?await i.hGet(p,o):(a=await au(p),JSON.parse(a,Uo.reviver))}catch{return null}}async function r(o){try{if(o!="creds")return await i.hDelete(p,o);await cu(p)}catch{return}}let n=await s("creds");return n||(n=su(),await t(n,"creds")),{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=iu.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?t(d,l):r(l))}await Promise.all(a)}}},saveCreds:()=>t(n,"creds")}}var Jo=E(()=>{B();Bs()});import{BufferJSON as Wo,initAuthCreds as pu,proto as lu}from"baileys";import{isNotEmpty as uu}from"class-validator";var Ls,$o=E(()=>{_();Ls=class{constructor(i){this.providerFiles=i;this.logger=new C("AuthStateProvider")}async authStateProvider(i){let[,e]=await this.providerFiles.create(i);if(e){this.logger.error(["Failed to create folder on file server",e?.message,e?.stack]);return}let t=async(o,a)=>{let c=JSON.stringify(o,Wo.replacer),[u,d]=await this.providerFiles.write(i,a,{data:c});if(!d)return u},s=async o=>{let[a,c]=await this.providerFiles.read(i,o);if(!c&&uu(a?.data))return JSON.parse(JSON.stringify(a.data),Wo.reviver)},r=async o=>{let[a,c]=await this.providerFiles.delete(i,o);if(!c)return a},n=await s("creds")||pu();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=lu.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await t(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}}});import{initAuthCreds as du,proto as gu}from"baileys";async function qo(p,i){let e=new C("useMultiFileAuthStateRedisDb"),t=async(o,a)=>{try{return await i.hSet(p,a,o)}catch(c){return e.error({localError:"writeData",error:c})}},s=async o=>{try{return await i.hGet(p,o)}catch(a){e.error({localError:"readData",error:a});return}},r=async o=>{try{return await i.hDelete(p,o)}catch(a){e.error({readData:"removeData",error:a})}},n=await s("creds")||du();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=gu.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await t(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}var Go=E(()=>{_()});import Ho from"@ffmpeg-installer/ffmpeg";import je from"axios";import mu,{BufferJSON as hu,delay as nt,DisconnectReason as Tt,downloadMediaMessage as nr,fetchLatestBaileysVersion as yu,generateWAMessageFromContent as Vo,getAggregateVotesInPollMessage as fu,getContentType as jo,getDevice as wu,isJidBroadcast as bu,isJidGroup as Pe,isJidNewsletter as Su,isJidUser as Ko,makeCacheableSignalKeyStore as Eu,prepareWAMessageMedia as Iu,proto as Ct}from"baileys";import{spawn as Mu}from"child_process";import{isArray as Tu,isBase64 as Fs,isURL as Be}from"class-validator";import{randomBytes as Cu}from"crypto";import Yo from"fluent-ffmpeg";import vu from"form-data";import{readFileSync as Au}from"fs";import rr from"long";import Us from"mime";import Qo from"node-cache";import Ru from"node-cron";import{release as Du}from"os";import{join as or}from"path";import vt from"pino";import Pu from"qrcode";import xu from"qrcode-terminal";import Ou from"sharp";import{PassThrough as Js,Readable as _u}from"stream";import{v4 as ar}from"uuid";async function Nu(p){let i=(await import("mediainfo.js")).default,e=await i({format:"JSON"}),t,s;if(Buffer.isBuffer(p))t=p.length,s=async(c,u)=>p.slice(u,u+c);else if(typeof p=="string"){let c=await import("fs");t=(await c.promises.stat(p)).size;let d=await c.promises.open(p,"r");s=async(l,g)=>{let h=Buffer.alloc(l);return await d.read(h,0,l,g),h};try{let l=await e.analyzeData(()=>t,s),m=JSON.parse(l).media.track.find(f=>f["@type"]==="General").Duration;return Math.round(parseFloat(m))}finally{await d.close()}}else if(p instanceof _u){let c=[];for await(let d of p)c.push(d);let u=Buffer.concat(c);t=u.length,s=async(d,l)=>u.slice(l,l+d)}else throw new Error("Tipo de entrada n\xE3o suportado");let r=await e.analyzeData(()=>t,s),a=JSON.parse(r).media.track.find(c=>c["@type"]==="General").Duration;return Math.round(parseFloat(a))}var cr,Ws,zo=E(()=>{tr();Vn();ws();B();Ns();gs();pe();Yt();z();te();Wn();Lo();ms();Jo();$o();Go();cr=new ke(new Oe(T,"groups").getEngine());Ws=class extends Ge{constructor(e,t,s,r,n,o,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.msgRetryCounterCache=new Qo;this.userDevicesCache=new Qo;this.endSession=!1;this.logBaileys=this.configService.get("LOG").BAILEYS;this.stateConnection={state:"close"};this.chatHandle={"chats.upsert":async e=>{let t=await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId},select:{remoteJid:!0}}),s=new Set(t.map(n=>n.remoteJid)),r=e.filter(n=>!s?.has(n.id)).map(n=>({remoteJid:n.id,instanceId:this.instanceId,name:n.name,unreadMessages:n.unreadCount!==void 0?n.unreadCount:0}));this.sendDataWebhook("chats.upsert",r),r.length>0&&this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.createMany({data:r,skipDuplicates:!0})},"chats.update":async e=>{let t=e.map(s=>({remoteJid:s.id,instanceId:this.instanceId}));this.sendDataWebhook("chats.update",t);for(let s of e)await this.prismaRepository.chat.updateMany({where:{instanceId:this.instanceId,remoteJid:s.id,name:s.name},data:{remoteJid:s.id}})},"chats.delete":async e=>{e.forEach(async t=>await this.prismaRepository.chat.deleteMany({where:{instanceId:this.instanceId,remoteJid:t}})),this.sendDataWebhook("chats.delete",[...e])}};this.contactHandle={"contacts.upsert":async e=>{try{let t=e.map(r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:null,instanceId:this.instanceId}));if(t.length>0){this.sendDataWebhook("contacts.upsert",t),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.createMany({data:t,skipDuplicates:!0});let r=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await it(r.map(n=>({remoteJid:n.remoteJid})))}this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importContacts&&t.length&&(this.chatwootService.addHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},t),re.importHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},this.localChatwoot));let s=await Promise.all(e.map(async r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:(await this.profilePicture(r.id)).profilePictureUrl,instanceId:this.instanceId})));if(s.length>0){let r=s.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await it(r.map(n=>({remoteJid:n.remoteJid}))),this.sendDataWebhook("contacts.update",s),await Promise.all(s.map(async n=>{let o=this.prismaRepository.contact.updateMany({where:{remoteJid:n.remoteJid,instanceId:this.instanceId},data:{profilePicUrl:n.profilePicUrl}});if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let a={instanceName:this.instance.name,instanceId:this.instance.id},c=await this.chatwootService.findContact(a,n.remoteJid.split("@")[0]);if(!c)return;this.chatwootService.updateContact(a,c.id,{name:n.pushName,avatar_url:n.profilePicUrl})}return o}))}}catch(t){console.error(t),this.logger.error(`Error: ${t.message}`)}},"contacts.update":async e=>{let t=[];for await(let n of e)t.push({remoteJid:n.id,pushName:n?.name??n?.verifiedName,profilePicUrl:(await this.profilePicture(n.id)).profilePictureUrl,instanceId:this.instanceId});this.sendDataWebhook("contacts.update",t);let s=t.map(n=>this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:n.remoteJid,instanceId:n.instanceId}},create:n,update:n}));await this.prismaRepository.$transaction(s);let r=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await it(r.map(n=>({remoteJid:n.remoteJid})))}};this.messageHandle={"messaging-history.set":async({messages:e,chats:t,contacts:s,isLatest:r,progress:n,syncType:o})=>{try{o===Ct.HistorySync.HistorySyncType.ON_DEMAND&&console.log("received on-demand history sync, messages=",e),console.log(`recv ${t.length} chats, ${s.length} contacts, ${e.length} msgs (is latest: ${r}, progress: ${n}%), type: ${o}`);let a={instanceName:this.instance.name},c=null;if(this.configService.get("CHATWOOT").ENABLED){let h=this.localChatwoot?.enabled?this.localChatwoot.daysLimitImportMessages:1e3,m=new Date;if(c=new Date(m.setDate(m.getDate()-h)).getTime()/1e3,!(Math.max(...e.map(S=>S.messageTimestamp))>=c))return}let u=[],d=new Set((await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).map(h=>h.remoteJid));for(let h of t)d?.has(h.id)||u.push({remoteJid:h.id,instanceId:this.instanceId,name:h.name});this.sendDataWebhook("chats.set",u),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.chat.createMany({data:u,skipDuplicates:!0});let l=[],g=new Set(re.getRepositoryMessagesCache(a)??(await this.prismaRepository.message.findMany({select:{key:!0},where:{instanceId:this.instanceId}})).map(h=>h.key.id));re.getRepositoryMessagesCache(a)===null&&re.setRepositoryMessagesCache(a,g);for(let h of e)!h.message||!h.key||!h.messageTimestamp||(rr.isLong(h?.messageTimestamp)&&(h.messageTimestamp=h.messageTimestamp?.toNumber()),!(this.configService.get("CHATWOOT").ENABLED&&h.messageTimestamp<=c)&&(g?.has(h.key.id)||l.push(this.prepareMessage(h))));this.sendDataWebhook("messages.set",[...l]),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.message.createMany({data:l,skipDuplicates:!0}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&l.length>0&&this.chatwootService.addHistoryMessages(a,l.filter(h=>!re.isIgnorePhoneNumber(h.key?.remoteJid))),await this.contactHandle["contacts.upsert"](s.filter(h=>!!h.notify||!!h.name).map(h=>({id:h.id,name:h.name??h.notify}))),s=void 0,e=void 0,t=void 0}catch(a){this.logger.error(a)}},"messages.upsert":async({messages:e,type:t,requestId:s},r)=>{try{for(let n of e){if(n.message?.conversation||n.message?.extendedTextMessage?.text){let g=n.message?.conversation||n.message?.extendedTextMessage?.text;if(g=="requestPlaceholder"&&!s){let h=await this.client.requestPlaceholderResend(n.key);console.log("requested placeholder resync, id=",h)}else s&&console.log("Message received from phone, id=",s,n);if(g=="onDemandHistSync"){let h=await this.client.fetchMessageHistory(50,n.key,n.messageTimestamp);console.log("requested on-demand sync, id=",h)}}if(n.message?.protocolMessage?.editedMessage||n.message?.editedMessage?.message){let g=n.message?.protocolMessage||n.message?.editedMessage?.message?.protocolMessage;g&&(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.edit",{instanceName:this.instance.name,instanceId:this.instance.id},g),await this.sendDataWebhook("messages.edited",g))}if(n.messageStubParameters&&n.messageStubParameters[0]==="Message absent from node"){this.logger.info(`Recovering message lost messageId: ${n.key.id}`),await this.baileysCache.set(n.key.id,{message:n,retry:0});continue}if((await this.baileysCache.get(n.key.id)||null)&&(this.logger.info("Recovered message lost"),await this.baileysCache.delete(n.key.id)),t!=="notify"&&t!=="append"||n.message?.protocolMessage||n.message?.pollUpdateMessage||!n?.message||(rr.isLong(n.messageTimestamp)&&(n.messageTimestamp=n.messageTimestamp?.toNumber()),r?.groupsIgnore&&n.key.remoteJid.includes("@g.us")))continue;if(await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:n.key.remoteJid}})){let g={remoteJid:n.key.remoteJid,instanceId:this.instanceId,name:n.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[g]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:g})}let c=this.prepareMessage(n),u=n?.message?.imageMessage||n?.message?.videoMessage||n?.message?.stickerMessage||n?.message?.documentMessage||n?.message?.documentWithCaptionMessage||n?.message?.ptvMessage||n?.message?.audioMessage;if(this.localSettings.readMessages&&n.key.id!=="status@broadcast"&&await this.client.readMessages([n.key]),this.localSettings.readStatus&&n.key.id==="status@broadcast"&&await this.client.readMessages([n.key]),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!n.key.id.includes("@broadcast")){let g=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instance.id},c);g?.id&&(c.chatwootMessageId=g.id,c.chatwootInboxId=g.inbox_id,c.chatwootConversationId=g.conversation_id)}if(this.configService.get("OPENAI").ENABLED&&n?.message?.audioMessage){let g=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});g&&g.openaiCredsId&&g.speechToText&&(c.message.speechToText=await this.openaiService.speechToText(g.OpenaiCreds,n,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let g=await this.prismaRepository.message.create({data:c});if(n.key.fromMe===!1?g.status===ne[3]?(this.logger.log(`Update not read messages ${n.key.remoteJid}`),await this.updateChatUnreadMessages(n.key.remoteJid)):g.status===ne[4]&&(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)):(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)),u&&this.configService.get("S3").ENABLE)try{let h=n,m=await this.getBase64FromMediaMessage({message:h},!0),{buffer:f,mediaType:b,fileName:S,size:w}=m,M=Us.getType(S).toString(),I=or(`${this.instance.id}`,n.key.remoteJid,b,S);await Et(I,f,w.fileLength?.low,{"Content-Type":M}),await this.prismaRepository.media.create({data:{messageId:g.id,instanceId:this.instanceId,type:b,fileName:I,mimetype:M}});let v=await tt(I);c.message.mediaUrl=v,await this.prismaRepository.message.update({where:{id:g.id},data:c})}catch(h){this.logger.error(["Error on upload file to minio",h?.message,h?.stack])}}if(this.localWebhook.enabled&&u&&this.localWebhook.webhookBase64){let g=await nr({key:n.key,message:n?.message},"buffer",{},{logger:vt({level:"error"}),reuploadRequest:this.client.updateMediaMessage});c.message.base64=g?g.toString("base64"):void 0}this.logger.log(c),this.sendDataWebhook("messages.upsert",c),await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName});let d=await this.prismaRepository.contact.findFirst({where:{remoteJid:n.key.remoteJid,instanceId:this.instanceId}}),l={remoteJid:n.key.remoteJid,pushName:n.key.fromMe||n.key.fromMe==null?"":n.pushName,profilePicUrl:(await this.profilePicture(n.key.remoteJid)).profilePictureUrl,instanceId:this.instanceId};if(l.remoteJid!=="status@broadcast"){if(d){this.sendDataWebhook("contacts.update",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},create:l,update:l});continue}this.sendDataWebhook("contacts.upsert",l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},update:l,create:l}),l.remoteJid.includes("@s.whatsapp")&&await it([{remoteJid:l.remoteJid}])}}}catch(n){this.logger.error(n)}},"messages.update":async(e,t)=>{this.logger.log(`Update messages ${JSON.stringify(e,void 0,2)}`);let s={};for await(let{key:r,update:n}of e)if(!(t?.groupsIgnore&&r.remoteJid?.includes("@g.us"))&&(ne[n.status]==="READ"&&r.fromMe&&this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.read",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r}),r.remoteJid!=="status@broadcast")){let o;if(n.pollUpdates){let d=await this.getMessage(r);d&&(o=fu({message:d,pollUpdates:n.pollUpdates}))}let a=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:r.id}}});if(!a)continue;if(n.message===null&&n.status===void 0){this.sendDataWebhook("messages.delete",r);let d={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:"DELETED",instanceId:this.instanceId};this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r});continue}else n.status!==void 0&&ne[n.status]!==a.status&&(!r.fromMe&&r.remoteJid&&(s[r.remoteJid]=!0,ne[n.status]===ne[4]&&(this.logger.log(`Update as read ${r.remoteJid} - ${a.messageTimestamp}`),this.updateMessagesReadedByTimestamp(r.remoteJid,a.messageTimestamp))),await this.prismaRepository.message.update({where:{id:a.id},data:{status:ne[n.status]}}));let c={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:ne[n.status],pollUpdates:o,instanceId:this.instanceId};if(this.sendDataWebhook("messages.update",c),this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:c}),await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:c.remoteJid}})){let d={remoteJid:c.remoteJid,instanceId:this.instanceId,name:c.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[d]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:d})}}await Promise.all(Object.keys(s).map(r=>this.updateChatUnreadMessages(r)))}};this.groupHandler={"groups.upsert":e=>{this.sendDataWebhook("groups.upsert",e)},"groups.update":e=>{this.sendDataWebhook("groups.update",e),e.forEach(t=>{Pe(t.id)&&this.updateGroupMetadataCache(t.id)})},"group-participants.update":e=>{this.sendDataWebhook("group-participants.update",e),this.updateGroupMetadataCache(e.id)}};this.labelHandle={"labels.edit":async e=>{let s=(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).find(n=>n.labelId===e.id);if(e.deleted&&s){await this.prismaRepository.label.delete({where:{labelId_instanceId:{instanceId:this.instanceId,labelId:e.id}}}),this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name});return}let r=e.name.replace(/[^\x20-\x7E]/g,"");if(!s||s.color!==`${e.color}`||s.name!==r){if(this.configService.get("DATABASE").SAVE_DATA.LABELS){let n={color:`${e.color}`,name:r,labelId:e.id,predefinedId:e.predefinedId,instanceId:this.instanceId};await this.prismaRepository.label.upsert({where:{labelId_instanceId:{instanceId:n.instanceId,labelId:n.labelId}},update:n,create:n})}this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name})}},"labels.association":async(e,t)=>{if(t.SAVE_DATA.CHATS){let r=(await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).find(n=>n.remoteJid===e.association.chatId);if(r){let o=[...Array.isArray(r.labels)?r.labels.map(a=>String(a)):[]];e.type==="remove"?o=o.filter(a=>a!==e.association.labelId):e.type==="add"&&(o=[...o,e.association.labelId]),await this.prismaRepository.chat.update({where:{id:r.id},data:{labels:o}})}}this.sendDataWebhook("labels.association",{instance:this.instance.name,type:e.type,chatId:e.association.chatId,labelId:e.association.labelId})}};this.mapType=new Map([["reply","quick_reply"],["copy","cta_copy"],["url","cta_url"],["call","cta_call"],["pix","payment_info"]]);this.mapKeyType=new Map([["phone","PHONE"],["email","EMAIL"],["cpf","CPF"],["cnpj","CNPJ"],["random","EVP"]]);this.getGroupMetadataCache=async e=>{if(!Pe(e))return null;let t=this.configService.get("CACHE");if(t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""||t?.LOCAL?.ENABLED){if(await cr?.has(e)){console.log(`Cache request for group: ${e}`);let s=await cr.get(e);return Date.now()-s.timestamp>36e5&&await this.updateGroupMetadataCache(e),s.data}return console.log(`Cache request for group: ${e} - not found`),await this.updateGroupMetadataCache(e)}return await this.findGroup({groupJid:e},"inner")};this.instance.qrcode={count:0},this.authStateProvider=new Ls(this.providerFiles)}get connectionStatus(){return this.stateConnection}async logoutInstance(){await this.client?.logout("Log out instance: "+this.instanceName),this.client?.ws?.close(),await this.prismaRepository.session.findFirst({where:{sessionId:this.instanceId}})&&await this.prismaRepository.session.delete({where:{sessionId:this.instanceId}})}async getProfileName(){let e=this.client.user?.name??this.client.user?.verifiedName;if(!e){let t=await this.prismaRepository.session.findUnique({where:{sessionId:this.instanceId}});if(t){let s=JSON.parse(JSON.stringify(t.creds),hu.reviver);e=s.me?.name||s.me?.verifiedName}}return e}async getProfileStatus(){return(await this.client.fetchStatus(this.instance.wuid))?.status}get profilePictureUrl(){return this.instance.profilePictureUrl}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async connectionUpdate({qr:e,connection:t,lastDisconnect:s}){if(e){if(this.instance.qrcode.count===this.configService.get("QRCODE").LIMIT)return this.sendDataWebhook("qrcode.updated",{message:"QR code limit reached, please login again",statusCode:Tt.badSession}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{message:"QR code limit reached, please login again",statusCode:Tt.badSession}),this.sendDataWebhook("connection.update",{instance:this.instance.name,state:"refused",statusReason:Tt.connectionClosed}),this.endSession=!0,this.eventEmitter.emit("no.connection",this.instance.name);this.instance.qrcode.count++;let n={margin:3,scale:4,errorCorrectionLevel:"H",color:{light:"#ffffff",dark:this.configService.get("QRCODE").COLOR}};this.phoneNumber?(await nt(1e3),this.instance.qrcode.pairingCode=await this.client.requestPairingCode(this.phoneNumber)):this.instance.qrcode.pairingCode=null,Pu.toDataURL(e,n,(o,a)=>{if(o){this.logger.error("Qrcode generate failed:"+o.toString());return}this.instance.qrcode.base64=a,this.instance.qrcode.code=e,this.sendDataWebhook("qrcode.updated",{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}})}),xu.generate(e,{small:!0},o=>this.logger.log(`
{ instance: ${this.instance.name} pairingCode: ${this.instance.qrcode.pairingCode}, qrcodeCount: ${this.instance.qrcode.count} }
`+o)),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"connecting"}})}if(t&&(this.stateConnection={state:t,statusReason:s?.error?.output?.statusCode??200},this.sendDataWebhook("connection.update",{instance:this.instance.name,...this.stateConnection})),t==="close"){let r=s?.error?.output?.statusCode;![Tt.loggedOut,Tt.forbidden,402,406].includes(r)?await this.connectToWhatsapp(this.phoneNumber):(this.sendDataWebhook("status.instance",{instance:this.instance.name,status:"closed",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"close",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"closed"}),this.eventEmitter.emit("logout.instance",this.instance.name,"inner"),this.client?.ws?.close(),this.client.end(new Error("Close connection")))}if(t==="open"){this.instance.wuid=this.client.user.id.replace(/:\d+/,"");try{let o=await this.profilePicture(this.instance.wuid);this.instance.profilePictureUrl=o.profilePictureUrl}catch{this.instance.profilePictureUrl=null}let r=this.instance.wuid.split("@")[0].padEnd(30," "),n=this.instance.name;this.logger.info(`
        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u2502    CONNECTED TO WHATSAPP     \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`.replace(/^ +/gm,"  ")),this.logger.info(`
        wuid: ${r}
        name: ${n}
      `),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{ownerJid:this.instance.wuid,profileName:await this.getProfileName(),profilePicUrl:this.instance.profilePictureUrl,connectionStatus:"open"}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&(this.chatwootService.eventWhatsapp("connection.update",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"open"}),this.syncChatwootLostMessages())}}async getMessage(e,t=!1){try{let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,key:{path:["id"],equals:e.id}}});if(t)return s[0];if(s[0].message?.pollCreationMessage){let r=s[0].message?.messageContextInfo?.messageSecret;if(typeof r=="string")return{messageContextInfo:{messageSecret:Buffer.from(r,"base64")},pollCreationMessage:s[0].message?.pollCreationMessage}}return s[0].message}catch{return{conversation:""}}}async defineAuthState(){let e=this.configService.get("DATABASE"),t=this.configService.get("CACHE");if(this.configService.get("PROVIDER")?.ENABLED)return await this.authStateProvider.authStateProvider(this.instance.id);if(t?.REDIS.ENABLED&&t?.REDIS.SAVE_INSTANCES)return this.logger.info("Redis enabled"),await qo(this.instance.id,this.cache);if(e.SAVE_DATA.INSTANCE)return await ir(this.instance.id,this.cache)}async createClient(e){this.instance.authState=await this.defineAuthState();let t=this.configService.get("CONFIG_SESSION_PHONE"),s={};if(e||this.phoneNumber)this.phoneNumber=e,this.logger.info(`Phone number: ${e}`);else{let c=[t.CLIENT,t.NAME,Du()];s={browser:c},this.logger.info(`Browser: ${c}`)}let r,n;t.VERSION?(r=t.VERSION.split("."),n=`Baileys version env: ${r}`):(r=(await yu()).version,n=`Baileys version: ${r}`),this.logger.info(n),this.logger.info(`Group Ignore: ${this.localSettings.groupsIgnore}`);let o;if(this.localProxy?.enabled)if(this.logger.info("Proxy enabled: "+this.localProxy?.host),this.localProxy?.host?.includes("proxyscrape"))try{let d=(await je.get(this.localProxy?.host)).data.split(`\r
`),l=Math.floor(Math.random()*Math.floor(d.length)),g="http://"+d[l];o={agent:Re(g),fetchAgent:Re(g)}}catch{this.localProxy.enabled=!1}else o={agent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password}),fetchAgent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})};let a={...o,version:r,logger:vt({level:this.logBaileys}),printQRInTerminal:!1,auth:{creds:this.instance.authState.state.creds,keys:Eu(this.instance.authState.state.keys,vt({level:"error"}))},msgRetryCounterCache:this.msgRetryCounterCache,generateHighQualityLinkPreview:!0,getMessage:async c=>await this.getMessage(c),...s,markOnlineOnConnect:this.localSettings.alwaysOnline,retryRequestDelayMs:350,maxMsgRetryCount:4,fireInitQueries:!0,connectTimeoutMs:3e4,keepAliveIntervalMs:3e4,qrTimeout:45e3,emitOwnEvents:!1,shouldIgnoreJid:c=>{let u=this.localSettings.groupsIgnore&&Pe(c),d=!this.localSettings.readStatus&&bu(c),l=Su(c);return u||d||l},syncFullHistory:this.localSettings.syncFullHistory,shouldSyncHistoryMessage:c=>this.historySyncNotification(c),cachedGroupMetadata:this.getGroupMetadataCache,userDevicesCache:this.userDevicesCache,transactionOpts:{maxCommitRetries:10,delayBetweenTriesMs:3e3},patchMessageBeforeSending(c){return c.deviceSentMessage?.message?.listMessage?.listType===Ct.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.deviceSentMessage.message.listMessage.listType=Ct.Message.ListMessage.ListType.SINGLE_SELECT),c.listMessage?.listType==Ct.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.listMessage.listType=Ct.Message.ListMessage.ListType.SINGLE_SELECT),c}};return this.endSession=!1,this.client=mu(a),this.eventHandler(),this.phoneNumber=e,this.client}async connectToWhatsapp(e){try{return this.loadChatwoot(),this.loadSettings(),this.loadWebhook(),this.loadProxy(),await this.createClient(e)}catch(t){throw this.logger.error(t),new U(t?.toString())}}async reloadConnection(){try{return await this.createClient(this.phoneNumber)}catch(e){throw this.logger.error(e),new U(e?.toString())}}eventHandler(){this.client.ev.process(async e=>{if(!this.endSession){let t=this.configService.get("DATABASE"),s=await this.findSettings();if(e.call){let r=e.call[0];if(s?.rejectCall&&r.status=="offer"&&this.client.rejectCall(r.id,r.from),s?.msgCall?.trim().length>0&&r.status=="offer"){let n=await this.client.sendMessage(r.from,{text:s.msgCall});this.client.ev.emit("messages.upsert",{messages:[n],type:"notify"})}this.sendDataWebhook("call",r)}if(e["connection.update"]&&this.connectionUpdate(e["connection.update"]),e["creds.update"]&&this.instance.authState.saveCreds(),e["messaging-history.set"]){let r=e["messaging-history.set"];this.messageHandle["messaging-history.set"](r)}if(e["messages.upsert"]){let r=e["messages.upsert"];this.messageHandle["messages.upsert"](r,s)}if(e["messages.update"]){let r=e["messages.update"];this.messageHandle["messages.update"](r,s)}if(e["message-receipt.update"]){let r=e["message-receipt.update"],n={};for(let o of r)typeof o.key.remoteJid=="string"&&typeof o.receipt.readTimestamp=="number"&&(n[o.key.remoteJid]=o.receipt.readTimestamp);await Promise.all(Object.keys(n).map(async o=>this.updateMessagesReadedByTimestamp(o,n[o])))}if(e["presence.update"]){let r=e["presence.update"];if(s?.groupsIgnore&&r.id.includes("@g.us"))return;this.sendDataWebhook("presence.update",r)}if(!s?.groupsIgnore){if(e["groups.upsert"]){let r=e["groups.upsert"];this.groupHandler["groups.upsert"](r)}if(e["groups.update"]){let r=e["groups.update"];this.groupHandler["groups.update"](r)}if(e["group-participants.update"]){let r=e["group-participants.update"];this.groupHandler["group-participants.update"](r)}}if(e["chats.upsert"]){let r=e["chats.upsert"];this.chatHandle["chats.upsert"](r)}if(e["chats.update"]){let r=e["chats.update"];this.chatHandle["chats.update"](r)}if(e["chats.delete"]){let r=e["chats.delete"];this.chatHandle["chats.delete"](r)}if(e["contacts.upsert"]){let r=e["contacts.upsert"];this.contactHandle["contacts.upsert"](r)}if(e["contacts.update"]){let r=e["contacts.update"];this.contactHandle["contacts.update"](r)}if(e["labels.association"]){let r=e["labels.association"];this.labelHandle["labels.association"](r,t);return}if(e["labels.edit"]){let r=e["labels.edit"];this.labelHandle["labels.edit"](r);return}}})}historySyncNotification(e){let t={instanceName:this.instance.name};return this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&this.isSyncNotificationFromUsedSyncType(e)&&(e.chunkOrder===1&&this.chatwootService.startImportHistoryMessages(t),e.progress===100&&setTimeout(()=>{this.chatwootService.importHistoryMessages(t)},1e4)),!0}isSyncNotificationFromUsedSyncType(e){return this.localSettings.syncFullHistory&&e?.syncType===2||!this.localSettings.syncFullHistory&&e?.syncType===3}async profilePicture(e){let t=this.createJid(e);try{let s=await this.client.profilePictureUrl(t,"image");return{wuid:t,profilePictureUrl:s}}catch{return{wuid:t,profilePictureUrl:null}}}async getStatus(e){let t=this.createJid(e);try{return{wuid:t,status:(await this.client.fetchStatus(t))?.status}}catch{return{wuid:t,status:null}}}async fetchProfile(e,t){let s=t?this.createJid(t):this.client?.user?.id,r=(await this.whatsappNumber({numbers:[s]}))?.shift();if(!r.exists)throw new y(r);try{if(t){let n=(await this.whatsappNumber({numbers:[s]}))?.shift(),o=await this.profilePicture(n?.jid),a=await this.getStatus(n?.jid),c=await this.fetchBusinessProfile(n?.jid);return{wuid:n?.jid||s,name:n?.name,numberExists:n?.exists,picture:o?.profilePictureUrl,status:a?.status,isBusiness:c.isBusiness,email:c?.email,description:c?.description,website:c?.website?.shift()}}else{let n=e?[e]:null,o=await k.instanceInfo(n),a=await this.fetchBusinessProfile(s);return{wuid:s,name:o?.profileName,numberExists:!0,picture:o?.profilePicUrl,status:o?.connectionStatus,isBusiness:a.isBusiness,email:a?.email,description:a?.description,website:a?.website?.shift()}}}catch{return{wuid:s,name:null,picture:null,status:null,os:null,isBusiness:!1}}}async offerCall({number:e,isVideo:t,callDuration:s}){let r=this.createJid(e);try{let n=await this.client.offerCall(r,t);return setTimeout(()=>this.client.terminateCall(n.id,n.to),s*1e3),n}catch(n){return n}}async sendMessage(e,t,s,r,n,o,a){e=e.toLowerCase();let c={quoted:n};if(Pe(e)&&(c.useCachedGroupMetadata=!0),a&&(c.ephemeralExpiration=a),o?c.messageId=o:c.messageId="3EB0"+Cu(18).toString("hex").toUpperCase(),t.viewOnceMessage){let u=Vo(e,t,{timestamp:new Date,userJid:this.instance.wuid,messageId:o,quoted:n}),d=await this.client.relayMessage(e,t,{messageId:o});u.key={id:d,remoteJid:e,participant:Ko(e)?e:void 0,fromMe:!0};for(let[l,g]of Object.entries(u))(!g||(Tu(g)&&g.length)===0)&&delete u[l];return u}if(!t.audio&&!t.poll&&!t.sticker&&!t.conversation&&e!=="status@broadcast"&&t.reactionMessage)return await this.client.sendMessage(e,{react:{text:t.reactionMessage.text,key:t.reactionMessage.key}},c);if(t.conversation)return await this.client.sendMessage(e,{text:t.conversation,mentions:s,linkPreview:r},c);if(!t.audio&&!t.poll&&!t.sticker&&e!="status@broadcast")return await this.client.sendMessage(e,{forward:{key:{remoteJid:this.instance.wuid,fromMe:!0},message:t},mentions:s},c);if(e==="status@broadcast"){let u;t.status.option.allContacts?u=(await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{not:{endsWith:"@g.us"}}}})).map(b=>b.remoteJid):u=t.status.option.statusJidList;let d=10,l=Array.from({length:Math.ceil(u.length/d)},(f,b)=>u.slice(b*d,b*d+d)),g=null,h,m=l.shift();return m&&(h=await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:m}),g=h.key.id),l.length===0||await Promise.allSettled(l.map(async f=>await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:f,messageId:g}))),h}return await this.client.sendMessage(e,t,c)}async sendMessageWithTyping(e,t,s,r=!1){let n=(await this.whatsappNumber({numbers:[e]}))?.shift();if(!n.exists&&!Pe(n.jid)&&!n.jid.includes("@broadcast"))throw new y(n);let o=n.jid.toLowerCase();this.logger.verbose(`Sending message to ${o}`);try{if(s?.delay)if(this.logger.verbose(`Typing for ${s.delay}ms to ${o}`),s.delay>2e4){let h=s.delay;for(;h>2e4;)await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await nt(2e4),await this.client.sendPresenceUpdate("paused",o),h-=2e4;h>0&&(await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await nt(h),await this.client.sendPresenceUpdate("paused",o))}else await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await nt(s.delay),await this.client.sendPresenceUpdate("paused",o);let a=s?.linkPreview!=!1?void 0:!1,c;if(s?.quoted){let h=s?.quoted,m=h?.message?h:await this.getMessage(h.key,!0);m&&(c=m)}let u,d;if(Pe(o)){let h;try{let m=this.configService.get("CACHE");!m.REDIS.ENABLED&&!m.LOCAL.ENABLED?h=await this.findGroup({groupJid:o},"inner"):h=await this.getGroupMetadataCache(o)}catch{throw new $("Group not found")}if(!h)throw new $("Group not found");s?.mentionsEveryOne?d=h.participants.map(m=>m.id):s.mentioned?.length&&(d=s.mentioned.map(m=>{let f=this.createJid(m);return Pe(f)?null:f})),u=await this.sendMessage(o,t,d,a,c,null,h?.ephemeralDuration)}else u=await this.sendMessage(o,t,d,a,c);rr.isLong(u?.messageTimestamp)&&(u.messageTimestamp=u.messageTimestamp?.toNumber());let l=this.prepareMessage(u),g=u?.message?.imageMessage||u?.message?.videoMessage||u?.message?.stickerMessage||u?.message?.ptvMessage||u?.message?.documentMessage||u?.message?.documentWithCaptionMessage||u?.message?.ptvMessage||u?.message?.audioMessage;if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("OPENAI").ENABLED&&l?.message?.audioMessage){let h=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});h&&h.openaiCredsId&&h.speechToText&&(l.message.speechToText=await this.openaiService.speechToText(h.OpenaiCreds,l,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let h=await this.prismaRepository.message.create({data:l});if(g&&this.configService.get("S3").ENABLE)try{let m=l,f=await this.getBase64FromMediaMessage({message:m},!0),{buffer:b,mediaType:S,fileName:w,size:M}=f,I=Us.getType(w).toString(),v=or(`${this.instance.id}`,l.key.remoteJid,`${l.key.id}`,S,w);await Et(v,b,M.fileLength?.low,{"Content-Type":I}),await this.prismaRepository.media.create({data:{messageId:h.id,instanceId:this.instanceId,type:S,fileName:v,mimetype:I}});let x=await tt(v);l.message.mediaUrl=x,await this.prismaRepository.message.update({where:{id:h.id},data:l})}catch(m){this.logger.error(["Error on upload file to minio",m?.message,m?.stack])}}if(this.localWebhook.enabled&&g&&this.localWebhook.webhookBase64){let h=await nr({key:l.key,message:l?.message},"buffer",{},{logger:vt({level:"error"}),reuploadRequest:this.client.updateMediaMessage});l.message.base64=h?h.toString("base64"):void 0}return this.logger.log(l),this.sendDataWebhook("send.message",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await Le.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:l.key.remoteJid,msg:l,pushName:l.pushName,isIntegration:r}),l}catch(a){throw this.logger.error(a),new y(a.toString())}}async sendPresence(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!Pe(s.jid)&&!s.jid.includes("@broadcast"))throw new y(s);let r=s.jid;if(e?.delay&&e?.delay>2e4){let n=e?.delay;for(;n>2e4;)await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await nt(2e4),await this.client.sendPresenceUpdate("paused",r),n-=2e4;n>0&&(await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await nt(n),await this.client.sendPresenceUpdate("paused",r))}else await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(e?.presence??"composing",r),await nt(e?.delay),await this.client.sendPresenceUpdate("paused",r);return{presence:e.presence}}catch(t){throw this.logger.error(t),new y(t.toString())}}async setPresence(e){try{return await this.client.sendPresenceUpdate(e.presence),{presence:e.presence}}catch(t){throw this.logger.error(t),new y(t.toString())}}async textMessage(e,t=!1){let s=e.text;if(!s||s.trim().length===0)throw new y("Text is required");return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async pollMessage(e){return await this.sendMessageWithTyping(e.number,{poll:{name:e.name,selectableCount:e.selectableCount,values:e.values}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async formatStatusMessage(e){if(!e.type)throw new y("Type is required");if(!e.content)throw new y("Content is required");if(e.allContacts){let t=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId}});if(!t.length)throw new y("Contacts not found");e.statusJidList=t.filter(s=>s.pushName).map(s=>s.remoteJid)}if(!e.statusJidList?.length&&!e.allContacts)throw new y("StatusJidList is required");if(e.type==="text"){if(!e.backgroundColor)throw new y("Background color is required");if(!e.font)throw new y("Font is required");return{content:{text:e.content},option:{backgroundColor:e.backgroundColor,font:e.font,statusJidList:e.statusJidList}}}if(e.type==="image")return{content:{image:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="video")return{content:{video:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="audio"){let t=await this.processAudioMp4(e.content);if(Buffer.isBuffer(t))return{content:{audio:t,ptt:!0,mimetype:"audio/ogg; codecs=opus"},option:{statusJidList:e.statusJidList}};throw new U(t)}throw new y("Type not found")}async statusMessage(e,t){let s={...e};t&&(s.content=t.buffer.toString("base64"));let r=await this.formatStatusMessage(s);return await this.sendMessageWithTyping("status@broadcast",{status:r})}async prepareMediaMessage(e){try{let t=e.mediatype==="ptv"?"video":e.mediatype,s=await Iu({[t]:Be(e.media)?{url:e.media}:Buffer.from(e.media,"base64")},{upload:this.client.waUploadToServer}),r=e.mediatype+"Message";if(e.mediatype==="document"&&!e.fileName){let a=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=a[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let n;if(e.mimetype)n=e.mimetype;else if(n=Us.getType(e.fileName),!n&&Be(e.media)){let o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),n=(await je.get(e.media,o)).headers["content-type"]}if(e.mediatype==="ptv"){if(s[r]=s[t+"Message"],n="video/mp4",!s[r])throw new Error("Failed to prepare video message");try{let o;if(Be(e.media))o=e.media;else{let c=Buffer.from(e.media,"base64");if(!c||c.length===0)throw new Error("Invalid media buffer");o=c}let a=await Nu(o);if(!a||a<=0)throw new Error("Invalid media duration");this.logger.verbose(`Video duration: ${a} seconds`),s[r].seconds=a}catch(o){throw this.logger.error("Error getting video duration:"),this.logger.error(o),new Error(`Failed to get video duration: ${o.message}`)}}return s[r].caption=e?.caption,s[r].mimetype=n,s[r].fileName=e.fileName,e.mediatype==="video"&&(s[r].jpegThumbnail=Uint8Array.from(Au(or(process.cwd(),"public","images","video-cover.png"))),s[r].gifPlayback=!1),Vo("",{[r]:{...s[r]}},{userJid:this.instance.wuid})}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async convertToWebP(e){try{let t;if(Fs(e)){let r=e.replace(/^data:image\/(jpeg|png|gif);base64,/,"");t=Buffer.from(r,"base64")}else{let r=new Date().getTime(),n=`${e}?timestamp=${r}`,o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})});let a=await je.get(n,o);t=Buffer.from(a.data,"binary")}return await Ou(t).webp().toBuffer()}catch(t){throw console.error("Erro ao converter a imagem para WebP:",t),t}}async mediaSticker(e,t){let s={...e};t&&(s.sticker=t.buffer.toString("base64"));let r=await this.convertToWebP(e.sticker),n=e.sticker.includes(".gif");return await this.sendMessageWithTyping(e.number,{sticker:r,gifPlayback:n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async mediaMessage(e,t,s=!1){let r={...e};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async ptvMessage(e,t,s=!1){let r={number:e.number,media:e.video,mediatype:"ptv",delay:e?.delay,quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned};t&&(r.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudioMp4(e){let t;if(Be(e))t=(await je.get(e,{responseType:"stream"})).data;else{let s=Buffer.from(e,"base64");t=new Js,t.end(s)}return new Promise((s,r)=>{let n=Mu(Ho.path,["-i","pipe:0","-vn","-ab","128k","-ar","44100","-f","mp4","-movflags","frag_keyframe+empty_moov","pipe:1"]),o=[],a="";n.stdout.on("data",c=>{o.push(c)}),n.stderr.on("data",c=>{a+=c.toString(),this.logger.verbose(`ffmpeg stderr: ${c}`)}),n.on("error",c=>{console.error("Error in ffmpeg process",c),r(c)}),n.on("close",c=>{if(c===0){this.logger.verbose("Audio converted to mp4");let u=Buffer.concat(o);s(u)}else this.logger.error(`ffmpeg exited with code ${c}`),this.logger.error(`ffmpeg stderr: ${a}`),r(new Error(`ffmpeg exited with code ${c}: ${a}`))}),t.pipe(n.stdin),t.on("error",c=>{console.error("Error in inputStream",c),n.stdin.end(),r(c)})})}async processAudio(e){if(process.env.API_AUDIO_CONVERTER){this.logger.verbose("Using audio converter API");let t=new vu;Be(e)?t.append("url",e):t.append("base64",e);let{data:s}=await je.post(process.env.API_AUDIO_CONVERTER,t,{headers:{...t.getHeaders(),apikey:process.env.API_AUDIO_CONVERTER_KEY}});if(!s.audio)throw new U("Failed to convert audio");return this.logger.verbose("Audio converted"),Buffer.from(s.audio,"base64")}else{let t;if(Be(e)){let s=new Date().getTime(),r=`${e}?timestamp=${s}`,n={responseType:"stream"};t=(await je.get(r,n)).data.pipe(new Js)}else{let s=Buffer.from(e,"base64");t=new Js,t.end(s)}return new Promise((s,r)=>{let n=new Js,o=[];n.on("data",a=>o.push(a)),n.on("end",()=>{let a=Buffer.concat(o);s(a)}),n.on("error",a=>{console.log("error",a),r(a)}),Yo.setFfmpegPath(Ho.path),Yo(t).outputFormat("ogg").noVideo().audioCodec("libopus").addOutputOptions("-avoid_negative_ts make_zero").audioChannels(1).pipe(n,{end:!0}).on("error",function(a){console.log("error",a),r(a)})})}}async audioWhatsapp(e,t,s=!1){let r={...e};if(t?.buffer)r.audio=t.buffer.toString("base64");else if(!Be(e.audio)&&!Fs(e.audio))throw console.error("Invalid file or audio source"),new y("File buffer, URL, or base64 audio is required");if(!e?.encoding&&e?.encoding!==!1&&(e.encoding=!0),e?.encoding){let n=await this.processAudio(r.audio);if(Buffer.isBuffer(n))return this.sendMessageWithTyping(e.number,{audio:n,ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s);throw new U("Failed to convert audio")}return await this.sendMessageWithTyping(e.number,{audio:Be(e.audio)?{url:e.audio}:Buffer.from(e.audio,"base64"),ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s)}generateRandomId(e=11){let t="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",s="";for(let r=0;r<e;r++)s+=t.charAt(Math.floor(Math.random()*t.length));return s}toJSONString(e){let t=r=>JSON.stringify(r);return{call:()=>t({display_text:e.displayText,phone_number:e.phoneNumber}),reply:()=>t({display_text:e.displayText,id:e.id}),copy:()=>t({display_text:e.displayText,copy_code:e.copyCode}),url:()=>t({display_text:e.displayText,url:e.url,merchant_url:e.url}),pix:()=>t({currency:e.currency,total_amount:{value:0,offset:100},reference_id:this.generateRandomId(),type:"physical-goods",order:{status:"pending",subtotal:{value:0,offset:100},order_type:"ORDER",items:[{name:"",amount:{value:0,offset:100},quantity:0,sale_amount:{value:0,offset:100}}]},payment_settings:[{type:"pix_static_code",pix_static_code:{merchant_name:e.name,key:e.key,key_type:this.mapKeyType.get(e.keyType)}}],share_payment_status:!1})}[e.type]?.()||""}async buttonMessage(e){if(e.buttons.length===0)throw new y("At least one button is required");let t=e.buttons.some(c=>c.type==="reply"),s=e.buttons.some(c=>c.type==="pix"),r=e.buttons.some(c=>c.type!=="reply"&&c.type!=="pix");if(t){if(e.buttons.length>3)throw new y("Maximum of 3 reply buttons allowed");if(r)throw new y("Reply buttons cannot be mixed with other button types")}if(s){if(e.buttons.length>1)throw new y("Only one PIX button is allowed");if(r)throw new y("PIX button cannot be mixed with other button types");let c={viewOnceMessage:{message:{interactiveMessage:{nativeFlowMessage:{buttons:[{name:this.mapType.get("pix"),buttonParamsJson:this.toJSONString(e.buttons[0])}],messageParamsJson:JSON.stringify({from:"api",templateId:ar()})}}}}};return await this.sendMessageWithTyping(e.number,c,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}let n=await(async()=>{if(e?.thumbnailUrl)return await this.prepareMediaMessage({mediatype:"image",media:e.thumbnailUrl})})(),o=e.buttons.map(c=>({name:this.mapType.get(c.type),buttonParamsJson:this.toJSONString(c)})),a={viewOnceMessage:{message:{interactiveMessage:{body:{text:(()=>{let c="*"+e.title+"*";return e?.description&&(c+=`

`,c+=e.description,c+=`
`),c})()},footer:{text:e?.footer},header:(()=>{if(n?.message?.imageMessage)return{hasMediaAttachment:!!n.message.imageMessage,imageMessage:n.message.imageMessage}})(),nativeFlowMessage:{buttons:o,messageParamsJson:JSON.stringify({from:"api",templateId:ar()})}}}}};return await this.sendMessageWithTyping(e.number,a,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){return await this.sendMessageWithTyping(e.number,{listMessage:{title:e.title,description:e.description,buttonText:e?.buttonText,footerText:e?.footerText,sections:e.sections,listType:2}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async contactMessage(e){let t={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contactMessage={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(e.number,{...t},{})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async whatsappNumber(e){let t={groups:[],broadcast:[],users:[]};e.numbers.forEach(l=>{let g=this.createJid(l);Pe(g)?t.groups.push({number:l,jid:g}):g==="status@broadcast"?t.broadcast.push({number:l,jid:g}):t.users.push({number:l,jid:g})});let s=[];s.push(...t.broadcast.map(({jid:l,number:g})=>new gt(l,!1,g)));let r=await Promise.all(t.groups.map(async({jid:l,number:g})=>{let h=await this.findGroup({groupJid:l},"inner");return h||new gt(l,!1,g),new gt(h.id,!!h?.id,g,h?.subject)}));s.push(...r);let n=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.users.map(({jid:l})=>l)}}}),o=t.users.map(({jid:l})=>l.replace("+","")),a=await Bo(o),c=o.filter(l=>!a.some(g=>g.jidOptions.includes(l))),u=await this.client.onWhatsApp(...c),d=await Promise.all(t.users.map(async l=>{let g=null,h=a.find(f=>f.jidOptions.includes(l.jid.replace("+","")));if(h)return{exists:!0,jid:h.remoteJid,name:n.find(f=>f.remoteJid===h.remoteJid)?.pushName,number:l.number};if(l.number.startsWith("55")){let f=l.number.slice(4,5)==="9"&&l.number.length===13?l.number:`${l.number.slice(0,4)}9${l.number.slice(4)}`,b=l.number.length===12?l.number:l.number.slice(0,4)+l.number.slice(5);g=u.find(S=>S.jid===`${f}@s.whatsapp.net`||S.jid===`${b}@s.whatsapp.net`)}if(!g&&(l.number.startsWith("52")||l.number.startsWith("54"))){let f="";l.number.startsWith("52")&&(f=""),l.number.startsWith("54")&&(f="9");let b=l.number.slice(2,3)===f&&l.number.length===13?l.number:`${l.number.slice(0,2)}${f}${l.number.slice(2)}`,S=l.number.length===12?l.number:l.number.slice(0,2)+l.number.slice(3);g=u.find(w=>w.jid===`${b}@s.whatsapp.net`||w.jid===`${S}@s.whatsapp.net`)}g||(g=u.find(f=>f.jid===l.jid));let m=g?.jid||l.jid;return{exists:!!g?.exists,jid:m,name:n.find(f=>f.remoteJid===m)?.pushName,number:l.number}}));return await it(d.filter(l=>l.exists).map(l=>({remoteJid:l.jid}))),s.push(...d),s}async markMessageAsRead(e){try{let t=[];return e.readMessages.forEach(s=>{(Pe(s.remoteJid)||Ko(s.remoteJid))&&t.push({remoteJid:s.remoteJid,fromMe:s.fromMe,id:s.id})}),await this.client.readMessages(t),{message:"Read messages",read:"success"}}catch(t){throw new U("Read messages fail",t.toString())}}async getLastMessage(e){let t={key:{remoteJid:e},instanceId:this.instance.id},s=await this.prismaRepository.message.findMany({where:t,orderBy:{messageTimestamp:"desc"},take:1});if(s.length===0)throw new $("Messages not found");let r=s.pop();for(let n of s)n.messageTimestamp>=r.messageTimestamp&&(r=n);return r}async archiveChat(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new $("Last message not found");return await this.client.chatModify({archive:e.archive,lastMessages:[t]},this.createJid(s)),{chatId:s,archived:!0}}catch(t){throw new U({archived:!1,message:["An error occurred while archiving the chat. Open a calling.",t.toString()]})}}async markChatUnread(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new $("Last message not found");return await this.client.chatModify({markRead:!1,lastMessages:[t]},this.createJid(s)),{chatId:s,markedChatUnread:!0}}catch(t){throw new U({markedChatUnread:!1,message:["An error occurred while marked unread the chat. Open a calling.",t.toString()]})}}async deleteMessage(e){try{let t=await this.client.sendMessage(e.remoteJid,{delete:e});if(t){let s=t.message?.protocolMessage?.key?.id;if(s){let r=T.get("DATABASE").DELETE_DATA.LOGICAL_MESSAGE_DELETE,n=await this.prismaRepository.message.findUnique({where:{id:s}});if(r){if(!n)return t;let o=typeof n?.key=="object"&&n.key!==null?n.key:{};n=await this.prismaRepository.message.update({where:{id:s},data:{key:{...o,deleted:!0}}})}else await this.prismaRepository.message.deleteMany({where:{id:s}});this.sendDataWebhook("messages.delete",{id:n.id,instanceId:n.instanceId,key:n.key,messageType:n.messageType,status:n.status,source:n.source,messageTimestamp:n.messageTimestamp,pushName:n.pushName,participant:n.participant,message:n.message})}}return t}catch(t){throw new U("Error while deleting message for everyone",t?.toString())}}async getBase64FromMediaMessage(e,t=!1){try{let s=e?.message,r=e?.convertToMp4??!1,n=s?.message?s:await this.getMessage(s.key,!0);if(!n)throw"Message not found";for(let g of eo)n.message[g]&&(n.message=n.message[g].message);let o,a;for(let g of Zr)if(o=n.message[g],o){a=g;break}if(!o)throw"The message is not of the media type";typeof o.mediaKey=="object"&&(n.message=JSON.parse(JSON.stringify(n.message)));let c=await nr({key:n?.key,message:n?.message},"buffer",{},{logger:vt({level:"error"}),reuploadRequest:this.client.updateMediaMessage}),u=jo(n.message),d=Us.getExtension(o?.mimetype),l=o?.fileName||`${n.key.id}.${d}`||`${ar()}.${d}`;if(r&&u==="audioMessage")try{let g=await this.processAudioMp4(c.toString("base64"));if(Buffer.isBuffer(g))return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:"audio/mp4",base64:g.toString("base64"),buffer:t?g:null}}catch(g){throw this.logger.error("Error converting audio to mp4:"),this.logger.error(g),new y("Failed to convert audio to MP4")}return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:o.mimetype,base64:c.toString("base64"),buffer:t?c:null}}catch(s){throw this.logger.error("Error processing media message:"),this.logger.error(s),new y(s.toString())}}async fetchPrivacySettings(){let e=await this.client.fetchPrivacySettings();return{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}async updatePrivacySettings(e){try{return await this.client.updateReadReceiptsPrivacy(e.readreceipts),await this.client.updateProfilePicturePrivacy(e.profile),await this.client.updateStatusPrivacy(e.status),await this.client.updateOnlinePrivacy(e.online),await this.client.updateLastSeenPrivacy(e.last),await this.client.updateGroupsAddPrivacy(e.groupadd),this.reloadConnection(),{update:"success",data:{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}}catch(t){throw new U("Error updating privacy settings",t.toString())}}async fetchBusinessProfile(e){try{let t=e?this.createJid(e):this.instance.wuid,s=await this.client.getBusinessProfile(t);return s?{isBusiness:!0,...s}:{isBusiness:!1,message:"Not is business profile",...(await this.whatsappNumber({numbers:[t]}))?.shift()}}catch(t){throw new U("Error updating profile name",t.toString())}}async updateProfileName(e){try{return await this.client.updateProfileName(e),{update:"success"}}catch(t){throw new U("Error updating profile name",t.toString())}}async updateProfileStatus(e){try{return await this.client.updateProfileStatus(e),{update:"success"}}catch(t){throw new U("Error updating profile status",t.toString())}}async updateProfilePicture(e){try{let t;if(Be(e)){let s=new Date().getTime(),r=`${e}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await je.get(r,n)).data}else if(Fs(e))t=Buffer.from(e,"base64");else throw new y('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(this.instance.wuid,t),this.reloadConnection(),{update:"success"}}catch(t){throw new U("Error updating profile picture",t.toString())}}async removeProfilePicture(){try{return await this.client.removeProfilePicture(this.instance.wuid),this.reloadConnection(),{update:"success"}}catch(e){throw new U("Error removing profile picture",e.toString())}}async blockUser(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!Pe(s.jid)&&!s.jid.includes("@broadcast"))throw new y(s);let r=s.jid;return await this.client.updateBlockStatus(r,e.status),{block:"success"}}catch(t){throw new U("Error blocking user",t.toString())}}async formatUpdateMessage(e){try{let t=await this.getMessage(e.key,!0);return t?.messageType==="conversation"||t?.messageType==="extendedTextMessage"?{text:e.text}:t?.messageType==="imageMessage"?{image:t?.message?.imageMessage,caption:e.text}:t?.messageType==="videoMessage"?{video:t?.message?.videoMessage,caption:e.text}:null}catch(t){throw this.logger.error(t),new y(t.toString())}}async updateMessage(e){let t=this.createJid(e.number),s=await this.formatUpdateMessage(e);if(!s)throw this.logger.error("Message not compatible"),new y("Message not compatible");try{return await this.client.sendMessage(t,{...s,edit:e.key})}catch(r){throw this.logger.error(r),new y(r.toString())}}async fetchLabels(){return(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).map(t=>({color:t.color,name:t.name,id:t.labelId,predefinedId:t.predefinedId}))}async handleLabel(e){let t=await this.whatsappNumber({numbers:[e.number]});if(t.length===0)throw new $("Number not found");let s=t[0];if(!s.exists)throw new $("Number is not on WhatsApp");try{if(e.action==="add")return await this.client.addChatLabel(s.jid,e.labelId),{numberJid:s.jid,labelId:e.labelId,add:!0};if(e.action==="remove")return await this.client.removeChatLabel(s.jid,e.labelId),{numberJid:s.jid,labelId:e.labelId,remove:!0}}catch(r){throw new y(`Unable to ${e.action} label to chat`,r.toString())}}async updateGroupMetadataCache(e){try{let t=await this.client.groupMetadata(e),s=this.configService.get("CACHE");return(s?.REDIS?.ENABLED&&s?.REDIS?.URI!==""||s?.LOCAL?.ENABLED)&&(this.logger.verbose(`Updating cache for group: ${e}`),await cr.set(e,{timestamp:Date.now(),data:t})),t}catch(t){return this.logger.error(t),null}}async createGroup(e){try{let t=(await this.whatsappNumber({numbers:e.participants})).filter(n=>n.exists).map(n=>n.jid),{id:s}=await this.client.groupCreate(e.subject,t);return e?.description&&await this.client.groupUpdateDescription(s,e.description),e?.promoteParticipants&&await this.updateGParticipant({groupJid:s,action:"promote",participants:t}),await this.client.groupMetadata(s)}catch(t){throw this.logger.error(t),new U("Error creating group",t.toString())}}async updateGroupPicture(e){try{let t;if(Be(e.image)){let s=new Date().getTime(),r=`${e.image}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Re({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await je.get(r,n)).data}else if(Fs(e.image))t=Buffer.from(e.image,"base64");else throw new y('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(e.groupJid,t),{update:"success"}}catch(t){throw new U("Error update group picture",t.toString())}}async updateGroupSubject(e){try{return await this.client.groupUpdateSubject(e.groupJid,e.subject),{update:"success"}}catch(t){throw new U("Error updating group subject",t.toString())}}async updateGroupDescription(e){try{return await this.client.groupUpdateDescription(e.groupJid,e.description),{update:"success"}}catch(t){throw new U("Error updating group description",t.toString())}}async findGroup(e,t="out"){try{let s=await this.client.groupMetadata(e.groupJid);if(!s)return this.logger.error("Group not found"),null;let r=await this.profilePicture(s.id);return{id:s.id,subject:s.subject,subjectOwner:s.subjectOwner,subjectTime:s.subjectTime,pictureUrl:r.profilePictureUrl,size:s.participants.length,creation:s.creation,owner:s.owner,desc:s.desc,descId:s.descId,restrict:s.restrict,announce:s.announce,participants:s.participants,isCommunity:s.isCommunity,isCommunityAnnounce:s.isCommunityAnnounce,linkedParent:s.linkedParent}}catch(s){if(t==="inner")return;throw new $("Error fetching group",s.toString())}}async fetchAllGroups(e){let t=Object.values(await this?.client?.groupFetchAllParticipating()),s=[];for(let r of t){let n=await this.profilePicture(r.id),o={id:r.id,subject:r.subject,subjectOwner:r.subjectOwner,subjectTime:r.subjectTime,pictureUrl:n?.profilePictureUrl,size:r.participants.length,creation:r.creation,owner:r.owner,desc:r.desc,descId:r.descId,restrict:r.restrict,announce:r.announce,isCommunity:r.isCommunity,isCommunityAnnounce:r.isCommunityAnnounce,linkedParent:r.linkedParent};e.getParticipants=="true"&&(o.participants=r.participants),s=[...s,o]}return s}async inviteCode(e){try{let t=await this.client.groupInviteCode(e.groupJid);return{inviteUrl:`https://chat.whatsapp.com/${t}`,inviteCode:t}}catch(t){throw new $("No invite code",t.toString())}}async inviteInfo(e){try{return await this.client.groupGetInviteInfo(e.inviteCode)}catch{throw new $("No invite info",e.inviteCode)}}async sendInvite(e){try{let s=(await this.inviteCode({groupJid:e.groupJid})).inviteUrl,r=e.numbers.map(c=>this.createJid(c)),a={conversation:`${e.description??""}

${s}`};for await(let c of r)await this.sendMessageWithTyping(c,a);return{send:!0,inviteUrl:s}}catch{throw new $("No send invite")}}async acceptInviteCode(e){try{return{accepted:!0,groupJid:await this.client.groupAcceptInvite(e.inviteCode)}}catch(t){throw new $("Accept invite error",t.toString())}}async revokeInviteCode(e){try{return{revoked:!0,inviteCode:await this.client.groupRevokeInvite(e.groupJid)}}catch(t){throw new $("Revoke error",t.toString())}}async findParticipants(e){try{let t=(await this.client.groupMetadata(e.groupJid)).participants,s=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.map(o=>o.id)}}}),r=t.map(o=>{let a=s.find(c=>c.remoteJid===o.id);return{...o,name:o.name??a?.pushName,imgUrl:o.imgUrl??a?.profilePicUrl}}),n=r.filter(o=>o.id.includes("@s.whatsapp"));return n&&await it(n.map(o=>({remoteJid:o.id}))),{participants:r}}catch(t){throw console.error(t),new $("No participants",t.toString())}}async updateGParticipant(e){try{let t=e.participants.map(r=>this.createJid(r));return{updateParticipants:await this.client.groupParticipantsUpdate(e.groupJid,t,e.action)}}catch(t){throw new y("Error updating participants",t.toString())}}async updateGSetting(e){try{return{updateSetting:await this.client.groupSettingUpdate(e.groupJid,e.action)}}catch(t){throw new y("Error updating setting",t.toString())}}async toggleEphemeral(e){try{return await this.client.groupToggleEphemeral(e.groupJid,e.expiration),{success:!0}}catch(t){throw new y("Error updating setting",t.toString())}}async leaveGroup(e){try{return await this.client.groupLeave(e.groupJid),{groupJid:e.groupJid,leave:!0}}catch(t){throw new y("Unable to leave the group",t.toString())}}async templateMessage(){throw new Error("Method not available in the Baileys service")}prepareMessage(e){let t=jo(e.message),s=e?.message[t],r={key:e.key,pushName:e.pushName,status:ne[e.status],message:{...e.message},contextInfo:s?.contextInfo,messageType:t||"unknown",messageTimestamp:e.messageTimestamp,instanceId:this.instanceId,source:wu(e.key.id)};return!r.status&&e.key.fromMe===!1&&(r.status=ne[3]),r.message.extendedTextMessage&&(r.messageType="conversation",r.message.conversation=r.message.extendedTextMessage.text,delete r.message.extendedTextMessage),r.message.documentWithCaptionMessage&&(r.messageType="documentMessage",r.message.documentMessage=r.message.documentWithCaptionMessage.message.documentMessage,delete r.message.documentWithCaptionMessage),r}async syncChatwootLostMessages(){if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let e=await this.findChatwoot(),t=r=>this.prepareMessage(r);this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t),Ru.schedule("0,30 * * * *",async()=>{this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t)}).start()}}async updateMessagesReadedByTimestamp(e,t){if(t==null)return 0;let s=await this.prismaRepository.message.updateMany({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{messageTimestamp:{lte:t}},{OR:[{status:null},{status:ne[3]}]}]},data:{status:ne[4]}});return s?(s.count>0&&this.updateChatUnreadMessages(e),s.count):0}async updateChatUnreadMessages(e){let[t,s]=await Promise.all([this.prismaRepository.chat.findFirst({where:{remoteJid:e}}),this.prismaRepository.message.count({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{status:{equals:ne[3]}}]}})]);return t&&t.unreadMessages!==s&&await this.prismaRepository.chat.update({where:{id:t.id},data:{unreadMessages:s}}),s}}});var Ke,$s=E(()=>{pe();te();Ro();_o();zo();Ke=class{constructor(i,e){this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}init(i,e){if(!i.token&&i.integration===D.WHATSAPP_BUSINESS)throw new y("token is required");return i.integration===D.WHATSAPP_BUSINESS?new Ss(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):i.integration===D.EVOLUTION?new ys(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):i.integration===D.WHATSAPP_BAILEYS?new Ws(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):null}}});var qs,Xo=E(()=>{_();$s();qs=class extends Ke{constructor(e,t){super(e,t);this.logger=new C("EvolutionController")}async receiveWebhook(e){let t=e.numberId;if(!t){this.logger.error("WebhookService -> receiveWebhookEvolution -> numberId not found");return}let s=await this.prismaRepository.instance.findFirst({where:{number:t}});if(!s){this.logger.error("WebhookService -> receiveWebhook -> instance not found");return}return await this.waMonitor.waInstances[s.name].connectToWhatsapp(e),{status:"success"}}}});import ku from"axios";var Gs,Zo=E(()=>{_();$s();Gs=class extends Ke{constructor(e,t){super(e,t);this.logger=new C("MetaController")}async receiveWebhook(e){if(e.object==="whatsapp_business_account"){if(e.entry[0]?.changes[0]?.field==="message_template_status_update"){let t=await this.prismaRepository.template.findFirst({where:{templateId:`${e.entry[0].changes[0].value.message_template_id}`}});if(!t){console.log("template not found");return}let{webhookUrl:s}=t;await ku.post(s,e.entry[0].changes[0].value,{headers:{"Content-Type":"application/json"}});return}e.entry?.forEach(async t=>{let s=t.changes[0].value.metadata.phone_number_id;if(!s)return this.logger.error("WebhookService -> receiveWebhookMeta -> numberId not found"),{status:"success"};let r=await this.prismaRepository.instance.findFirst({where:{number:s}});return r?(await this.waMonitor.waInstances[r.name].connectToWhatsapp(e),{status:"success"}):(this.logger.error("WebhookService -> receiveWebhookMeta -> instance not found"),{status:"success"})})}return{status:"success"}}}});function ea(p){return p.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}function ta(p,i){let e=i.split(" ").reduce((s,r)=>{let[n,...o]=r.split(":"),a=o.join(":");return s[n]||(s[n]=[]),s[n].push(a),s},{}),t=ea(p);return Object.entries(e).every(([s,r])=>r.some(n=>n.split(",").every(a=>{let c=ea(a);switch(s.toLowerCase()){case"contains":return t.includes(c);case"notcontains":return!t.includes(c);case"startswith":return t.startsWith(c);case"endswith":return t.endsWith(c);case"exact":return t===c;default:return!1}})))}var sa=E(()=>{});var ia,na=E(()=>{sa();ia=async(p,i,e,t)=>{let s=await p.findFirst({where:{enabled:!0,triggerType:"all",instanceId:t}});if(s)return s;let r=await p.findMany({where:{enabled:!0,triggerType:"advanced",instanceId:t}});for(let m of r)if(ta(e,m.triggerValue))return m;let n=await p.findFirst({where:{enabled:!0,triggerType:"keyword",triggerOperator:"equals",triggerValue:e,instanceId:t}});if(n)return n;let o=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"regex",instanceId:t}}),a=null;for(let m of o)if(new RegExp(m.triggerValue).test(e)){a=m;break}if(a)return a;let c=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"startsWith",instanceId:t}}),u=null;for(let m of c)if(e.startsWith(m.triggerValue)){u=m;break}if(u)return u;let d=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"endsWith",instanceId:t}}),l=null;for(let m of d)if(e.endsWith(m.triggerValue)){l=m;break}if(l)return l;let g=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"contains",instanceId:t}}),h=null;for(let m of g)if(e.includes(m.triggerValue)){h=m;break}return h||null}});var ge,rt=E(()=>{B();_();na();ge=class{constructor(i,e){this.logger=new C("ChatbotController");this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}async emit({instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:r=!1}){let n={instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:r};await we.emit(n),await me.emit(n),await oe.emit(n),await fe.emit(n),await be.emit(n)}processDebounce(i,e,t,s,r){i[t]?(i[t].message+=`
${e}`,this.logger.log("message debounced: "+i[t].message),clearTimeout(i[t].timeoutId)):i[t]={message:e,timeoutId:null},i[t].timeoutId=setTimeout(()=>{let n=i[t].message;this.logger.log("Debounce complete. Processing message: "+n),delete i[t],r(n)},s*1e3)}checkIgnoreJids(i,e){if(i&&i.length>0){let t=!1,s=!1;return i.includes("@g.us")&&(t=!0),i.includes("@s.whatsapp.net")&&(s=!0),t&&e.endsWith("@g.us")?(this.logger.warn("Ignoring message from group: "+e),!0):s&&e.endsWith("@s.whatsapp.net")?(this.logger.warn("Ignoring message from contact: "+e),!0):i.includes(e)?(this.logger.warn("Ignoring message from jid: "+e),!0):!1}return!1}async getSession(i,e){let t=await this.prismaRepository.integrationSession.findFirst({where:{remoteJid:i,instanceId:e.instanceId},orderBy:{createdAt:"desc"}});if(t)if(t.status!=="closed"&&!t.botId){this.logger.warn("Session is already opened in another integration");return}else t.botId||(t=null);return t}async findBotTrigger(i,e,t,s,r){let n;if(r)n=await i.findFirst({where:{id:r.botId}});else if(n=await ia(i,e,t,s.instanceId),!n)return;return n}}});import{isURL as Bu}from"class-validator";var Hs,ra=E(()=>{ps();B();Ns();Yt();te();Hs=class{constructor(i,e,t){this.chatwootService=i;this.configService=e;this.prismaRepository=t}async createChatwoot(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");if(e?.enabled){if(!Bu(e.url,{require_tld:!1}))throw new y("url is not valid");if(!e.accountId)throw new y("accountId is required");if(!e.token)throw new y("token is required");if(e.signMsg!==!0&&e.signMsg!==!1)throw new y("signMsg is required");e.signMsg===!1&&(e.signDelimiter=null)}(!e.nameInbox||e.nameInbox==="")&&(e.nameInbox=i.instanceName);let t=await this.chatwootService.create(i,e),s=this.configService.get("SERVER").URL;return{...t,webhook_url:`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async findChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");let e=await this.chatwootService.find(i),t=this.configService.get("SERVER").URL;return Object.keys(e||{}).length===0?{enabled:!1,url:"",accountId:"",token:"",signMsg:!1,nameInbox:"",webhook_url:""}:{...e,webhook_url:`${t}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async receiveWebhook(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new y("Chatwoot is disabled");let t=new ke(new Oe(this.configService,Ne.name).getEngine());return new Ne(k,this.configService,this.prismaRepository,t).receiveWebhook(i,e)}}});var Vs,oa=E(()=>{z();_();te();Ze();rt();Vs=class extends ge{constructor(e,t,s){super(t,s);this.difyService=e;this.logger=new C("DifyController");this.integrationEnabled=T.get("DIFY").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.dify,this.settingsRepository=this.prismaRepository.difySetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating dify")}}async findBot(e){if(!this.integrationEnabled)throw new y("Dify is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Dify is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Dify not found");if(n.instanceId!==r)throw new Error("Dify not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Dify already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating dify")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting dify bot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,difyIdFallback:o.difyIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,difyIdFallback:n.difyIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,difyIdFallback:s.difyIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,difyIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"dify"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=Ee(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let I=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(I?.difyIdFallback)a=await this.botRepository.findFirst({where:{id:I.difyIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let M=s.key;if(h&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async I=>{await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},I,s?.pushName)}):await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}}});var js,aa=E(()=>{_();Ze();rt();js=class extends ge{constructor(e,t,s){super(t,s);this.evolutionBotService=e;this.logger=new C("EvolutionBotController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.evolutionBot,this.settingsRepository=this.prismaRepository.evolutionBotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(e,t,s){let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,botIdFallback:o.botIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,botIdFallback:n.botIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,botIdFallback:s.botIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,botIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"evolution"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=Ee(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let I=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(I?.botIdFallback)a=await this.botRepository.findFirst({where:{id:I.botIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let M=s.key;if(h&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async I=>{await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},I,s?.pushName)}):await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}}});import Lu from"axios";var Ks,ca=E(()=>{pe();_();qe();Ks=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new C("EvolutionBotService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"evolution"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,r,n){let o={inputs:{sessionId:e.id,remoteJid:s,pushName:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:n,conversation_id:e.sessionId===s?void 0:e.sessionId,user:s};if(this.isImageMessage(n)){let d=n.split("|");o.files=[{type:"image",url:d[1].split("?")[0]}],o.query=d[2]||n}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(s),await i.client.sendPresenceUpdate("composing",s));let a={"Content-Type":"application/json"};t.apiKey&&(a={...a,Authorization:`Bearer ${t.apiKey}`});let c=await Lu.post(t.apiUrl,o,{headers:a});return i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",s),c?.data?.message}async sendMessageWhatsApp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":M.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),M=r.slice(a,c.index);if(M&&(o+=M),w){let I=s.splitMessages??!1,v=s.timePerChar??0,x=1e3,N=2e4;if(o.trim())if(I){let O=o.trim().split(`

`);for(let F=0;F<O.length;F++){let G=O[F],j=Math.min(Math.max(G.length*v,x),N);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(K=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:G},!1),K()},j)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";q("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,r,t,e,o,n);c&&await this.sendMessageWhatsApp(i,e,r,s,c)}async processBot(i,e,t,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),q("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,s,t,e,o,n);a&&await this.sendMessageWhatsApp(i,e,s,r,a)}}});var Ys,pa=E(()=>{_();Ze();rt();Ys=class extends ge{constructor(e,t,s){super(t,s);this.flowiseService=e;this.logger=new C("FlowiseController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.flowise,this.settingsRepository=this.prismaRepository.flowiseSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=o.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=o.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=o.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=o.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=o.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=o.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=o.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=o.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=o.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=o?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=o?.timePerChar??0),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a Flowise with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Flowise already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(e,t,s){let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,flowiseIdFallback:o.flowiseIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,flowiseIdFallback:n.flowiseIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,flowiseIdFallback:s.flowiseIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,flowiseIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...e,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"flowise"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,t))return;let n=await this.getSession(t,e),o=Ee(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let I=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(I?.flowiseIdFallback)a=await this.botRepository.findFirst({where:{id:I.flowiseIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,h=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),h==null&&(h=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let M=s.key;if(h&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,t,f,async I=>{await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},I,s?.pushName)}):await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:h,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}}});import Fu from"axios";var Qs,la=E(()=>{pe();_();qe();Qs=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new C("FlowiseService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"flowise"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,r){let n={question:r,overrideConfig:{sessionId:t,vars:{remoteJid:t,pushName:s,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY}}};if(this.isImageMessage(r)){let d=r.split("|");n.uploads=[{data:d[1].split("?")[0],type:"url",name:"Flowise.png",mime:"image/png"}],n.question=d[2]||r}i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let o={"Content-Type":"application/json"};e.apiKey&&(o={...o,Authorization:`Bearer ${e.apiKey}`});let a=e.apiUrl;if(!a)return null;let c=await Fu.post(a,n,{headers:o});return i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),c?.data?.text}async sendMessageWhatsApp(i,e,t,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":M.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),M=r.slice(a,c.index);if(M&&(o+=M),w){let I=s.splitMessages??!1,v=s.timePerChar??0,x=1e3,N=2e4;if(o.trim())if(I){let O=o.trim().split(`

`);for(let F=0;F<O.length;F++){let G=O[F],j=Math.min(Math.max(G.length*v,x),N);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(K=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:G},!1),K()},j)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,h=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),h);i.integration===D.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===D.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";q("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:e,pushName:o,botId:t.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,t,e,o,n);await this.sendMessageWhatsApp(i,e,r,s,c)}async processBot(i,e,t,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,r,s,n,o);return}}if(!s){await this.initNewSession(i,e,t,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),q("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,t,e,o,n);await this.sendMessageWhatsApp(i,e,s,r,a)}}});import Uu from"openai";var zs,ua=E(()=>{z();_();te();Ze();rt();zs=class extends ge{constructor(e,t,s){super(t,s);this.openaiService=e;this.logger=new C("OpenaiController");this.integrationEnabled=T.get("OPENAI").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.openaiBot,this.settingsRepository=this.prismaRepository.openaiSetting,this.sessionRepository=this.prismaRepository.integrationSession,this.credsRepository=this.prismaRepository.openaiCreds}async createOpenaiCreds(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.apiKey)throw new Error("API Key is required");if(!t.name)throw new Error("Name is required");try{return await this.credsRepository.create({data:{name:t.name,apiKey:t.apiKey,instanceId:s}})}catch(r){throw this.logger.error(r),new Error("Error creating openai creds")}}async findOpenaiCreds(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);return await this.credsRepository.findMany({where:{instanceId:t},include:{OpenaiAssistant:!0}})}async deleteCreds(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.credsRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai Creds not found");if(r.instanceId!==s)throw new Error("Openai Creds not found");try{return await this.credsRepository.delete({where:{id:t}}),{openaiCreds:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai creds")}}async getModels(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id);if(!t)throw new Error("Instance not found");let s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{OpenaiCreds:!0}});if(!s)throw new Error("Settings not found");let{apiKey:r}=s.OpenaiCreds;try{return this.client=new Uu({apiKey:r}),(await this.client.models.list())?.body?.data}catch(n){throw this.logger.error(n),new Error("Error fetching models")}}async createBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id);if(!t.openaiCredsId||!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let a=await this.settingsRepository.findFirst({where:{instanceId:s}});if((t.expire===void 0||t.expire===null)&&(t.expire=a.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=a.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=a.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=a.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=a.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=a.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=a.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=a.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=a.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=a?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=a?.timePerChar??0),!t.openaiCredsId)throw new Error("Openai Creds Id is required");a||await this.settings(e,{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a openai with an "All" trigger, you cannot have more bots while it is active');let n={instanceId:s};if(t.botType==="assistant"){if(!t.assistantId)throw new Error("Assistant ID is required");n={...n,assistantId:t.assistantId,botType:t.botType}}else if(t.botType==="chatCompletion"){if(!t.model)throw new Error("Model is required");if(!t.maxTokens)throw new Error("Max tokens is required");n={...n,model:t.model,maxTokens:t.maxTokens,botType:t.botType}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:n}))throw new Error("Openai Bot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,openaiCredsId:t.openaiCredsId,botType:t.botType,assistantId:t.assistantId,functionUrl:t.functionUrl,model:t.model,systemMessages:t.systemMessages,assistantMessages:t.assistantMessages,userMessages:t.userMessages,maxTokens:t.maxTokens,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error creating openai bot")}}async findBot(e){if(!this.integrationEnabled)throw new y("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai Bot not found");if(r.instanceId!==s)throw new Error("Openai Bot not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Openai is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(c=>c.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Openai Bot not found");if(n.instanceId!==r)throw new Error("Openai Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a openai bot with an "All" trigger, you cannot have more bots while it is active');let o={id:{not:t},instanceId:r};if(s.botType==="assistant"){if(!s.assistantId)throw new Error("Assistant ID is required");o={...o,assistantId:s.assistantId}}else if(s.botType==="chatCompletion"){if(!s.model)throw new Error("Model is required");if(!s.maxTokens)throw new Error("Max tokens is required");o={...o,model:s.model,maxTokens:s.maxTokens}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:o}))throw new Error("Openai Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,openaiCredsId:s.openaiCredsId,botType:s.botType,assistantId:s.assistantId,functionUrl:s.functionUrl,model:s.model,systemMessages:s.systemMessages,assistantMessages:s.assistantMessages,userMessages:s.userMessages,maxTokens:s.maxTokens,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(c){throw this.logger.error(c),new Error("Error updating openai bot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Openai bot not found");if(r.instanceId!==s)throw new Error("Openai bot not found");try{return await this.sessionRepository.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai bot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,speechToText:t.speechToText,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:o.openaiCredsId,expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,speechToText:o.speechToText,openaiIdFallback:o.openaiIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,speechToText:t.speechToText,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:n.openaiCredsId,expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,openaiIdFallback:n.openaiIdFallback,ignoreJids:n.ignoreJids,speechToText:n.speechToText,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let t=(await this.prismaRepository.instance.findFirst({select:{id:!0},where:{name:e.instanceName}}))?.id,s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{openaiCredsId:s.openaiCredsId,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,openaiIdFallback:s.openaiIdFallback,speechToText:s.speechToText,fallback:s.Fallback}:{openaiCredsId:null,expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,openaiIdFallback:null,speechToText:!1,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,o=t.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{openai:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null},status:{not:"closed"}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n}}),{openai:{...e,openai:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{openai:{...e,openai:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Openai Bot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?t:{not:null},type:"openai"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s,pushName:r}){if(this.integrationEnabled)try{let n=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(n?.ignoreJids,t))return;let o=await this.getSession(t,e),a=Ee(s),c=await this.findBotTrigger(this.botRepository,this.settingsRepository,a,e,o);if(!c){let v=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(v?.openaiIdFallback)c=await this.botRepository.findFirst({where:{id:v.openaiIdFallback}});else return}let u=c?.expire,d=c?.keywordFinish,l=c?.delayMessage,g=c?.unknownMessage,h=c?.listeningFromMe,m=c?.stopBotFromMe,f=c?.keepOpen,b=c?.debounceTime,S=c?.ignoreJids,w=c?.splitMessages,M=c?.timePerChar;u==null&&(u=n.expire),d==null&&(d=n.keywordFinish),l==null&&(l=n.delayMessage),g==null&&(g=n.unknownMessage),h==null&&(h=n.listeningFromMe),m==null&&(m=n.stopBotFromMe),f==null&&(f=n.keepOpen),b==null&&(b=n.debounceTime),S==null&&(S=n.ignoreJids),w==null&&(w=n?.splitMessages??!1),M==null&&(M=n?.timePerChar??0);let I=s.key;if(m&&I.fromMe&&o&&(o=await this.sessionRepository.update({where:{id:o.id},data:{status:"paused"}})),!h&&I.fromMe||o&&!o.awaitUser)return;b&&b>0?this.processDebounce(this.userMessageDebounce,a,t,b,async v=>{c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,r,I.fromMe,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:M},v),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,r,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:M},v)}):(c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,r,I.fromMe,c,o,n,a),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,r,c,o,n,a));return}catch(n){this.logger.error(n);return}}}});import Ju from"axios";var Xs,da=E(()=>{pe();z();_();te();Ze();rt();Xs=class extends ge{constructor(e,t,s){super(t,s);this.typebotService=e;this.logger=new C("TypebotController");this.integrationEnabled=T.get("TYPEBOT").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.typebot,this.settingsRepository=this.prismaRepository.typebotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});t.expire||(t.expire=o?.expire||0),t.keywordFinish||(t.keywordFinish=o?.keywordFinish||"#SAIR"),t.delayMessage||(t.delayMessage=o?.delayMessage||1e3),t.unknownMessage||(t.unknownMessage=o?.unknownMessage||"Desculpe, n\xE3o entendi"),t.listeningFromMe||(t.listeningFromMe=o?.listeningFromMe||!1),t.stopBotFromMe||(t.stopBotFromMe=o?.stopBotFromMe||!1),t.keepOpen||(t.keepOpen=o?.keepOpen||!1),t.debounceTime||(t.debounceTime=o?.debounceTime||0),t.ignoreJids||(t.ignoreJids=o?.ignoreJids||[]),o||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:t.url,typebot:t.typebot,instanceId:s}}))throw new Error("Typebot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,url:t.url,typebot:t.typebot,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids}})}catch(o){throw this.logger.error(o),new Error("Error creating typebot")}}async findBot(e){if(!this.integrationEnabled)throw new y("Typebot is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");return r}async updateBot(e,t,s){if(!this.integrationEnabled)throw new y("Typebot is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Typebot not found");if(n.instanceId!==r)throw new Error("Typebot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:r}}))throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:s.url,typebot:s.typebot,id:{not:t},instanceId:r}}))throw new Error("Typebot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,url:s.url,typebot:s.typebot,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids}})}catch(a){throw this.logger.error(a),new Error("Error updating typebot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:t}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{typebot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting typebot")}}async settings(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,typebotIdFallback:o.typebotIdFallback,ignoreJids:o.ignoreJids}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,typebotIdFallback:n.typebotIdFallback,ignoreJids:n.ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,typebotIdFallback:s.typebotIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],typebotIdFallback:null,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async startBot(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");if(t.remoteJid==="status@broadcast")return;let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!s)throw new Error("Instance not found");let r=t.remoteJid,n=t.url,o=t.typebot,a=t.startSession,c=t.variables,u=t?.typebot?.expire,d=t?.typebot?.keywordFinish,l=t?.typebot?.delayMessage,g=t?.typebot?.unknownMessage,h=t?.typebot?.listeningFromMe,m=t?.typebot?.stopBotFromMe,f=t?.typebot?.keepOpen,b=t?.typebot?.debounceTime,S=t?.typebot?.ignoreJids,w=await this.settingsRepository.findFirst({where:{instanceId:s.id}});if(this.checkIgnoreJids(w?.ignoreJids,r))throw new Error("Jid not allowed");(!u||!d||!l||!g||!h||!m||!f||!b||!S)&&(u==null&&(u=w.expire),d==null&&(d=w.keywordFinish),l==null&&(l=w.delayMessage),g==null&&(g=w.unknownMessage),h==null&&(h=w.listeningFromMe),m==null&&(m=w.stopBotFromMe),f==null&&(f=w.keepOpen),b==null&&(b=w.debounceTime),S==null&&(S=w.ignoreJids),w||await this.settings(e,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S}));let M={};if(c?.length&&c.forEach(I=>{M[I.name]=I.value}),a){let I=await this.botRepository.findFirst({where:{url:n,typebot:o,instanceId:s.id}});I||(I=await this.botRepository.create({data:{enabled:!0,url:n,typebot:o,instanceId:s.id,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f}})),await this.prismaRepository.integrationSession.deleteMany({where:{remoteJid:r,instanceId:s.id,botId:{not:null}}}),await this.typebotService.processTypebot(s,r,null,null,I,n,u,o,d,l,g,h,m,f,"init",M)}else{let I=Math.floor(Math.random()*1e10).toString();try{let v=T.get("TYPEBOT").API_VERSION,x,N;v==="latest"?(x=`${t.url}/api/v1/typebots/${t.typebot}/startChat`,N={prefilledVariables:M}):(x=`${t.url}/api/v1/sendMessage`,N={startParams:{publicId:t.typebot,prefilledVariables:M}});let O=await Ju.post(x,N);await this.typebotService.sendWAMessage(s,null,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:h,stopBotFromMe:m,keepOpen:f},r,O.data.messages,O.data.input,O.data.clientSideActions),this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.start",{remoteJid:r,url:x,typebot:o,variables:c,sessionId:I})}catch(v){this.logger.error(v);return}}return{typebot:{...e,typebot:{url:n,remoteJid:r,typebot:o,prefilledVariables:M}}}}async changeStatus(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(u=>u.id),r=t.remoteJid,n=t.status,o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(n==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:r,status:n}}};if(n==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}):await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:r,status:n}}};let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}),c={remoteJid:r,status:n,session:a};return this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.change-status",c),{typebot:{...e,typebot:c}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==r)throw new Error("Typebot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:t??{not:null},type:"typebot"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new y("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let r=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!r)throw new Error("Instance not found");let n=await this.getSession(t,e),o=Ee(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,e,n);if(!a){let v=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(v?.typebotIdFallback)a=await this.botRepository.findFirst({where:{id:v.typebotIdFallback}});else return}let c=await this.prismaRepository.typebotSetting.findFirst({where:{instanceId:e.instanceId}}),u=a?.url,d=a?.typebot,l=a?.expire,g=a?.keywordFinish,h=a?.delayMessage,m=a?.unknownMessage,f=a?.listeningFromMe,b=a?.stopBotFromMe,S=a?.keepOpen,w=a?.debounceTime,M=a?.ignoreJids;if(l==null&&(l=c.expire),g==null&&(g=c.keywordFinish),h==null&&(h=c.delayMessage),m==null&&(m=c.unknownMessage),f==null&&(f=c.listeningFromMe),b==null&&(b=c.stopBotFromMe),S==null&&(S=c.keepOpen),w==null&&(w=c.debounceTime),M==null&&(M=c.ignoreJids),this.checkIgnoreJids(M,t))return;let I=s.key;if(b&&I.fromMe&&n){await this.sessionRepository.update({where:{id:n.id},data:{status:"paused"}});return}if(!f&&I.fromMe||n&&!n.awaitUser||(w&&w>0?this.processDebounce(this.userMessageDebounce,o,t,w,async v=>{await this.typebotService.processTypebot(r,t,s,n,a,u,l,d,g,h,m,f,b,S,v)}):await this.typebotService.processTypebot(r,t,s,n,a,u,l,d,g,h,m,f,b,S,o),n&&!n.awaitUser))return}catch(r){this.logger.error(r);return}}}});var Zs,se,Fe=E(()=>{Zs=class Zs{constructor(i,e,t,s){this.prisma=i,this.monitor=e,this.status=t,this.name=s}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set name(i){this.integrationName=i}get name(){return this.integrationName}set status(i){this.integrationStatus=i}get status(){return this.integrationStatus}async set(i,e){if(this.status)return e[this.name]?.enabled?e[this.name].events.length===0&&(e[this.name].events=Zs.events):e[this.name].events=[],this.prisma[this.name].upsert({where:{instanceId:this.monitor.waInstances[i].instanceId},update:{enabled:e[this.name]?.enabled,events:e[this.name].events},create:{enabled:e[this.name]?.enabled,events:e[this.name].events,instanceId:this.monitor.waInstances[i].instanceId}})}async get(i){if(!this.status)return;if(this.monitor.waInstances[i]===void 0)return null;let e=await this.prisma[this.name].findUnique({where:{instanceId:this.monitor.waInstances[i].instanceId}});return e||null}};Zs.events=["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS","REMOVE_INSTANCE","LOGOUT_INSTANCE"];se=Zs});import pr from"pusher";var ei,ga=E(()=>{z();_();Fe();ei=class extends se{constructor(e,t){super(e,t,T.get("PUSHER")?.ENABLED,"pusher");this.logger=new C("PusherController");this.pusherClients={};this.globalPusherClient=null;this.pusherConfig=T.get("PUSHER");this.init()}async init(){if(!this.status)return;if(this.pusherConfig.GLOBAL?.ENABLED){let{APP_ID:t,KEY:s,SECRET:r,CLUSTER:n,USE_TLS:o}=this.pusherConfig.GLOBAL;t&&s&&r&&n&&(this.globalPusherClient=new pr({appId:t,key:s,secret:r,cluster:n,useTLS:o}),this.logger.info("Pusher global client initialized"))}(await this.prismaRepository.instance.findMany({where:{Pusher:{isNot:null}},include:{Pusher:!0}})).forEach(t=>{t.Pusher.enabled&&t.Pusher.appId&&t.Pusher.key&&t.Pusher.secret&&t.Pusher.cluster?(this.pusherClients[t.name]=new pr({appId:t.Pusher.appId,key:t.Pusher.key,secret:t.Pusher.secret,cluster:t.Pusher.cluster,useTLS:t.Pusher.useTLS}),this.logger.info(`Pusher client initialized for instance ${t.name}`)):(delete this.pusherClients[t.name],this.logger.warn(`Pusher client disabled or misconfigured for instance ${t.name}`))})}async set(e,t){t.pusher?.enabled?t.pusher.events.length===0&&(t.pusher.events=se.events):t.pusher.events=[];let s=await this.prisma.pusher.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.pusher.enabled,events:t.pusher.events,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS},create:{enabled:t.pusher.enabled,events:t.pusher.events,instanceId:this.monitor.waInstances[e].instanceId,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS}});return s.enabled&&s.appId&&s.key&&s.secret&&s.cluster?(this.pusherClients[e]=new pr({appId:s.appId,key:s.key,secret:s.secret,cluster:s.cluster,useTLS:s.useTLS}),this.logger.info(`Pusher client initialized for instance ${e}`)):(delete this.pusherClients[e],this.logger.warn(`Pusher client disabled or misconfigured for instance ${e}`)),s}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){if(!this.status)return;let d=await this.get(e),l=s.replace(/[.-]/gm,"_").toUpperCase(),g=T.get("LOG").LEVEL.includes("WEBHOOKS"),h=s.replace(/_/g,".").toLowerCase(),m={event:s,instance:e,data:r,destination:d?.appId||this.pusherConfig.GLOBAL?.APP_ID,date_time:o,sender:a,server_url:n,apikey:c};s=="qrcode.updated"&&delete m.data.qrcode.base64;let f=JSON.stringify(m),b=Buffer.byteLength(f,"utf8");if(b>10240){this.logger.error({local:`${t}.sendData-Pusher`,message:"Payload size exceeds Pusher limit",event:s,instanceName:e,payloadSize:b});return}if(u&&d&&d.enabled){let w=d.events;if(Array.isArray(w)&&w.includes(l)){g&&this.logger.log({local:`${t}.sendData-Pusher`,appId:d.appId,...m});try{let M=this.pusherClients[e];M?M.trigger(e,h,m):this.logger.error(`Pusher client not found for instance ${e}`)}catch(M){this.logger.error({local:`${t}.sendData-Pusher`,message:M?.message,error:M})}}}if(this.pusherConfig.GLOBAL?.ENABLED&&this.pusherConfig.EVENTS[l]){g&&this.logger.log({local:`${t}.sendData-Pusher-Global`,appId:this.pusherConfig.GLOBAL?.APP_ID,...m});try{this.globalPusherClient?this.globalPusherClient.trigger(e,h,m):this.logger.error("Global Pusher client not initialized")}catch(M){this.logger.error({local:`${t}.sendData-Pusher-Global`,message:M?.message,error:M})}}}}});import*as ma from"amqplib/callback_api";var ti,ha=E(()=>{z();_();Fe();ti=class extends se{constructor(e,t){super(e,t,T.get("RABBITMQ")?.ENABLED,"rabbitmq");this.amqpChannel=null;this.logger=new C("RabbitmqController")}async init(){this.status&&await new Promise((e,t)=>{let s=T.get("RABBITMQ").URI,r=T.get("RABBITMQ").EXCHANGE_NAME;ma.connect(s,(n,o)=>{if(n){t(n);return}o.createChannel((a,c)=>{if(a){t(a);return}let u=r;c.assertExchange(u,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel=c,this.logger.info("AMQP initialized"),e()})})}).then(()=>{T.get("RABBITMQ")?.GLOBAL_ENABLED&&this.initGlobalQueues()})}set channel(e){this.amqpChannel=e}get channel(){return this.amqpChannel}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(e),d=u?.events,l=T.get("RABBITMQ").GLOBAL_ENABLED,g=T.get("RABBITMQ").EVENTS,h=T.get("RABBITMQ").EXCHANGE_NAME,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=T.get("LOG").LEVEL.includes("WEBHOOKS"),b={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c};if(u?.enabled&&this.amqpChannel&&Array.isArray(d)&&d.includes(m)){let S=e??h,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let M=s.replace(/_/g,".").toLowerCase(),I=`${e}.${M}`;if(await this.amqpChannel.assertQueue(I,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(I,S,M),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let v={local:`${t}.sendData-RabbitMQ`,...b};this.logger.log(v)}break}catch{w++}}if(l&&g[m]&&this.amqpChannel){let S=h,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let M=s;if(await this.amqpChannel.assertQueue(M,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(M,S,s),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let I={local:`${t}.sendData-RabbitMQ-Global`,...b};this.logger.log(I)}break}catch{w++}}}async initGlobalQueues(){this.logger.info("Initializing global queues");let e=T.get("RABBITMQ").EXCHANGE_NAME,t=T.get("RABBITMQ").EVENTS;if(!t){this.logger.warn("No events to initialize on AMQP");return}Object.keys(t).forEach(r=>{if(t[r]===!1)return;let n=`${r.replace(/_/g,".").toLowerCase()}`,o=e;this.amqpChannel.assertExchange(o,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel.assertQueue(n,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),this.amqpChannel.bindQueue(n,o,r)})}}});import{SQS as Wu}from"@aws-sdk/client-sqs";var si,ya=E(()=>{z();_();Fe();si=class extends se{constructor(e,t){super(e,t,T.get("SQS")?.ENABLED,"sqs");this.logger=new C("SqsController")}init(){this.status&&new Promise(e=>{let t=T.get("SQS");this.sqs=new Wu({credentials:{accessKeyId:t.ACCESS_KEY_ID,secretAccessKey:t.SECRET_ACCESS_KEY},region:t.REGION}),this.logger.info("SQS initialized"),e()})}set channel(e){this.sqs=e}get channel(){return this.sqs}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(e),d=u?.events,l=s.replace(/[.-]/gm,"_").toUpperCase();if(u?.enabled&&this.sqs&&Array.isArray(d)&&d.includes(l)){let g=`${s.replace(".","_").toLowerCase()}`,h=`${e}_${g}.fifo`,m=T.get("SQS"),f=`https://sqs.${m.REGION}.amazonaws.com/${m.ACCOUNT_ID}/${h}`,b={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c},S={MessageBody:JSON.stringify(b),MessageGroupId:"evolution",MessageDeduplicationId:`${e}_${g}_${Date.now()}`,QueueUrl:f};this.sqs.sendMessage(S,w=>{if(w)this.logger.error({local:`${t}.sendData-SQS`,message:w?.message,hostName:w?.hostname,code:w?.code,stack:w?.stack,name:w?.name,url:h,server_url:n});else if(T.get("LOG").LEVEL.includes("WEBHOOKS")){let M={local:`${t}.sendData-SQS`,...b};this.logger.log(M)}})}}async initQueues(e,t){if(!t||!t.length)return;t.map(r=>`${r.replace(/_/g,"_").toLowerCase()}`).forEach(r=>{let n=`${e}_${r}.fifo`;this.sqs.createQueue({QueueName:n,Attributes:{FifoQueue:"true"}},(o,a)=>{o?this.logger.error(`Error creating queue ${n}: ${o.message}`):this.logger.info(`Queue ${n} created: ${a.QueueUrl}`)})})}async removeQueues(e,t){let s=Array.isArray(t)?t.map(n=>String(n)):[];if(!t||!s.length)return;s.map(n=>`${n.replace(/_/g,"_").toLowerCase()}`).forEach(n=>{let o=`${e}_${n}.fifo`;this.sqs.getQueueUrl({QueueName:o},(a,c)=>{if(a)this.logger.error(`Error getting queue URL for ${o}: ${a.message}`);else{let u=c.QueueUrl;this.sqs.deleteQueue({QueueUrl:u},d=>{d?this.logger.error(`Error deleting queue ${o}: ${d.message}`):this.logger.info(`Queue ${o} deleted`)})}})})}}});import fa from"axios";import{isURL as lr}from"class-validator";var ii,wa=E(()=>{z();_();te();Fe();ii=class extends se{constructor(e,t){super(e,t,!0,"webhook");this.logger=new C("WebhookController")}async set(e,t){if(!lr(t.webhook.url,{require_tld:!1}))throw new y('Invalid "url" property');return t.webhook?.enabled?t.webhook.events.length===0&&(t.webhook.events=se.events):t.webhook.events=[],this.prisma.webhook.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.webhook?.enabled,events:t.webhook?.events,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents},create:{enabled:t.webhook?.enabled,events:t.webhook?.events,instanceId:this.monitor.waInstances[e].instanceId,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents}})}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){let d=await this.get(e);if(!d||!d?.enabled)return;let l=T.get("WEBHOOK"),g=d?.events,h=d?.headers,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=m.replace(/_/gm,"-").toLowerCase(),b=T.get("LOG").LEVEL.includes("WEBHOOKS"),S={event:s,instance:e,data:r,destination:d?.url,date_time:o,sender:a,server_url:n,apikey:c};if(u&&Array.isArray(g)&&g.includes(m)){let w;if(d?.webhookByEvents?w=`${d?.url}/${f}`:w=d?.url,b){let M={local:`${t}.sendData-Webhook`,url:w,...S};this.logger.log(M)}try{d?.enabled&&lr(d.url,{require_tld:!1})&&await fa.create({baseURL:w,headers:h}).post("",S)}catch(M){this.logger.error({local:`${t}.sendData-Webhook`,message:M?.message,hostName:M?.hostname,syscall:M?.syscall,code:M?.code,error:M?.errno,stack:M?.stack,name:M?.name,url:w,server_url:n})}}if(l.GLOBAL?.ENABLED&&l.EVENTS[m]){let w=l.GLOBAL.URL;if(l.GLOBAL.WEBHOOK_BY_EVENTS&&(w=`${w}/${f}`),b){let M={local:`${t}.sendData-Webhook-Global`,url:w,...S};this.logger.log(M)}try{lr(w)&&await fa.create({baseURL:w}).post("",S)}catch(M){this.logger.error({local:`${t}.sendData-Webhook-Global`,message:M?.message,hostName:M?.hostname,syscall:M?.syscall,code:M?.code,error:M?.errno,stack:M?.stack,name:M?.name,url:w,server_url:n})}}}}});import{Server as $u}from"socket.io";var ni,ba=E(()=>{z();_();Fe();ni=class extends se{constructor(e,t){super(e,t,T.get("WEBSOCKET")?.ENABLED,"websocket");this.logger=new C("WebsocketController");this.cors=T.get("CORS").ORIGIN}init(e){this.status&&(this.socket=new $u(e,{cors:{origin:this.cors}}),this.socket.on("connection",t=>{this.logger.info("User connected"),t.on("disconnect",()=>{this.logger.info("User disconnected")})}),this.logger.info("Socket.io initialized"))}set cors(e){this.corsConfig=e}get cors(){return this.corsConfig?.includes("*")?"*":this.corsConfig}set socket(e){this.io=e}get socket(){return this.io}async emit({instanceName:e,origin:t,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=s.replace(/[.-]/gm,"_").toUpperCase(),d=T.get("LOG").LEVEL.includes("WEBSOCKET"),l={event:s,instance:e,data:r,server_url:n,date_time:o,sender:a,apikey:c};T.get("WEBSOCKET")?.GLOBAL_EVENTS&&(this.socket.emit(s,l),d&&this.logger.log({local:`${t}.sendData-WebsocketGlobal`,...l}));try{let g=await this.get(e);if(!g?.enabled)return;Array.isArray(g?.events)&&g?.events.includes(u)&&(this.socket.of(`/${e}`).emit(s,l),d&&this.logger.log({local:`${t}.sendData-Websocket`,...l}))}catch(g){d&&this.logger.log(g)}}}});var ri,Sa=E(()=>{ga();ha();ya();wa();ba();ri=class{constructor(i,e){this.prisma=i,this.monitor=e,this.websocket=new ni(i,e),this.webhook=new ii(i,e),this.rabbitmq=new ti(i,e),this.sqs=new si(i,e),this.pusher=new ei(i,e)}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set websocket(i){this.websocketController=i}get websocket(){return this.websocketController}set webhook(i){this.webhookController=i}get webhook(){return this.webhookController}set rabbitmq(i){this.rabbitmqController=i}get rabbitmq(){return this.rabbitmqController}set sqs(i){this.sqsController=i}get sqs(){return this.sqsController}set pusher(i){this.pusherController=i}get pusher(){return this.pusherController}init(i){this.websocket.init(i),this.rabbitmq.init(),this.sqs.init(),this.pusher.init()}async emit(i){await this.websocket.emit(i),await this.rabbitmq.emit(i),await this.sqs.emit(i),await this.webhook.emit(i),await this.pusher.emit(i)}async setInstance(i,e){e.websocket&&await this.websocket.set(i,{websocket:{enabled:!0,events:e.websocket?.events}}),e.rabbitmq&&await this.rabbitmq.set(i,{rabbitmq:{enabled:!0,events:e.rabbitmq?.events}}),e.sqs&&await this.sqs.set(i,{sqs:{enabled:!0,events:e.sqs?.events}}),e.webhook&&await this.webhook.set(i,{webhook:{enabled:!0,events:e.webhook?.events,url:e.webhook?.url,headers:e.webhook?.headers,base64:e.webhook?.base64,byEvents:e.webhook?.byEvents}}),e.pusher&&await this.pusher.set(i,{pusher:{enabled:!0,events:e.pusher?.events,appId:e.pusher?.appId,key:e.pusher?.key,secret:e.pusher?.secret,cluster:e.pusher?.cluster,useTLS:e.pusher?.useTLS}})}}});var oi,Ea=E(()=>{oi=class{constructor(i){this.s3Service=i}async getMedia(i,e){return this.s3Service.getMedia(i,e)}async getMediaUrl(i,e){return this.s3Service.getMediaUrl(i,e)}}});var ai,Ia=E(()=>{ws();_();te();ai=class{constructor(i){this.prismaRepository=i;this.logger=new C("S3Service")}async getMedia(i,e){try{let t={instanceId:i.instanceId,...e},s=await this.prismaRepository.media.findMany({where:t,select:{id:!0,fileName:!0,type:!0,mimetype:!0,createdAt:!0,Message:!0}});if(!s||s.length===0)throw"Media not found";return s}catch(t){throw new y(t)}}async getMediaUrl(i,e){let t=(await this.getMedia(i,{id:e.id}))[0];return{mediaUrl:await tt(t.fileName,e.expiry),...t}}}});import{execSync as qu}from"child_process";import{rmSync as Ma}from"fs";import{join as ur}from"path";var ci,Ta=E(()=>{B();pe();_();Bs();te();ci=class{constructor(i,e,t,s,r,n,o){this.eventEmitter=i;this.configService=e;this.prismaRepository=t;this.providerFiles=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.db={};this.redis={};this.logger=new C("WAMonitoringService");this.waInstances={};this.providerSession=Object.freeze(this.configService.get("PROVIDER"));this.removeInstance(),this.noConnection(),Object.assign(this.db,e.get("DATABASE")),Object.assign(this.redis,e.get("CACHE"))}delInstanceTime(i){let e=this.configService.get("DEL_INSTANCE");typeof e=="number"&&e>0&&setTimeout(async()=>{this.waInstances[i]?.connectionStatus?.state!=="open"&&(this.waInstances[i]?.connectionStatus?.state==="connecting"?(await this.waInstances[i].integration===D.WHATSAPP_BAILEYS&&(await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i]?.client?.end(void 0)),this.eventEmitter.emit("remove.instance",i,"inner")):this.eventEmitter.emit("remove.instance",i,"inner"))},1e3*60*e)}async instanceInfo(i){if(i&&i.length>0){let r=i?i.filter(n=>!this.waInstances[n]):[];if(r.length>0)throw new $(`Instance${r.length>1?"s":""} "${r.join(", ")}" not found`)}let e=this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,t=i&&i.length>0?{name:{in:i},clientName:e}:{clientName:e};return await this.prismaRepository.instance.findMany({where:t,include:{Chatwoot:!0,Proxy:!0,Rabbitmq:!0,Sqs:!0,Websocket:!0,Setting:!0,_count:{select:{Message:!0,Contact:!0,Chat:!0}}}})}async instanceInfoById(i,e){let t;if(i){if(t=await this.prismaRepository.instance.findFirst({where:{id:i}}).then(r=>r?.name),!t)throw new $(`Instance "${i}" not found`)}else if(e&&(t=await this.prismaRepository.instance.findFirst({where:{number:e}}).then(r=>r?.name),!t))throw new $(`Instance "${e}" not found`);if(!t)throw new $(`Instance "${i}" not found`);if(t&&!this.waInstances[t])throw new $(`Instance "${t}" not found`);let s=t?[t]:null;return this.instanceInfo(s)}async cleaningUp(i){let e;if(this.db.SAVE_DATA.INSTANCE&&await this.prismaRepository.instance.findFirst({where:{name:i}})){let s=await this.prismaRepository.instance.update({where:{name:i},data:{connectionStatus:"close"}});Ma(ur(Mt,s.id),{recursive:!0,force:!0}),e=s.id,await this.prismaRepository.session.deleteMany({where:{sessionId:s.id}})}this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&(await this.cache.delete(i),e&&await this.cache.delete(e)),this.providerSession?.ENABLED&&await this.providerFiles.removeSession(i)}async cleaningStoreData(i){this.configService.get("CHATWOOT").ENABLED&&qu(`rm -rf ${ur(Fo,"chatwoot",i+"*")}`);let e=await this.prismaRepository.instance.findFirst({where:{name:i}});e&&(Ma(ur(Mt,e.id),{recursive:!0,force:!0}),await this.prismaRepository.session.deleteMany({where:{sessionId:e.id}}),await this.prismaRepository.chat.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.contact.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.messageUpdate.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.message.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.webhook.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.chatwoot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.proxy.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.rabbitmq.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.sqs.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.integrationSession.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.typebot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.websocket.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.setting.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.label.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.instance.delete({where:{name:i}}))}async loadInstance(){try{this.providerSession?.ENABLED?await this.loadInstancesFromProvider():this.db.SAVE_DATA.INSTANCE?await this.loadInstancesFromDatabasePostgres():this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&await this.loadInstancesFromRedis()}catch(i){this.logger.error(i)}}async saveInstance(i){try{let e=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME;await this.prismaRepository.instance.create({data:{id:i.instanceId,name:i.instanceName,connectionStatus:i.integration&&i.integration===D.WHATSAPP_BAILEYS?"close":i.status??"open",number:i.number,integration:i.integration||D.WHATSAPP_BAILEYS,token:i.hash,clientName:e,businessId:i.businessId}})}catch(e){this.logger.error(e)}}deleteInstance(i){try{this.eventEmitter.emit("remove.instance",i,"inner")}catch(e){this.logger.error(e)}}async setInstance(i){let e=es.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});e&&(e.setInstance({instanceId:i.instanceId,instanceName:i.instanceName,integration:i.integration,token:i.token,number:i.number,businessId:i.businessId}),await e.connectToWhatsapp(),this.waInstances[i.instanceName]=e)}async loadInstancesFromRedis(){let i=await this.cache.keys();i?.length>0&&await Promise.all(i.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e.split(":")[1]}});if(!t)return;let s={instanceId:e.split(":")[1],instanceName:e.split(":")[2],integration:t.integration,token:t.token,number:t.number,businessId:t.businessId};this.setInstance(s)}))}async loadInstancesFromDatabasePostgres(){let i=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,e=await this.prismaRepository.instance.findMany({where:{clientName:i}});e.length!==0&&await Promise.all(e.map(async t=>{this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,number:t.number,businessId:t.businessId})}))}async loadInstancesFromProvider(){let[i]=await this.providerFiles.allInstances();i?.data&&await Promise.all(i?.data?.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e}});this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,businessId:t.businessId})}))}removeInstance(){this.eventEmitter.on("remove.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("remove.instance",null),this.cleaningUp(i),this.cleaningStoreData(i)}finally{this.logger.warn(`Instance "${i}" - REMOVED`)}try{delete this.waInstances[i]}catch(e){this.logger.error(e)}}),this.eventEmitter.on("logout.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("logout.instance",null),this.configService.get("CHATWOOT").ENABLED&&this.waInstances[i]?.clearCacheChatwoot(),this.cleaningUp(i)}finally{this.logger.warn(`Instance "${i}" - LOGOUT`)}})}noConnection(){this.eventEmitter.on("no.connection",async i=>{try{await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i].instance.qrcode={count:0},this.waInstances[i].stateConnection.state="close"}catch(e){this.logger.error({localError:"noConnection",warn:"Error deleting instance from memory.",error:e})}finally{this.logger.warn(`Instance "${i}" - NOT CONNECTION`)}})}}});var pi,Ca=E(()=>{_();pi=class{constructor(i){this.waMonitor=i;this.logger=new C("ProxyService")}create(i,e){return this.waMonitor.waInstances[i.instanceName].setProxy(e),{proxy:{...i,proxy:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findProxy();if(Object.keys(e).length===0)throw new Error("Proxy not found");return e}catch{return null}}}});var li,va=E(()=>{_();li=class{constructor(i){this.waMonitor=i;this.logger=new C("SettingsService")}async create(i,e){return await this.waMonitor.waInstances[i.instanceName].setSettings(e),{settings:{...i,settings:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findSettings();if(Object.keys(e).length===0)throw new Error("Settings not found");return e}catch{return null}}}});import Aa from"axios";var ui,Ra=E(()=>{_();ui=class{constructor(i,e,t){this.waMonitor=i;this.prismaRepository=e;this.configService=t;this.logger=new C("TemplateService")}async find(i){let e=await this.waMonitor.waInstances[i.instanceName].instance;if(!e)throw new Error("Instance not found");this.businessId=e.businessId,this.token=e.token;let t=await this.requestTemplate({},"GET");if(!t)throw new Error("Error to create template");return t.data}async create(i,e){try{let t=await this.waMonitor.waInstances[i.instanceName].instance;if(!t)throw new Error("Instance not found");this.businessId=t.businessId,this.token=t.token;let s={name:e.name,category:e.category,allow_category_change:e.allowCategoryChange,language:e.language,components:e.components},r=await this.requestTemplate(s,"POST");if(!r||r.error)throw new Error("Error to create template");return await this.prismaRepository.template.create({data:{templateId:r.id,name:e.name,template:r,webhookUrl:e.webhookUrl,instanceId:t.id}})}catch(t){throw this.logger.error(t),new Error("Error to create template")}}async requestTemplate(i,e){try{let t=this.configService.get("WA_BUSINESS").URL,s=this.configService.get("WA_BUSINESS").VERSION;t=`${t}/${s}/${this.businessId}/message_templates`;let r={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};if(e==="GET")return(await Aa.get(t,{headers:r})).data;if(e==="POST")return(await Aa.post(t,i,{headers:r})).data}catch(t){return this.logger.error(t.response.data),t.response.data.error}}}});var Gu,di,gi,Da,dr,L,k,Hu,gr,Vu,mr,ju,mi,Pa,hi,xa,hr,Ue,he,Oa,X,ae,yr,Z,Le,es,_a,Na,Ku,me,Yu,oe,Qu,fe,zu,we,Xu,be,B=E(()=>{Yt();z();Yr();_();Qr();zr();Xr();po();lo();go();mo();ho();yo();$s();Xo();Zo();rt();ra();ps();oa();Yn();aa();ca();pa();la();ua();zn();da();Xn();Sa();Ea();Ia();Fn();Vt();Ns();Ta();Ca();va();Ra();Gu=new C("WA MODULE"),di=null;T.get("CHATWOOT").ENABLED&&(di=new ke(new Oe(T,Ne.name).getEngine()));gi=new ke(new Oe(T,"instance").getEngine()),Da=new ke(new Oe(T,"baileys").getEngine()),dr=null;T.get("PROVIDER").ENABLED&&(dr=new at(T));L=new ct(T),k=new ci(Jn,T,L,dr,gi,di,Da),Hu=new ai(L),gr=new oi(Hu),Vu=new ui(k,L,T),mr=new as(Vu),ju=new pi(k),mi=new is(ju,k),Pa=new Ne(k,T,L,di),hi=new Hs(Pa,T,L),xa=new li(k),hr=new os(xa),Ue=new Zt(k,T,L,Jn,Pa,xa,mi,gi,di,Da,dr),he=new rs(k),Oa=new Qt(k),X=new zt(k),ae=new Xt(k),yr=new ts(k),Z=new ri(L,k),Le=new ge(L,k),es=new Ke(L,k),_a=new qs(L,k),Na=new Gs(L,k),Ku=new dt(k,T,L),me=new Xs(Ku,L,k),Yu=new ut(k,T,L),oe=new zs(Yu,L,k),Qu=new lt(k,T,L),fe=new Vs(Qu,L,k),zu=new Ks(k,T,L),we=new js(zu,L,k),Xu=new Qs(k,T,L),be=new Ys(Xu,L,k);Gu.info("Module - ON")});async function ed(p,i,e){let t=T.get("AUTHENTICATION").API_KEY,s=p.get("apikey"),r=T.get("DATABASE");if(!s)throw new ze;if(t.KEY===s)return e();if((p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))&&!s)throw new pt("Missing global api key","The global api key must be set");let n=p.params;try{if(n?.instanceName){if((await L.instance.findUnique({where:{name:n.instanceName}})).token===s)return e()}else if(p.originalUrl.includes("/instance/fetchInstances")&&r.SAVE_DATA.INSTANCE&&await L.instance.findFirst({where:{token:s}}))return e()}catch(o){Zu.error(o)}throw new ze}var Zu,fr,ka=E(()=>{B();z();_();te();Zu=new C("GUARD");fr={apikey:ed}});async function Ba(p){try{let i=T.get("CACHE"),e=!!k.waInstances[p];if(i.REDIS.ENABLED&&i.REDIS.SAVE_INSTANCES){let t=await gi.has(p);return e||t}return e||(await L.instance.findMany({where:{name:p}})).length>0}catch(i){throw new U(i?.toString())}}async function La(p,i,e){if(p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))return e();let t=p.params;if(!t?.instanceName)throw new y('"instanceName" not provided.');if(!await Ba(t.instanceName))throw new $(`The "${t.instanceName}" instance does not exist`);e()}async function Fa(p,i,e){if(p.originalUrl.includes("/instance/create")){let t=p.body;if(await Ba(t.instanceName))throw new pt(`This name "${t.instanceName}" is already in use.`);k.waInstances[t.instanceName]&&delete k.waInstances[t.instanceName]}e()}var Ua=E(()=>{B();z();te()});var wr,Ja,Wa=E(()=>{qe();wr=class{collectTelemetry(i,e,t){q(i.path),t()}},Ja=wr});import"express-async-errors";import{validate as At}from"jsonschema";var Rt,P,Q=E(()=>{_();te();Rt=new C("Validate"),P=class{constructor(){}routerPath(i,e=!0){let t="/"+i;return e&&(t+="/:instanceName"),t}async dataValidate(i){let{request:e,schema:t,ClassRef:s,execute:r}=i,n=new s,o=e.body,a=e.params;e?.query&&Object.keys(e.query).length>0&&Object.assign(a,e.query),e.originalUrl.includes("/instance/create")&&Object.assign(a,o),Object.assign(n,o);let c=t?At(n,t):{valid:!0,errors:[]};if(!c.valid){let u=c.errors.map(({stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),g});throw Rt.error(u),new y(u)}return await r(a,n)}async groupNoValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.params,o=new t;Object.assign(o,e.body);let a=At(o,s);if(!a.valid){let c=a.errors.map(({property:u,stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),{property:u.replace("instance.",""),message:g}});throw Rt.error([...c]),new y(...c)}return await r(n,o)}async groupValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.params,o=e.body,a=o?.groupJid;if(!a)if(e.query?.groupJid)a=e.query.groupJid;else throw new y("The group id needs to be informed in the query",'ex: "groupJid=120362@g.us"');a.endsWith("@g.us")||(a=a+"@g.us"),Object.assign(o,{groupJid:a});let c=new t;Object.assign(c,o);let u=At(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Rt.error([...d]),new y(...d)}return await r(n,c)}async inviteCodeValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.query;if(!n?.inviteCode)throw new y("The group invite code id needs to be informed in the query",'ex: "inviteCode=F1EX5QZxO181L3TMVP31gY" (Obtained from group join link)');let o=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let u=At(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Rt.error([...d]),new y(...d)}return await r(o,c)}async getParticipantsValidate(i){let{request:e,ClassRef:t,schema:s,execute:r}=i,n=e.query;if(!n?.getParticipants)throw new y("The getParticipants needs to be informed in the query");let o=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let u=At(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:h})=>{let m;return h.description?m=h.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Rt.error([...d]),new y(...d)}return await r(o,c)}}});import{Router as td}from"express";var yi,$a=E(()=>{Q();B();yi=class extends P{constructor(e){super();this.configService=e;this.router=td();this.router.post(this.routerPath("webhook/evolution",!1),async(t,s)=>{let{body:r}=t,n=await _a.receiveWebhook(r);return s.status(200).json(n)})}}});import{Router as sd}from"express";var fi,qa=E(()=>{Q();B();fi=class extends P{constructor(e){super();this.configService=e;this.router=sd();this.router.get(this.routerPath("webhook/meta",!1),async(t,s)=>{t.query["hub.verify_token"]===e.get("WA_BUSINESS").TOKEN_WEBHOOK?s.send(t.query["hub.challenge"]):s.send("Error, wrong validation token")}).post(this.routerPath("webhook/meta",!1),async(t,s)=>{let{body:r}=t,n=await Na.receiveWebhook(r);return s.status(200).json(n)})}}});import{Router as id}from"express";var wi,Ga=E(()=>{$a();qa();wi=class{constructor(i){this.router=id(),this.router.use("/",new yi(i).router),this.router.use("/",new fi(i).router)}}});function Ha(p){return class extends p{}}var bi,br=E(()=>{bi=class{}});function Va(p){return class extends p{}}var Ie,ot=E(()=>{Ie=class{}});var Si,ja=E(()=>{br();ot();Si=class extends Va(Ha(class{})){}});var A,Ei,ce=E(()=>{ja();A=class extends Si{},Ei=class{}});import{v4 as ue}from"uuid";var le,nd,Ka,Ya,Qa,za,Xa,Dt,Za,ec,tc,Sr,sc,ic,nc,rc,oc,ac,cc=E(()=>{le=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},nd={type:"string",description:"Invalid format"},Ka={$id:ue(),type:"object",properties:{numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",description:'"numbers" must be an array of numeric strings'}}}},Ya={$id:ue(),type:"object",properties:{readMessages:{type:"array",minItems:1,uniqueItems:!0,items:{properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"}},required:["id","fromMe","remoteJid"],...le("id","remoteJid")}}},required:["readMessages"]},Qa={$id:ue(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...le("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...le("messageTimestamp")},archive:{type:"boolean",enum:[!0,!1]}},required:["archive"]},za={$id:ue(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...le("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...le("messageTimestamp")}},required:["lastMessage"]},Xa={$id:ue(),type:"object",properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"},participant:{type:"string"}},required:["id","fromMe","remoteJid"],...le("id","remoteJid","participant")},Dt={$id:ue(),type:"object",properties:{number:{type:"string"},picture:{type:"string"}}},Za={$id:ue(),type:"object",properties:{number:{type:"string"},text:{type:"string"},key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...le("id","remoteJid")}},...le("number","text","key")},ec={$id:ue(),type:"object",properties:{number:{...nd},delay:{type:"number"},presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["number","presence","delay"]},tc={$id:ue(),type:"object",properties:{number:{type:"string"},status:{type:"string",enum:["block","unblock"]}},required:["number","status"],...le("number","status")},Sr={$id:ue(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},pushName:{type:"string",minLength:1},id:{type:"string",minLength:1}},...le("_id","id","pushName")}}},sc={$id:ue(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},key:{type:"object",if:{propertyNames:{enum:["fromMe","remoteJid","id"]}},then:{properties:{remoteJid:{type:"string",minLength:1,description:"The property cannot be empty"},id:{type:"string",minLength:1,description:"The property cannot be empty"},fromMe:{type:"boolean",enum:[!0,!1]}}}},message:{type:"object"}},...le("_id")},limit:{type:"integer"}}},ic={$id:ue(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string"},remoteJid:{type:"string"},id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},participant:{type:"string"},status:{type:"string",enum:["ERROR","PENDING","SERVER_ACK","DELIVERY_ACK","READ","PLAYED"]}},...le("_id","remoteJid","id","status")},limit:{type:"integer"}}},nc={$id:ue(),type:"object",properties:{readreceipts:{type:"string",enum:["all","none"]},profile:{type:"string",enum:["all","contacts","contact_blacklist","none"]},status:{type:"string",enum:["all","contacts","contact_blacklist","none"]},online:{type:"string",enum:["all","match_last_seen"]},last:{type:"string",enum:["all","contacts","contact_blacklist","none"]},groupadd:{type:"string",enum:["all","contacts","contact_blacklist","none"]}},required:["readreceipts","profile","status","online","last","groupadd"],...le("readreceipts","profile","status","online","last","groupadd")},rc={$id:ue(),type:"object",properties:{name:{type:"string"}},...le("name")},oc={$id:ue(),type:"object",properties:{status:{type:"string"}},...le("status")},ac={type:"object",properties:{wuid:{type:"string"},name:{type:"string"},picture:{type:"string"},status:{type:"string"},isBusiness:{type:"boolean"}}}});import{v4 as Me}from"uuid";var Te,pc,Pt,lc,uc,dc,gc,mc,hc,yc,fc,wc,bc,Sc=E(()=>{Te=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},pc={$id:Me(),type:"object",properties:{subject:{type:"string"},description:{type:"string"},profilePicture:{type:"string"},promoteParticipants:{type:"boolean",enum:[!0,!1]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["subject","participants"],...Te("subject","description","profilePicture")},Pt={$id:Me(),type:"object",properties:{groupJid:{type:"string",pattern:"^[\\d-]+@g.us$"}},required:["groupJid"],...Te("groupJid")},lc={$id:Me(),type:"object",properties:{getParticipants:{type:"string",enum:["true","false"]}},required:["getParticipants"],...Te("getParticipants")},uc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"},numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"numbers" must be an array of numeric strings'}}},required:["groupJid","description","numbers"],...Te("groupJid","description","numbers")},dc={$id:Me(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...Te("inviteCode")},gc={$id:Me(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...Te("inviteCode")},mc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["add","remove","promote","demote"]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["groupJid","action","participants"],...Te("groupJid","action")},hc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["announcement","not_announcement","locked","unlocked"]}},required:["groupJid","action"],...Te("groupJid","action")},yc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},expiration:{type:"number",enum:[0,86400,604800,7776e3]}},required:["groupJid","expiration"],...Te("groupJid","expiration")},fc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},image:{type:"string"}},required:["groupJid","image"],...Te("groupJid","image")},wc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},subject:{type:"string"}},required:["groupJid","subject"],...Te("groupJid","subject")},bc={$id:Me(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"}},required:["groupJid","description"],...Te("groupJid","description")}});import{v4 as Ec}from"uuid";var rd,R,Ic,Ii=E(()=>{pe();rd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},R={$id:Ec(),type:"object",properties:{instanceName:{type:"string"},token:{type:"string"},number:{type:"string",pattern:"^\\d+[\\.@\\w-]+"},businessId:{type:"string"},qrcode:{type:"boolean"},Integration:{type:"string",enum:Object.values(D)},rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"},proxyHost:{type:"string"},proxyPort:{type:"string"},proxyProtocol:{type:"string"},proxyUsername:{type:"string"},proxyPassword:{type:"string"},webhookUrl:{type:"string"},webhookByEvents:{type:"boolean"},webhookBase64:{type:"boolean"},webhookEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},rabbitmqEnabled:{type:"boolean"},rabbitmqEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},sqsEnabled:{type:"boolean"},sqsEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},chatwootAccountId:{type:"string"},chatwootToken:{type:"string"},chatwootUrl:{type:"string"},chatwootSignMsg:{type:"boolean"},chatwootReopenConversation:{type:"boolean"},chatwootConversationPending:{type:"boolean"},chatwootImportContacts:{type:"boolean"},chatwootNameInbox:{type:"string"},chatwootMergeBrazilContacts:{type:"boolean"},chatwootImportMessages:{type:"boolean"},chatwootDaysLimitImportMessages:{type:"number"}},...rd("instanceName")},Ic={$id:Ec(),type:"object",properties:{presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["presence"]}});import{v4 as od}from"uuid";var ad,cd,Mc,Tc=E(()=>{ad=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},cd={type:"string",description:"Invalid format"},Mc={$id:od(),type:"object",properties:{number:{...cd},labelId:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["number","labelId","action"],...ad("number","labelId","action")}});import{v4 as ye}from"uuid";var ht,Ce,Cc,Je,vc,Ac,Rc,Dc,Pc,xc,Oc,_c,Nc,kc,Bc,Lc,Fc,Uc=E(()=>{ht=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ce={type:"string",description:"Invalid format"},Cc={$id:ye(),type:"object",properties:{number:{...Ce},name:{type:"string"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","language"]},Je={properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id"],...ht("id")},message:{type:"object"}}},vc={$id:ye(),type:"object",properties:{number:{...Ce},isVideo:{type:"boolean",enum:[!0,!1]},callDuration:{type:"integer",minimum:1,maximum:15}},required:["number","callDuration"]},Ac={$id:ye(),type:"object",properties:{number:{...Ce},text:{type:"string"},linkPreview:{type:"boolean"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","text"]},Rc={$id:ye(),type:"object",properties:{number:{...Ce},mediatype:{type:"string",enum:["image","document","video","audio"]},mimetype:{type:"string"},media:{type:"string"},fileName:{type:"string"},caption:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","mediatype"]},Dc={$id:ye(),type:"object",properties:{number:{...Ce},video:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Pc={$id:ye(),type:"object",properties:{number:{...Ce},audio:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},xc={$id:ye(),type:"object",properties:{type:{type:"string",enum:["text","image","audio","video"]},content:{type:"string"},caption:{type:"string"},backgroundColor:{type:"string"},font:{type:"integer",minimum:0,maximum:5},statusJidList:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"statusJidList" must be an array of numeric strings'}},allContacts:{type:"boolean",enum:[!0,!1]}},required:["type"]},Oc={$id:ye(),type:"object",properties:{number:{...Ce},sticker:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},_c={$id:ye(),type:"object",properties:{number:{...Ce},latitude:{type:"number"},longitude:{type:"number"},name:{type:"string"},address:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","latitude","longitude","name","address"]},Nc={$id:ye(),type:"object",properties:{number:{...Ce},contact:{type:"array",items:{type:"object",properties:{fullName:{type:"string"},wuid:{type:"string",minLength:10,pattern:"\\d+",description:'"wuid" must be a numeric string'},phoneNumber:{type:"string",minLength:10},organization:{type:"string"},email:{type:"string"},url:{type:"string"}},required:["fullName","phoneNumber"],...ht("fullName")},minItems:1,uniqueItems:!0}},required:["number","contact"]},kc={$id:ye(),type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","remoteJid","fromMe"],...ht("id","remoteJid")},reaction:{type:"string"}},required:["key","reaction"]},Bc={$id:ye(),type:"object",properties:{number:{...Ce},name:{type:"string"},selectableCount:{type:"integer",minimum:0,maximum:10},values:{type:"array",minItems:2,maxItems:10,uniqueItems:!0,items:{type:"string"}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","name","selectableCount","values"]},Lc={$id:ye(),type:"object",properties:{number:{...Ce},title:{type:"string"},description:{type:"string"},footerText:{type:"string"},buttonText:{type:"string"},sections:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},rows:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},description:{type:"string"},rowId:{type:"string"}},required:["title","rowId"],...ht("title","description","rowId")}}},required:["title","rows"],...ht("title")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","title","footerText","buttonText","sections"]},Fc={$id:ye(),type:"object",properties:{number:{...Ce},thumbnailUrl:{type:"string"},title:{type:"string"},description:{type:"string"},footer:{type:"string"},buttons:{type:"array",items:{type:"object",properties:{type:{type:"string",enum:["reply","copy","url","call","pix"]},displayText:{type:"string"},id:{type:"string"},url:{type:"string"},phoneNumber:{type:"string"},currency:{type:"string"},name:{type:"string"},keyType:{type:"string",enum:["phone","email","cpf","cnpj","random"]},key:{type:"string"}},required:["type"],...ht("id","url","phoneNumber")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...Je},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]}});import{v4 as pd}from"uuid";var ld,Jc,Wc=E(()=>{ld=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Jc={$id:pd(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},host:{type:"string"},port:{type:"string"},protocol:{type:"string"},username:{type:"string"},password:{type:"string"}},required:["enabled","host","port","protocol"],...ld("enabled","host","port","protocol")}});import{v4 as ud}from"uuid";var dd,$c,qc=E(()=>{dd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},$c={$id:ud(),type:"object",properties:{rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"}},required:["rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory"],...dd("rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory")}});import{v4 as gd}from"uuid";var md,Gc,Hc=E(()=>{md=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Gc={$id:gd(),type:"object",properties:{name:{type:"string"},category:{type:"string",enum:["AUTHENTICATION","MARKETING","UTILITY"]},allowCategoryChange:{type:"boolean"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","category","language","components"],...md("name","category","language","components")}});import{v4 as hd}from"uuid";var yd,Vc,jc=E(()=>{yd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Vc={$id:hd(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},accountId:{type:"string"},token:{type:"string"},url:{type:"string"},signMsg:{type:"boolean",enum:[!0,!1]},signDelimiter:{type:["string","null"]},nameInbox:{type:["string","null"]},reopenConversation:{type:"boolean",enum:[!0,!1]},conversationPending:{type:"boolean",enum:[!0,!1]},autoCreate:{type:"boolean",enum:[!0,!1]},importContacts:{type:"boolean",enum:[!0,!1]},mergeBrazilContacts:{type:"boolean",enum:[!0,!1]},importMessages:{type:"boolean",enum:[!0,!1]},daysLimitImportMessages:{type:"number"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","accountId","token","url","signMsg","reopenConversation","conversationPending"],...yd("enabled","accountId","token","url","signMsg","reopenConversation","conversationPending")}});import{v4 as Mi}from"uuid";var Ti,Er,Kc,Yc,Qc,zc=E(()=>{Ti=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Er={$id:Mi(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},botType:{type:"string",enum:["chatBot","textGenerator","agent","workflow"]},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","botType","triggerType"],...Ti("enabled","botType","triggerType")},Kc={$id:Mi(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ti("remoteJid","status")},Yc={$id:Mi(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},difyIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...Ti("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},Qc={$id:Mi(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ti("remoteJid","action")}});import{v4 as Ci}from"uuid";var vi,Ir,Xc,Zc,ep,Mr=E(()=>{vi=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ir={$id:Ci(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","apiUrl","triggerType"],...vi("enabled","apiUrl","triggerType")},Xc={$id:Ci(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...vi("remoteJid","status")},Zc={$id:Ci(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...vi("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},ep={$id:Ci(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...vi("remoteJid","action")}});import{v4 as Ai}from"uuid";var Ri,Tr,tp,sp,ip,Cr=E(()=>{Ri=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Tr={$id:Ai(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","apiUrl","triggerType"],...Ri("enabled","apiUrl","triggerType")},tp={$id:Ai(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ri("remoteJid","status")},sp={$id:Ai(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...Ri("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},ip={$id:Ai(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ri("remoteJid","action")}});import{v4 as xt}from"uuid";var Ot,vr,np,rp,op,ap,cp=E(()=>{Ot=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},vr={$id:xt(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},openaiCredsId:{type:"string"},botType:{type:"string",enum:["assistant","chatCompletion"]},assistantId:{type:"string"},functionUrl:{type:"string"},model:{type:"string"},systemMessages:{type:"array",items:{type:"string"}},assistantMessages:{type:"array",items:{type:"string"}},userMessages:{type:"array",items:{type:"string"}},maxTokens:{type:"integer"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","openaiCredsId","botType","triggerType"],...Ot("enabled","openaiCredsId","botType","triggerType")},np={$id:xt(),type:"object",properties:{name:{type:"string"},apiKey:{type:"string"}},required:["name","apiKey"],...Ot("name","apiKey")},rp={$id:xt(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ot("remoteJid","status")},op={$id:xt(),type:"object",properties:{openaiCredsId:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},speechToText:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}},openaiIdFallback:{type:"string"}},required:["openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...Ot("openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},ap={$id:xt(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ot("remoteJid","action")}});import{v4 as _t}from"uuid";var Nt,Ar,pp,lp,up,dp,gp=E(()=>{Nt=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ar={$id:_t(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},url:{type:"string"},typebot:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","url","typebot","triggerType"],...Nt("enabled","url","typebot","triggerType")},pp={$id:_t(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Nt("remoteJid","status")},lp={$id:_t(),type:"object",properties:{remoteJid:{type:"string"},url:{type:"string"},typebot:{type:"string"}},required:["remoteJid","url","typebot"],...Nt("remoteJid","url","typebot")},up={$id:_t(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},typebotIdFallback:{type:"string"},ignoreJids:{type:"array",items:{type:"string"}}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe"],...Nt("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe")},dp={$id:_t(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Nt("remoteJid","action")}});var mp=E(()=>{jc();zc();Mr();Cr();cp();gp()});import{v4 as fd}from"uuid";var wd,hp,yp=E(()=>{Fe();wd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},hp={$id:fd(),type:"object",properties:{pusher:{type:"object",properties:{enabled:{type:"boolean"},appId:{type:"string"},key:{type:"string"},secret:{type:"string"},cluster:{type:"string"},useTLS:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:se.events}}},required:["enabled","appId","key","secret","cluster","useTLS"],...wd("enabled","appId","key","secret","cluster","useTLS")}},required:["pusher"]}});import{v4 as bd}from"uuid";var Sd,fp,wp=E(()=>{Fe();Sd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},fp={$id:bd(),type:"object",properties:{webhook:{type:"object",properties:{enabled:{type:"boolean"},url:{type:"string"},headers:{type:"object"},byEvents:{type:"boolean"},base64:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:se.events}}},required:["enabled","url"],...Sd("enabled","url")}},required:["webhook"]}});import{v4 as Ed}from"uuid";var yt,bp=E(()=>{Fe();yp();wp();yt={$id:Ed(),type:"object",properties:{websocket:{$ref:"#/$defs/event"},rabbitmq:{$ref:"#/$defs/event"},sqs:{$ref:"#/$defs/event"}},$defs:{event:{type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},events:{type:"array",minItems:0,items:{type:"string",enum:se.events}}},required:["enabled"]}}}});var ie=E(()=>{cc();Sc();Ii();Tc();Uc();Wc();qc();Hc();mp();bp()});import{Router as Id}from"express";var Di,Sp=E(()=>{Q();ce();br();V();B();ie();Di=class extends P{constructor(...e){super();this.router=Id();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Vc,ClassRef:bi,execute:(n,o)=>hi.createChatwoot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>hi.findChatwoot(n)});s.status(200).json(r)}).post(this.routerPath("webhook"),async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:(n,o)=>hi.receiveWebhook(n,o)});s.status(200).json(r)})}}});var ve,ft=E(()=>{ve=class{}});var kt,Pi,Ep=E(()=>{kt=class{},Pi=class{}});import{Router as Md}from"express";var xi,Ip=E(()=>{Q();ft();ce();Ep();V();B();ie();xi=class extends P{constructor(...e){super();this.router=Md();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Er,ClassRef:kt,execute:(n,o)=>fe.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>fe.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>fe.fetchBot(n,t.params.difyId)});s.status(200).json(r)}).put(this.routerPath("update/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Er,ClassRef:kt,execute:(n,o)=>fe.updateBot(n,t.params.difyId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>fe.deleteBot(n,t.params.difyId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Yc,ClassRef:Pi,execute:(n,o)=>fe.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>fe.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Kc,ClassRef:A,execute:(n,o)=>fe.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:difyId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>fe.fetchSessions(n,t.params.difyId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Qc,ClassRef:ve,execute:(n,o)=>fe.ignoreJid(n,o)});s.status(200).json(r)})}}});var Oi,Bt,_i,Mp=E(()=>{Oi=class{},Bt=class{},_i=class{}});import{Router as Td}from"express";var Ni,Tp=E(()=>{Q();ft();ce();Mp();V();B();ie();Ni=class extends P{constructor(...e){super();this.router=Td();this.router.post(this.routerPath("creds"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:np,ClassRef:Oi,execute:(n,o)=>oe.createOpenaiCreds(n,o)});s.status(201).json(r)}).get(this.routerPath("creds"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.findOpenaiCreds(n)});s.status(200).json(r)}).delete(this.routerPath("creds/:openaiCredsId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.deleteCreds(n,t.params.openaiCredsId)});s.status(200).json(r)}).post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:vr,ClassRef:Bt,execute:(n,o)=>oe.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.fetchBot(n,t.params.openaiBotId)});s.status(200).json(r)}).put(this.routerPath("update/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:vr,ClassRef:Bt,execute:(n,o)=>oe.updateBot(n,t.params.openaiBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.deleteBot(n,t.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:op,ClassRef:_i,execute:(n,o)=>oe.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:rp,ClassRef:A,execute:(n,o)=>oe.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:openaiBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.fetchSessions(n,t.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ap,ClassRef:ve,execute:(n,o)=>oe.ignoreJid(n,o)});s.status(200).json(r)}).get(this.routerPath("getModels"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>oe.getModels(n)});s.status(200).json(r)})}}});var Lt,ki,Cp=E(()=>{Lt=class{},ki=class{}});import{Router as Cd}from"express";var Bi,vp=E(()=>{Q();ft();ce();Cp();V();B();ie();Bi=class extends P{constructor(...e){super();this.router=Cd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ar,ClassRef:Lt,execute:(n,o)=>me.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>me.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>me.fetchBot(n,t.params.typebotId)});s.status(200).json(r)}).put(this.routerPath("update/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ar,ClassRef:Lt,execute:(n,o)=>me.updateBot(n,t.params.typebotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>me.deleteBot(n,t.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:up,ClassRef:ki,execute:(n,o)=>me.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>me.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("start"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:lp,ClassRef:A,execute:(n,o)=>me.startBot(n,o)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:pp,ClassRef:A,execute:(n,o)=>me.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:typebotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>me.fetchSessions(n,t.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:dp,ClassRef:ve,execute:(n,o)=>me.ignoreJid(n,o)});s.status(200).json(r)})}}});var Ft,Li,Ap=E(()=>{Ft=class{},Li=class{}});import{Router as vd}from"express";var Fi,Rp=E(()=>{Q();ft();ce();V();B();Ii();Ap();Mr();Fi=class extends P{constructor(...e){super();this.router=vd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ir,ClassRef:Ft,execute:(n,o)=>we.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>we.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>we.fetchBot(n,t.params.evolutionBotId)});s.status(200).json(r)}).put(this.routerPath("update/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ir,ClassRef:Ft,execute:(n,o)=>we.updateBot(n,t.params.evolutionBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>we.deleteBot(n,t.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Zc,ClassRef:Li,execute:(n,o)=>we.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>we.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Xc,ClassRef:A,execute:(n,o)=>we.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:evolutionBotId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>we.fetchSessions(n,t.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ep,ClassRef:ve,execute:(n,o)=>we.ignoreJid(n,o)});s.status(200).json(r)})}}});var Ut,Ui,Dp=E(()=>{Ut=class{},Ui=class{}});import{Router as Ad}from"express";var Ji,Pp=E(()=>{Q();ft();ce();V();B();Ii();Dp();Cr();Ji=class extends P{constructor(...e){super();this.router=Ad();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Tr,ClassRef:Ut,execute:(n,o)=>be.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>be.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>be.fetchBot(n,t.params.flowiseId)});s.status(200).json(r)}).put(this.routerPath("update/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Tr,ClassRef:Ut,execute:(n,o)=>be.updateBot(n,t.params.flowiseId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>be.deleteBot(n,t.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("settings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:sp,ClassRef:Ui,execute:(n,o)=>be.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>be.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:tp,ClassRef:A,execute:(n,o)=>be.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:flowiseId"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>be.fetchSessions(n,t.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ip,ClassRef:ve,execute:(n,o)=>be.ignoreJid(n,o)});s.status(200).json(r)})}}});import{Router as Rd}from"express";var Wi,xp=E(()=>{Sp();Ip();Tp();vp();Rp();Pp();Wi=class{constructor(...i){this.router=Rd(),this.router.use("/evolutionBot",new Fi(...i).router),this.router.use("/chatwoot",new Di(...i).router),this.router.use("/typebot",new Bi(...i).router),this.router.use("/openai",new Ni(...i).router),this.router.use("/dify",new xi(...i).router),this.router.use("/flowise",new Ji(...i).router)}}});import{Router as Dd}from"express";var $i,Op=E(()=>{Q();ce();ot();V();B();ie();$i=class extends P{constructor(...e){super();this.router=Dd();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:hp,ClassRef:Ie,execute:(n,o)=>Z.pusher.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>Z.pusher.get(n.instanceName)});s.status(200).json(r)})}}});import{Router as Pd}from"express";var qi,_p=E(()=>{Q();ce();ot();V();B();ie();qi=class extends P{constructor(...e){super();this.router=Pd();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:yt,ClassRef:Ie,execute:(n,o)=>Z.rabbitmq.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>Z.rabbitmq.get(n.instanceName)});s.status(200).json(r)})}}});import{Router as xd}from"express";var Gi,Np=E(()=>{Q();ce();ot();V();B();ie();Gi=class extends P{constructor(...e){super();this.router=xd();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:yt,ClassRef:Ie,execute:(n,o)=>Z.sqs.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>Z.sqs.get(n.instanceName)});s.status(200).json(r)})}}});import{Router as Od}from"express";var Hi,kp=E(()=>{Q();ce();ot();V();B();ie();Hi=class extends P{constructor(e,...t){super();this.configService=e;this.router=Od();this.router.post(this.routerPath("set"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:fp,ClassRef:Ie,execute:(o,a)=>Z.webhook.set(o.instanceName,a)});r.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:R,ClassRef:A,execute:o=>Z.webhook.get(o.instanceName)});r.status(200).json(n)})}}});import{Router as _d}from"express";var Vi,Bp=E(()=>{Q();ce();ot();V();B();ie();Vi=class extends P{constructor(...e){super();this.router=_d();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:yt,ClassRef:Ie,execute:(n,o)=>Z.websocket.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>Z.websocket.get(n.instanceName)});s.status(200).json(r)})}}});import{Router as Nd}from"express";var ji,Lp=E(()=>{Op();_p();Np();kp();Bp();ji=class{constructor(i,...e){this.router=Nd(),this.router.use("/webhook",new Hi(i,...e).router),this.router.use("/websocket",new Vi(...e).router),this.router.use("/rabbitmq",new qi(...e).router),this.router.use("/pusher",new $i(...e).router),this.router.use("/sqs",new Gi(...e).router)}}});var Jt,Fp=E(()=>{Jt=class{}});import{v4 as Up}from"uuid";var Jp,Wp,$p,qp=E(()=>{Jp=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Wp={$id:Up(),type:"object",properties:{id:{type:"string"},type:{type:"string"},messageId:{type:"integer"}},...Jp("id","type","messageId")},$p={$id:Up(),type:"object",properties:{id:{type:"string",pattern:"\\d+",minLength:1},expiry:{type:"string",pattern:"\\d+",minLength:1}},...Jp("id"),required:["id"]}});import{Router as kd}from"express";var Ki,Gp=E(()=>{Q();Fp();qp();V();B();Ki=class extends P{constructor(...e){super();this.router=kd();this.router.post(this.routerPath("getMedia"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Wp,ClassRef:Jt,execute:(n,o)=>gr.getMedia(n,o)});s.status(201).json(r)}).post(this.routerPath("getMediaUrl"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:$p,ClassRef:Jt,execute:(n,o)=>gr.getMediaUrl(n,o)});s.status(200).json(r)})}}});import{Router as Bd}from"express";var Yi,Hp=E(()=>{Gp();Yi=class{constructor(...i){this.router=Bd(),this.router.use("/s3",new Ki(...i).router)}}});var Rr,Qi,Vp=E(()=>{Rr=class{},Qi=class extends Rr{}});import{Router as Ld}from"express";var zi,jp=E(()=>{Q();Vp();B();ie();V();zi=class extends P{constructor(...e){super();this.router=Ld();this.router.post(this.routerPath("offer"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:vc,ClassRef:Qi,execute:(n,o)=>Oa.offerCall(n,o)});return s.status(201).json(r)})}}});import{Router as Fd}from"express";var Xi,Kp=E(()=>{Q();tr();ce();Vt();B();ie();V();Xi=class extends P{constructor(...e){super();this.router=Fd();this.router.post(this.routerPath("whatsappNumbers"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ka,ClassRef:Is,execute:(n,o)=>X.whatsappNumber(n,o)});return s.status(200).json(r)}).post(this.routerPath("markMessageAsRead"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ya,ClassRef:Cs,execute:(n,o)=>X.readMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("archiveChat"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Qa,ClassRef:vs,execute:(n,o)=>X.archiveChat(n,o)});return s.status(201).json(r)}).post(this.routerPath("markChatUnread"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:za,ClassRef:As,execute:(n,o)=>X.markChatUnread(n,o)});return s.status(201).json(r)}).delete(this.routerPath("deleteMessageForEveryone"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Xa,ClassRef:Ds,execute:(n,o)=>X.deleteMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("fetchProfilePictureUrl"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Dt,ClassRef:It,execute:(n,o)=>X.fetchProfilePicture(n,o)});return s.status(200).json(r)}).post(this.routerPath("getBase64FromMediaMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:Es,execute:(n,o)=>X.getBase64FromMediaMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Za,ClassRef:Os,execute:(n,o)=>X.updateMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("sendPresence"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ec,ClassRef:xs,execute:(n,o)=>X.sendPresence(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateBlockStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:tc,ClassRef:_s,execute:(n,o)=>X.blockUser(n,o)});return s.status(201).json(r)}).post(this.routerPath("findContacts"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Sr,ClassRef:Qe,execute:(n,o)=>X.fetchContacts(n,o)});return s.status(200).json(r)}).post(this.routerPath("findMessages"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:sc,ClassRef:Qe,execute:(n,o)=>X.fetchMessages(n,o)});return s.status(200).json(r)}).post(this.routerPath("findStatusMessage"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ic,ClassRef:Qe,execute:(n,o)=>X.fetchStatusMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("findChats"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Sr,ClassRef:Qe,execute:(n,o)=>X.fetchChats(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchBusinessProfile"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Dt,ClassRef:mt,execute:(n,o)=>X.fetchBusinessProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchProfile"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:ac,ClassRef:It,execute:(n,o)=>X.fetchProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileName"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:rc,ClassRef:Ms,execute:(n,o)=>X.updateProfileName(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileStatus"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:oc,ClassRef:Ts,execute:(n,o)=>X.updateProfileStatus(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfilePicture"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Dt,ClassRef:mt,execute:(n,o)=>X.updateProfilePicture(n,o)});return s.status(200).json(r)}).delete(this.routerPath("removeProfilePicture"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Dt,ClassRef:mt,execute:n=>X.removeProfilePicture(n)});return s.status(200).json(r)}).get(this.routerPath("fetchPrivacySettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:A,execute:n=>X.fetchPrivacySettings(n)});return s.status(200).json(r)}).post(this.routerPath("updatePrivacySettings"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:nc,ClassRef:Rs,execute:(n,o)=>X.updatePrivacySettings(n,o)});return s.status(201).json(r)})}}});var Zi,en,tn,sn,xe,nn,rn,on,an,cn,pn,ln,Yp=E(()=>{Zi=class{},en=class{},tn=class{},sn=class{},xe=class{},nn=class{},rn=class{},on=class{},an=class{},cn=class extends xe{},pn=class extends xe{},ln=class extends xe{}});import{Router as Ud}from"express";var un,Qp=E(()=>{Q();Yp();B();ie();V();un=class extends P{constructor(...e){super();this.router=Ud();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:pc,ClassRef:Zi,execute:(n,o)=>ae.createGroup(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupSubject"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:wc,ClassRef:tn,execute:(n,o)=>ae.updateGroupSubject(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupPicture"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:fc,ClassRef:en,execute:(n,o)=>ae.updateGroupPicture(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupDescription"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:bc,ClassRef:sn,execute:(n,o)=>ae.updateGroupDescription(n,o)});s.status(201).json(r)}).get(this.routerPath("findGroupInfos"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Pt,ClassRef:xe,execute:(n,o)=>ae.findGroupInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchAllGroups"),...e,async(t,s)=>{let r=await this.getParticipantsValidate({request:t,schema:lc,ClassRef:nn,execute:(n,o)=>ae.fetchAllGroups(n,o)});s.status(200).json(r)}).get(this.routerPath("participants"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Pt,ClassRef:xe,execute:(n,o)=>ae.findParticipants(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteCode"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Pt,ClassRef:xe,execute:(n,o)=>ae.inviteCode(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteInfo"),...e,async(t,s)=>{let r=await this.inviteCodeValidate({request:t,schema:dc,ClassRef:rn,execute:(n,o)=>ae.inviteInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("acceptInviteCode"),...e,async(t,s)=>{let r=await this.inviteCodeValidate({request:t,schema:gc,ClassRef:on,execute:(n,o)=>ae.acceptInviteCode(n,o)});s.status(200).json(r)}).post(this.routerPath("sendInvite"),...e,async(t,s)=>{let r=await this.groupNoValidate({request:t,schema:uc,ClassRef:an,execute:(n,o)=>ae.sendInvite(n,o)});s.status(200).json(r)}).post(this.routerPath("revokeInviteCode"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:Pt,ClassRef:xe,execute:(n,o)=>ae.revokeInviteCode(n,o)});s.status(201).json(r)}).post(this.routerPath("updateParticipant"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:mc,ClassRef:cn,execute:(n,o)=>ae.updateGParticipate(n,o)});s.status(201).json(r)}).post(this.routerPath("updateSetting"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:hc,ClassRef:pn,execute:(n,o)=>ae.updateGSetting(n,o)});s.status(201).json(r)}).post(this.routerPath("toggleEphemeral"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:yc,ClassRef:ln,execute:(n,o)=>ae.toggleEphemeral(n,o)});s.status(201).json(r)}).delete(this.routerPath("leaveGroup"),...e,async(t,s)=>{let r=await this.groupValidate({request:t,schema:{},ClassRef:xe,execute:(n,o)=>ae.leaveGroup(n,o)});s.status(200).json(r)})}}});import{Router as Jd}from"express";var dn,zp=E(()=>{Q();ce();B();ie();V();dn=class extends P{constructor(e,...t){super();this.configService=e;this.router=Jd();this.router.post("/create",...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:R,ClassRef:A,execute:o=>Ue.createInstance(o)});return r.status(201).json(n)}).post(this.routerPath("restart"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Ue.restartInstance(o)});return r.status(200).json(n)}).get(this.routerPath("connect"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Ue.connectToWhatsapp(o)});return r.status(200).json(n)}).get(this.routerPath("connectionState"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Ue.connectionState(o)});return r.status(200).json(n)}).get(this.routerPath("fetchInstances",!1),...t,async(s,r)=>{let n=s.get("apikey"),o=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:a=>Ue.fetchInstances(a,n)});return r.status(200).json(o)}).post(this.routerPath("setPresence"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:Ic,ClassRef:Ei,execute:(o,a)=>Ue.setPresence(o,a)});return r.status(201).json(n)}).delete(this.routerPath("logout"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Ue.logout(o)});return r.status(200).json(n)}).delete(this.routerPath("delete"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:A,execute:o=>Ue.deleteInstance(o)});return r.status(200).json(n)})}}});var gn,mn,Xp=E(()=>{gn=class{},mn=class{}});import{Router as Wd}from"express";var hn,Zp=E(()=>{Q();Xp();B();ie();V();hn=class extends P{constructor(...e){super();this.router=Wd();this.router.get(this.routerPath("findLabels"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:gn,execute:n=>yr.fetchLabels(n)});return s.status(200).json(r)}).post(this.routerPath("handleLabel"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Mc,ClassRef:mn,execute:(n,o)=>yr.handleLabel(n,o)});return s.status(200).json(r)})}}});var yn,el=E(()=>{yn=class{}});import{Router as $d}from"express";var fn,tl=E(()=>{Q();ce();el();B();ie();V();fn=class extends P{constructor(...e){super();this.router=$d();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Jc,ClassRef:yn,execute:(n,o)=>mi.createProxy(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:R,ClassRef:A,execute:n=>mi.findProxy(n)});s.status(200).json(r)})}}});var Se,wn,bn,Sn,Wt,En,In,Mn,Tn,Cn,vn,An,Rn,sl=E(()=>{Se=class{},wn=class extends Se{},bn=class extends Se{},Sn=class extends Se{},Wt=class extends Se{},En=class extends Se{},In=class extends Se{},Mn=class extends Se{},Tn=class extends Se{},Cn=class extends Se{},vn=class extends Se{},An=class extends Se{},Rn=class{}});import{Router as qd}from"express";import il from"multer";var $t,Dn,nl=E(()=>{Q();sl();B();ie();V();$t=il({storage:il.memoryStorage()}),Dn=class extends P{constructor(...e){super();this.router=qd();this.router.post(this.routerPath("sendTemplate"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Cc,ClassRef:vn,execute:(n,o)=>he.sendTemplate(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendText"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Ac,ClassRef:wn,execute:(n,o)=>he.sendText(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendMedia"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Rc,ClassRef:Wt,execute:o=>he.sendMedia(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendPtv"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Dc,ClassRef:En,execute:o=>he.sendPtv(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendWhatsAppAudio"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Pc,ClassRef:Wt,execute:o=>he.sendWhatsAppAudio(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendStatus"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:xc,ClassRef:bn,execute:o=>he.sendStatus(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendSticker"),...e,$t.single("file"),async(t,s)=>{let r=t.body,n=await this.dataValidate({request:t,schema:Oc,ClassRef:In,execute:o=>he.sendSticker(o,r,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendLocation"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:_c,ClassRef:Tn,execute:(n,o)=>he.sendLocation(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendContact"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Nc,ClassRef:An,execute:(n,o)=>he.sendContact(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendReaction"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:kc,ClassRef:Rn,execute:(n,o)=>he.sendReaction(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendPoll"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Bc,ClassRef:Sn,execute:(n,o)=>he.sendPoll(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendList"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Lc,ClassRef:Cn,execute:(n,o)=>he.sendList(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendButtons"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:Fc,ClassRef:Mn,execute:(n,o)=>he.sendButtons(n,o)});return s.status(201).json(r)})}}});var Pn,rl=E(()=>{Pn=class{}});import{Router as Gd}from"express";var xn,ol=E(()=>{Q();ce();rl();B();ie();V();xn=class extends P{constructor(...e){super();this.router=Gd();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:$c,ClassRef:Pn,execute:(n,o)=>hr.createSettings(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...e,async(t,s)=>{let r=await this.dataValidate({request:t,schema:null,ClassRef:A,execute:n=>hr.findSettings(n)});s.status(200).json(r)})}}});var On,al=E(()=>{On=class{}});import{Router as Hd}from"express";var _n,cl=E(()=>{Q();ce();al();B();ie();V();_n=class extends P{constructor(e,...t){super();this.configService=e;this.router=Hd();this.router.post(this.routerPath("create"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:Gc,ClassRef:On,execute:(o,a)=>mr.createTemplate(o,a)});r.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,r)=>{let n=await this.dataValidate({request:s,schema:R,ClassRef:A,execute:o=>mr.findTemplate(o)});r.status(200).json(n)})}}});import Vd,{Router as jd}from"express";import pl from"path";var Nn,ll=E(()=>{Q();Nn=class extends P{constructor(){super(),this.router=jd();let i=pl.join(process.cwd(),"manager","dist"),e=pl.join(i,"index.html");this.router.use(Vd.static(i)),this.router.get("*",(t,s)=>{s.sendFile(e)})}}});import{Router as Kd}from"express";import Dr from"fs";import Yd from"mime";import ul from"path";var qt,dl,Ae,Qd,zd,V=E(()=>{ka();Ua();Wa();Ga();xp();Lp();Hp();z();jp();Kp();Qp();zp();Zp();tl();nl();ol();cl();ll();qt=Kd(),dl=T.get("SERVER"),Ae=[La,Fa,fr.apikey],Qd=new Ja,zd=JSON.parse(Dr.readFileSync("./package.json","utf8"));dl.DISABLE_MANAGER||qt.use("/manager",new Nn().router);qt.get("/assets/*",(p,i)=>{let e=p.params[0],t=ul.join(process.cwd(),"manager","dist"),s=ul.join(t,"assets/",e);Dr.existsSync(s)?(i.set("Content-Type",Yd.getType(s)||"text/css"),i.send(Dr.readFileSync(s))):i.status(404).send("File not found")});qt.use((p,i,e)=>Qd.collectTelemetry(p,i,e)).get("/",(p,i)=>{i.status(200).json({status:200,message:"Welcome to the Evolution API, it is working!",version:zd.version,clientName:process.env.DATABASE_CONNECTION_CLIENT_NAME,manager:dl.DISABLE_MANAGER?void 0:`${p.protocol}://${p.get("host")}/manager`,documentation:"https://doc.evolution-api.com"})}).post("/verify-creds",fr.apikey,async(p,i)=>i.status(200).json({status:200,message:"Credentials are valid",facebookAppId:process.env.FACEBOOK_APP_ID,facebookConfigId:process.env.FACEBOOK_CONFIG_ID,facebookUserToken:process.env.FACEBOOK_USER_TOKEN})).use("/instance",new dn(T,...Ae).router).use("/message",new Dn(...Ae).router).use("/call",new zi(...Ae).router).use("/chat",new Xi(...Ae).router).use("/group",new un(...Ae).router).use("/template",new _n(T,...Ae).router).use("/settings",new xn(...Ae).router).use("/proxy",new fn(...Ae).router).use("/label",new hn(...Ae).router).use("",new wi(T).router).use("",new ji(T,...Ae).router).use("",new Wi(...Ae).router).use("",new Yi(...Ae).router)});function gl(){process.on("uncaughtException",(p,i)=>{new C("uncaughtException").error({origin:i,stderr:process.stderr.fd,error:p})}),process.on("unhandledRejection",(p,i)=>{let e=new C("unhandledRejection");e.error({origin:i,stderr:process.stderr.fd}),e.error(p)})}var ml=E(()=>{_()});import{readFileSync as hl}from"fs";import*as yl from"http";import*as fl from"https";var wt,Gt,Ht,wl=E(()=>{z();Gt=class Gt{static set app(i){Br(this,wt,i)}static get https(){let{FULLCHAIN:i,PRIVKEY:e}=T.get("SSL_CONF");return fl.createServer({cert:hl(i),key:hl(e)},Ln(Gt,wt))}static get http(){return yl.createServer(Ln(Gt,wt))}};wt=new WeakMap,kr(Gt,wt);Ht=Gt});import*as kn from"@sentry/node";import Xd from"axios";import Zd from"compression";import eg from"cors";import Pr,{json as tg,urlencoded as sg}from"express";import{join as xr}from"path";var rg=bl(()=>{Fn();Vt();V();B();z();ml();_();Bs();wl();function ig(){k.loadInstance()}async function ng(){let p=new C("SERVER"),i=Pr(),e=process.env.SENTRY_DSN;e&&(p.info("Sentry - ON"),kn.init({dsn:e,environment:process.env.NODE_ENV||"development",tracesSampleRate:1,profilesSampleRate:1}),kn.setupExpressErrorHandler(i));let t=null;T.get("PROVIDER").ENABLED&&(t=new at(T),await t.onModuleInit(),p.info("Provider:Files - ON")),await new ct(T).onModuleInit(),i.use(eg({origin(o,a){let{ORIGIN:c}=T.get("CORS");return c.includes("*")||c.indexOf(o)!==-1?a(null,!0):a(new Error("Not allowed by CORS"))},methods:[...T.get("CORS").METHODS],credentials:T.get("CORS").CREDENTIALS}),sg({extended:!0,limit:"136mb"}),tg({limit:"136mb"}),Zd()),i.set("view engine","hbs"),i.set("views",xr(Ve,"views")),i.use(Pr.static(xr(Ve,"public"))),i.use("/store",Pr.static(xr(Ve,"store"))),i.use("/",qt),i.use((o,a,c,u)=>{if(o){let d=T.get("WEBHOOK");if(d.EVENTS.ERRORS_WEBHOOK&&d.EVENTS.ERRORS_WEBHOOK!=""&&d.EVENTS.ERRORS){let l=new Date().getTimezoneOffset()*6e4,h=new Date(Date.now()-l).toISOString(),m=T.get("AUTHENTICATION").API_KEY.KEY,f=T.get("SERVER").URL,b={event:"error",data:{error:o.error||"Internal Server Error",message:o.message||"Internal Server Error",status:o.status||500,response:{message:o.message||"Internal Server Error"}},date_time:h,api_key:m,server_url:f};p.error(b);let S=d.EVENTS.ERRORS_WEBHOOK;Xd.create({baseURL:S}).post("",b)}return c.status(o.status||500).json({status:o.status||500,error:o.error||"Internal Server Error",response:{message:o.message||"Internal Server Error"}})}u()},(o,a,c)=>{let{method:u,url:d}=o;a.status(404).json({status:404,error:"Not Found",response:{message:[`Cannot ${u.toUpperCase()} ${d}`]}}),c()});let r=T.get("SERVER");Ht.app=i;let n=Ht[r.TYPE];Z.init(n),n.listen(r.PORT,()=>p.log(r.TYPE.toUpperCase()+" - ON: "+r.PORT)),ig(),gl()}ng()});export default rg();
/**
 * ┌──────────────────────────────────────────────────────────────────────────────┐
 * │ @author jrCleber                                                             │
 * │ @filename use-multi-file-auth-state-provider-files.ts                              │
 * │ Developed by: Cleber Wilson                                                  │
 * │ Creation date: May 31, 2024                                                 │
 * │ Contact: contato@codechat.dev                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @copyright © Cleber Wilson 2023. All rights reserved.                        │
 * │ Licensed under the Apache License, Version 2.0                               │
 * │                                                                              │
 * │  @license "https://github.com/code-chat-br/whatsapp-api/blob/main/LICENSE"   │
 * │                                                                              │
 * │ You may not use this file except in compliance with the License.             │
 * │ You may obtain a copy of the License at                                      │
 * │                                                                              │
 * │    http://www.apache.org/licenses/LICENSE-2.0                                │
 * │                                                                              │
 * │ Unless required by applicable law or agreed to in writing, software          │
 * │ distributed under the License is distributed on an "AS IS" BASIS,            │
 * │ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     │
 * │                                                                              │
 * │ See the License for the specific language governing permissions and          │
 * │ limitations under the License.                                               │
 * │                                                                              │
 * │ @type {AuthState}                                                            │
 * │ @function useMultiFileAuthStateRedisDb                                       │
 * │ @returns {Promise<AuthState>}                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @important                                                                   │
 * │ For any future changes to the code in this file, it is recommended to        │
 * │ contain, together with the modification, the information of the developer    │
 * │ who changed it and the date of modification.                                 │
 * └──────────────────────────────────────────────────────────────────────────────┘
 */
//# sourceMappingURL=main.mjs.map