{"version":3,"sources":["../../src/validate/chat.schema.ts"],"sourcesContent":["import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\nimport { v4 } from 'uuid';\n\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\n  const properties = {};\n  propertyNames.forEach(\n    (property) =>\n      (properties[property] = {\n        minLength: 1,\n        description: `The \"${property}\" cannot be empty`,\n      }),\n  );\n  return {\n    if: {\n      propertyNames: {\n        enum: [...propertyNames],\n      },\n    },\n    then: { properties },\n  };\n};\n\nconst numberDefinition: JSONSchema7Definition = {\n  type: 'string',\n  description: 'Invalid format',\n};\n\nexport const whatsappNumberSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    numbers: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n      items: {\n        type: 'string',\n        description: '\"numbers\" must be an array of numeric strings',\n      },\n    },\n  },\n};\n\nexport const readMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    readMessages: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n      items: {\n        properties: {\n          id: { type: 'string' },\n          fromMe: { type: 'boolean', enum: [true, false] },\n          remoteJid: { type: 'string' },\n        },\n        required: ['id', 'fromMe', 'remoteJid'],\n        ...isNotEmpty('id', 'remoteJid'),\n      },\n    },\n  },\n  required: ['readMessages'],\n};\n\nexport const archiveChatSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    chat: { type: 'string' },\n    lastMessage: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'object',\n          properties: {\n            id: { type: 'string' },\n            remoteJid: { type: 'string' },\n            fromMe: { type: 'boolean', enum: [true, false] },\n          },\n          required: ['id', 'fromMe', 'remoteJid'],\n          ...isNotEmpty('id', 'remoteJid'),\n        },\n        messageTimestamp: { type: 'integer', minLength: 1 },\n      },\n      required: ['key'],\n      ...isNotEmpty('messageTimestamp'),\n    },\n    archive: { type: 'boolean', enum: [true, false] },\n  },\n  required: ['archive'],\n};\n\nexport const markChatUnreadSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    chat: { type: 'string' },\n    lastMessage: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'object',\n          properties: {\n            id: { type: 'string' },\n            remoteJid: { type: 'string' },\n            fromMe: { type: 'boolean', enum: [true, false] },\n          },\n          required: ['id', 'fromMe', 'remoteJid'],\n          ...isNotEmpty('id', 'remoteJid'),\n        },\n        messageTimestamp: { type: 'integer', minLength: 1 },\n      },\n      required: ['key'],\n      ...isNotEmpty('messageTimestamp'),\n    },\n  },\n  required: ['lastMessage'],\n};\n\nexport const deleteMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    id: { type: 'string' },\n    fromMe: { type: 'boolean', enum: [true, false] },\n    remoteJid: { type: 'string' },\n    participant: { type: 'string' },\n  },\n  required: ['id', 'fromMe', 'remoteJid'],\n  ...isNotEmpty('id', 'remoteJid', 'participant'),\n};\n\nexport const profilePictureSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    picture: { type: 'string' },\n  },\n};\n\nexport const updateMessageSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    text: { type: 'string' },\n    key: {\n      type: 'object',\n      properties: {\n        id: { type: 'string' },\n        remoteJid: { type: 'string' },\n        fromMe: { type: 'boolean', enum: [true, false] },\n      },\n      required: ['id', 'fromMe', 'remoteJid'],\n      ...isNotEmpty('id', 'remoteJid'),\n    },\n  },\n  ...isNotEmpty('number', 'text', 'key'),\n};\n\nexport const presenceSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { ...numberDefinition },\n    delay: { type: 'number' },\n    presence: {\n      type: 'string',\n      enum: ['unavailable', 'available', 'composing', 'recording', 'paused'],\n    },\n  },\n  required: ['number', 'presence', 'delay'],\n};\n\nexport const blockUserSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { type: 'string' },\n    status: { type: 'string', enum: ['block', 'unblock'] },\n  },\n  required: ['number', 'status'],\n  ...isNotEmpty('number', 'status'),\n};\n\nexport const contactValidateSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string', minLength: 1 },\n        pushName: { type: 'string', minLength: 1 },\n        id: { type: 'string', minLength: 1 },\n      },\n      ...isNotEmpty('_id', 'id', 'pushName'),\n    },\n  },\n};\n\nexport const messageValidateSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string', minLength: 1 },\n        key: {\n          type: 'object',\n          if: {\n            propertyNames: {\n              enum: ['fromMe', 'remoteJid', 'id'],\n            },\n          },\n          then: {\n            properties: {\n              remoteJid: {\n                type: 'string',\n                minLength: 1,\n                description: 'The property cannot be empty',\n              },\n              id: {\n                type: 'string',\n                minLength: 1,\n                description: 'The property cannot be empty',\n              },\n              fromMe: { type: 'boolean', enum: [true, false] },\n            },\n          },\n        },\n        message: { type: 'object' },\n      },\n      ...isNotEmpty('_id'),\n    },\n    limit: { type: 'integer' },\n  },\n};\n\nexport const messageUpSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    where: {\n      type: 'object',\n      properties: {\n        _id: { type: 'string' },\n        remoteJid: { type: 'string' },\n        id: { type: 'string' },\n        fromMe: { type: 'boolean', enum: [true, false] },\n        participant: { type: 'string' },\n        status: {\n          type: 'string',\n          enum: ['ERROR', 'PENDING', 'SERVER_ACK', 'DELIVERY_ACK', 'READ', 'PLAYED'],\n        },\n      },\n      ...isNotEmpty('_id', 'remoteJid', 'id', 'status'),\n    },\n    limit: { type: 'integer' },\n  },\n};\n\nexport const privacySettingsSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    readreceipts: { type: 'string', enum: ['all', 'none'] },\n    profile: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n    status: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n    online: { type: 'string', enum: ['all', 'match_last_seen'] },\n    last: { type: 'string', enum: ['all', 'contacts', 'contact_blacklist', 'none'] },\n    groupadd: {\n      type: 'string',\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\n    },\n  },\n  required: ['readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'],\n  ...isNotEmpty('readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'),\n};\n\nexport const profileNameSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    name: { type: 'string' },\n  },\n  ...isNotEmpty('name'),\n};\n\nexport const profileStatusSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    status: { type: 'string' },\n  },\n  ...isNotEmpty('status'),\n};\n\nexport const profileSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    wuid: { type: 'string' },\n    name: { type: 'string' },\n    picture: { type: 'string' },\n    status: { type: 'string' },\n    isBusiness: { type: 'boolean' },\n  },\n};\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,uBAAAE,EAAA,oBAAAC,EAAA,0BAAAC,EAAA,wBAAAC,EAAA,yBAAAC,EAAA,oBAAAC,EAAA,0BAAAC,EAAA,mBAAAC,EAAA,0BAAAC,EAAA,sBAAAC,EAAA,yBAAAC,EAAA,kBAAAC,EAAA,wBAAAC,EAAA,sBAAAC,EAAA,wBAAAC,EAAA,yBAAAC,IAAA,eAAAC,EAAAlB,GACA,IAAAmB,EAAmB,gBAEbC,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEME,EAA0C,CAC9C,KAAM,SACN,YAAa,gBACf,EAEaP,EAAoC,CAC/C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CACP,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,YAAa,+CACf,CACF,CACF,CACF,EAEaF,EAAiC,CAC5C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,aAAc,CACZ,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,UAAW,CAAE,KAAM,QAAS,CAC9B,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGK,EAAW,KAAM,WAAW,CACjC,CACF,CACF,EACA,SAAU,CAAC,cAAc,CAC3B,EAEalB,EAAiC,CAC5C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,YAAa,CACX,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGkB,EAAW,KAAM,WAAW,CACjC,EACA,iBAAkB,CAAE,KAAM,UAAW,UAAW,CAAE,CACpD,EACA,SAAU,CAAC,KAAK,EAChB,GAAGA,EAAW,kBAAkB,CAClC,EACA,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CAClD,EACA,SAAU,CAAC,SAAS,CACtB,EAEad,EAAoC,CAC/C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,YAAa,CACX,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGc,EAAW,KAAM,WAAW,CACjC,EACA,iBAAkB,CAAE,KAAM,UAAW,UAAW,CAAE,CACpD,EACA,SAAU,CAAC,KAAK,EAChB,GAAGA,EAAW,kBAAkB,CAClC,CACF,EACA,SAAU,CAAC,aAAa,CAC1B,EAEaf,EAAmC,CAC9C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,UAAW,CAAE,KAAM,QAAS,EAC5B,YAAa,CAAE,KAAM,QAAS,CAChC,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGe,EAAW,KAAM,YAAa,aAAa,CAChD,EAEaR,EAAoC,CAC/C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,QAAS,CAAE,KAAM,QAAS,CAC5B,CACF,EAEaI,EAAmC,CAC9C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,KAAM,CAAE,KAAM,QAAS,EACvB,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGI,EAAW,KAAM,WAAW,CACjC,CACF,EACA,GAAGA,EAAW,SAAU,OAAQ,KAAK,CACvC,EAEaX,EAA8B,CACzC,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGe,CAAiB,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,SAAU,CACR,KAAM,SACN,KAAM,CAAC,cAAe,YAAa,YAAa,YAAa,QAAQ,CACvE,CACF,EACA,SAAU,CAAC,SAAU,WAAY,OAAO,CAC1C,EAEarB,EAA+B,CAC1C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,QAAS,SAAS,CAAE,CACvD,EACA,SAAU,CAAC,SAAU,QAAQ,EAC7B,GAAGiB,EAAW,SAAU,QAAQ,CAClC,EAEahB,EAAqC,CAChD,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,SAAU,UAAW,CAAE,EACpC,SAAU,CAAE,KAAM,SAAU,UAAW,CAAE,EACzC,GAAI,CAAE,KAAM,SAAU,UAAW,CAAE,CACrC,EACA,GAAGgB,EAAW,MAAO,KAAM,UAAU,CACvC,CACF,CACF,EAEaZ,EAAqC,CAChD,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,SAAU,UAAW,CAAE,EACpC,IAAK,CACH,KAAM,SACN,GAAI,CACF,cAAe,CACb,KAAM,CAAC,SAAU,YAAa,IAAI,CACpC,CACF,EACA,KAAM,CACJ,WAAY,CACV,UAAW,CACT,KAAM,SACN,UAAW,EACX,YAAa,8BACf,EACA,GAAI,CACF,KAAM,SACN,UAAW,EACX,YAAa,8BACf,EACA,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,CACF,CACF,EACA,QAAS,CAAE,KAAM,QAAS,CAC5B,EACA,GAAGY,EAAW,KAAK,CACrB,EACA,MAAO,CAAE,KAAM,SAAU,CAC3B,CACF,EAEab,EAA+B,CAC1C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,QAAS,EACtB,UAAW,CAAE,KAAM,QAAS,EAC5B,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,YAAa,CAAE,KAAM,QAAS,EAC9B,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,QAAS,UAAW,aAAc,eAAgB,OAAQ,QAAQ,CAC3E,CACF,EACA,GAAGa,EAAW,MAAO,YAAa,KAAM,QAAQ,CAClD,EACA,MAAO,CAAE,KAAM,SAAU,CAC3B,CACF,EAEaV,EAAqC,CAChD,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,aAAc,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,MAAM,CAAE,EACtD,QAAS,CACP,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,EACA,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,EACA,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,iBAAiB,CAAE,EAC3D,KAAM,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CAAE,EAC/E,SAAU,CACR,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,CACF,EACA,SAAU,CAAC,eAAgB,UAAW,SAAU,SAAU,OAAQ,UAAU,EAC5E,GAAGU,EAAW,eAAgB,UAAW,SAAU,SAAU,OAAQ,UAAU,CACjF,EAEaT,EAAiC,CAC5C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,CACzB,EACA,GAAGS,EAAW,MAAM,CACtB,EAEaN,EAAmC,CAC9C,OAAK,MAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,CAC3B,EACA,GAAGM,EAAW,QAAQ,CACxB,EAEaP,EAA6B,CACxC,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,KAAM,CAAE,KAAM,QAAS,EACvB,QAAS,CAAE,KAAM,QAAS,EAC1B,OAAQ,CAAE,KAAM,QAAS,EACzB,WAAY,CAAE,KAAM,SAAU,CAChC,CACF","names":["chat_schema_exports","__export","archiveChatSchema","blockUserSchema","contactValidateSchema","deleteMessageSchema","markChatUnreadSchema","messageUpSchema","messageValidateSchema","presenceSchema","privacySettingsSchema","profileNameSchema","profilePictureSchema","profileSchema","profileStatusSchema","readMessageSchema","updateMessageSchema","whatsappNumberSchema","__toCommonJS","import_uuid","isNotEmpty","propertyNames","properties","property","numberDefinition"]}