{"version":3,"sources":["../../src/validate/label.schema.ts"],"sourcesContent":["import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\nimport { v4 } from 'uuid';\n\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\n  const properties = {};\n  propertyNames.forEach(\n    (property) =>\n      (properties[property] = {\n        minLength: 1,\n        description: `The \"${property}\" cannot be empty`,\n      }),\n  );\n  return {\n    if: {\n      propertyNames: {\n        enum: [...propertyNames],\n      },\n    },\n    then: { properties },\n  };\n};\n\nconst numberDefinition: JSONSchema7Definition = {\n  type: 'string',\n  description: 'Invalid format',\n};\n\nexport const handleLabelSchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    number: { ...numberDefinition },\n    labelId: { type: 'string' },\n    action: { type: 'string', enum: ['add', 'remove'] },\n  },\n  required: ['number', 'labelId', 'action'],\n  ...isNotEmpty('number', 'labelId', 'action'),\n};\n"],"mappings":"AACA,OAAS,MAAAA,MAAU,OAEnB,IAAMC,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEME,EAA0C,CAC9C,KAAM,SACN,YAAa,gBACf,EAEaC,EAAiC,CAC5C,IAAKN,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGK,CAAiB,EAC9B,QAAS,CAAE,KAAM,QAAS,EAC1B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,SAAU,UAAW,QAAQ,EACxC,GAAGJ,EAAW,SAAU,UAAW,QAAQ,CAC7C","names":["v4","isNotEmpty","propertyNames","properties","property","numberDefinition","handleLabelSchema"]}