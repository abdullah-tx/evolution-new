{"version":3,"sources":["../../src/validate/proxy.schema.ts"],"sourcesContent":["import { JSONSchema7 } from 'json-schema';\nimport { v4 } from 'uuid';\n\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\n  const properties = {};\n  propertyNames.forEach(\n    (property) =>\n      (properties[property] = {\n        minLength: 1,\n        description: `The \"${property}\" cannot be empty`,\n      }),\n  );\n  return {\n    if: {\n      propertyNames: {\n        enum: [...propertyNames],\n      },\n    },\n    then: { properties },\n  };\n};\n\nexport const proxySchema: JSONSchema7 = {\n  $id: v4(),\n  type: 'object',\n  properties: {\n    enabled: { type: 'boolean', enum: [true, false] },\n    host: { type: 'string' },\n    port: { type: 'string' },\n    protocol: { type: 'string' },\n    username: { type: 'string' },\n    password: { type: 'string' },\n  },\n  required: ['enabled', 'host', 'port', 'protocol'],\n  ...isNotEmpty('enabled', 'host', 'port', 'protocol'),\n};\n"],"mappings":"AACA,OAAS,MAAAA,MAAU,OAEnB,IAAMC,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,EAA2B,CACtC,IAAKL,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,KAAM,CAAE,KAAM,QAAS,EACvB,KAAM,CAAE,KAAM,QAAS,EACvB,SAAU,CAAE,KAAM,QAAS,EAC3B,SAAU,CAAE,KAAM,QAAS,EAC3B,SAAU,CAAE,KAAM,QAAS,CAC7B,EACA,SAAU,CAAC,UAAW,OAAQ,OAAQ,UAAU,EAChD,GAAGC,EAAW,UAAW,OAAQ,OAAQ,UAAU,CACrD","names":["v4","isNotEmpty","propertyNames","properties","property","proxySchema"]}