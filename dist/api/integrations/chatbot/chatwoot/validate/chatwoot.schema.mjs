import{v4 as o}from"uuid";var r=(...e)=>{let n={};return e.forEach(t=>n[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...e]}},then:{properties:n}}},s={$id:o(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},accountId:{type:"string"},token:{type:"string"},url:{type:"string"},signMsg:{type:"boolean",enum:[!0,!1]},signDelimiter:{type:["string","null"]},nameInbox:{type:["string","null"]},reopenConversation:{type:"boolean",enum:[!0,!1]},conversationPending:{type:"boolean",enum:[!0,!1]},autoCreate:{type:"boolean",enum:[!0,!1]},importContacts:{type:"boolean",enum:[!0,!1]},mergeBrazilContacts:{type:"boolean",enum:[!0,!1]},importMessages:{type:"boolean",enum:[!0,!1]},daysLimitImportMessages:{type:"number"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","accountId","token","url","signMsg","reopenConversation","conversationPending"],...r("enabled","accountId","token","url","signMsg","reopenConversation","conversationPending")};export{s as chatwootSchema};
//# sourceMappingURL=chatwoot.schema.mjs.map