var Lc=Object.create;var Ut=Object.defineProperty;var Fc=Object.getOwnPropertyDescriptor;var Uc=Object.getOwnPropertyNames;var Jc=Object.getPrototypeOf,Wc=Object.prototype.hasOwnProperty;var $c=(p,i)=>{for(var t in i)Ut(p,t,{get:i[t],enumerable:!0})},fr=(p,i,t,e)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of Uc(i))!Wc.call(p,s)&&s!==t&&Ut(p,s,{get:()=>i[s],enumerable:!(e=Fc(i,s))||e.enumerable});return p};var A=(p,i,t)=>(t=p!=null?Lc(Jc(p)):{},fr(i||!p||!p.__esModule?Ut(t,"default",{value:p,enumerable:!0}):t,p)),qc=p=>fr(Ut({},"__esModule",{value:!0}),p);var Dp={};$c(Dp,{CallRouter:()=>Lt});module.exports=qc(Dp);var gI=require("express-async-errors");var Sr=A(require("dayjs")),Er=A(require("fs"));var bn=require("class-validator"),wr=A(require("dotenv"));wr.default.config();var Ue=class{constructor(){this.loadEnv()}get(i){return this.env[i]}loadEnv(){this.env=this.envProcess(),this.env.PRODUCTION=process.env?.NODE_ENV==="PROD",process.env?.DOCKER_ENV==="true"&&(this.env.SERVER.TYPE=process.env.SERVER_TYPE,this.env.SERVER.PORT=Number.parseInt(process.env.SERVER_PORT)||8080)}envProcess(){return{SERVER:{TYPE:process.env.SERVER_TYPE||"http",PORT:Number.parseInt(process.env.SERVER_PORT)||8080,URL:process.env.SERVER_URL,DISABLE_DOCS:process.env?.SERVER_DISABLE_DOCS==="true",DISABLE_MANAGER:process.env?.SERVER_DISABLE_MANAGER==="true"},CORS:{ORIGIN:process.env.CORS_ORIGIN?.split(",")||["*"],METHODS:process.env.CORS_METHODS?.split(",")||["POST","GET","PUT","DELETE"],CREDENTIALS:process.env?.CORS_CREDENTIALS==="true"},SSL_CONF:{PRIVKEY:process.env?.SSL_CONF_PRIVKEY||"",FULLCHAIN:process.env?.SSL_CONF_FULLCHAIN||""},PROVIDER:{ENABLED:process.env?.PROVIDER_ENABLED==="true",HOST:process.env.PROVIDER_HOST,PORT:process.env?.PROVIDER_PORT||"5656",PREFIX:process.env?.PROVIDER_PREFIX||"evolution"},DATABASE:{CONNECTION:{URI:process.env.DATABASE_CONNECTION_URI||"",CLIENT_NAME:process.env.DATABASE_CONNECTION_CLIENT_NAME||"evolution"},PROVIDER:process.env.DATABASE_PROVIDER||"postgresql",SAVE_DATA:{INSTANCE:process.env?.DATABASE_SAVE_DATA_INSTANCE==="true",NEW_MESSAGE:process.env?.DATABASE_SAVE_DATA_NEW_MESSAGE==="true",MESSAGE_UPDATE:process.env?.DATABASE_SAVE_MESSAGE_UPDATE==="true",CONTACTS:process.env?.DATABASE_SAVE_DATA_CONTACTS==="true",CHATS:process.env?.DATABASE_SAVE_DATA_CHATS==="true",HISTORIC:process.env?.DATABASE_SAVE_DATA_HISTORIC==="true",LABELS:process.env?.DATABASE_SAVE_DATA_LABELS==="true",IS_ON_WHATSAPP:process.env?.DATABASE_SAVE_IS_ON_WHATSAPP==="true",IS_ON_WHATSAPP_DAYS:Number.parseInt(process.env?.DATABASE_SAVE_IS_ON_WHATSAPP_DAYS??"7")},DELETE_DATA:{LOGICAL_MESSAGE_DELETE:process.env?.DATABASE_DELETE_MESSAGE==="true"}},RABBITMQ:{ENABLED:process.env?.RABBITMQ_ENABLED==="true",GLOBAL_ENABLED:process.env?.RABBITMQ_GLOBAL_ENABLED==="true",EXCHANGE_NAME:process.env?.RABBITMQ_EXCHANGE_NAME||"evolution_exchange",URI:process.env.RABBITMQ_URI||"",EVENTS:{APPLICATION_STARTUP:process.env?.RABBITMQ_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.RABBITMQ_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.RABBITMQ_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.RABBITMQ_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.RABBITMQ_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.RABBITMQ_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.RABBITMQ_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.RABBITMQ_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.RABBITMQ_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.RABBITMQ_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.RABBITMQ_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.RABBITMQ_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.RABBITMQ_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.RABBITMQ_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.RABBITMQ_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.RABBITMQ_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.RABBITMQ_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.RABBITMQ_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.RABBITMQ_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.RABBITMQ_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.RABBITMQ_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.RABBITMQ_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.RABBITMQ_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.RABBITMQ_EVENTS_CALL==="true",TYPEBOT_START:process.env?.RABBITMQ_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},SQS:{ENABLED:process.env?.SQS_ENABLED==="true",ACCESS_KEY_ID:process.env.SQS_ACCESS_KEY_ID||"",SECRET_ACCESS_KEY:process.env.SQS_SECRET_ACCESS_KEY||"",ACCOUNT_ID:process.env.SQS_ACCOUNT_ID||"",REGION:process.env.SQS_REGION||""},WEBSOCKET:{ENABLED:process.env?.WEBSOCKET_ENABLED==="true",GLOBAL_EVENTS:process.env?.WEBSOCKET_GLOBAL_EVENTS==="true"},PUSHER:{ENABLED:process.env?.PUSHER_ENABLED==="true",GLOBAL:{ENABLED:process.env?.PUSHER_GLOBAL_ENABLED==="true",APP_ID:process.env?.PUSHER_GLOBAL_APP_ID||"",KEY:process.env?.PUSHER_GLOBAL_KEY||"",SECRET:process.env?.PUSHER_GLOBAL_SECRET||"",CLUSTER:process.env?.PUSHER_GLOBAL_CLUSTER||"",USE_TLS:process.env?.PUSHER_GLOBAL_USE_TLS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.PUSHER_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.PUSHER_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.PUSHER_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.PUSHER_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.PUSHER_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.PUSHER_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.PUSHER_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.PUSHER_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.PUSHER_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.PUSHER_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.PUSHER_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.PUSHER_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.PUSHER_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.PUSHER_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.PUSHER_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.PUSHER_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.PUSHER_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.PUSHER_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.PUSHER_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.PUSHER_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.PUSHER_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.PUSHER_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.PUSHER_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.PUSHER_EVENTS_CALL==="true",TYPEBOT_START:process.env?.PUSHER_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},WA_BUSINESS:{TOKEN_WEBHOOK:process.env.WA_BUSINESS_TOKEN_WEBHOOK||"evolution",URL:process.env.WA_BUSINESS_URL||"https://graph.facebook.com",VERSION:process.env.WA_BUSINESS_VERSION||"v18.0",LANGUAGE:process.env.WA_BUSINESS_LANGUAGE||"en"},LOG:{LEVEL:process.env?.LOG_LEVEL?.split(",")||["ERROR","WARN","DEBUG","INFO","LOG","VERBOSE","DARK","WEBHOOKS","WEBSOCKET"],COLOR:process.env?.LOG_COLOR==="true",BAILEYS:process.env?.LOG_BAILEYS||"error"},DEL_INSTANCE:(0,bn.isBooleanString)(process.env?.DEL_INSTANCE)?process.env.DEL_INSTANCE==="true":Number.parseInt(process.env.DEL_INSTANCE)||!1,DEL_TEMP_INSTANCES:(0,bn.isBooleanString)(process.env?.DEL_TEMP_INSTANCES)?process.env.DEL_TEMP_INSTANCES==="true":!0,LANGUAGE:process.env?.LANGUAGE||"en",WEBHOOK:{GLOBAL:{URL:process.env?.WEBHOOK_GLOBAL_URL||"",ENABLED:process.env?.WEBHOOK_GLOBAL_ENABLED==="true",WEBHOOK_BY_EVENTS:process.env?.WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.WEBHOOK_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.WEBHOOK_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.WEBHOOK_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.WEBHOOK_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.WEBHOOK_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.WEBHOOK_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.WEBHOOK_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.WEBHOOK_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.WEBHOOK_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.WEBHOOK_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.WEBHOOK_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.WEBHOOK_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.WEBHOOK_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.WEBHOOK_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.WEBHOOK_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.WEBHOOK_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.WEBHOOK_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.WEBHOOK_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.WEBHOOK_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.WEBHOOK_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.WEBHOOK_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.WEBHOOK_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.WEBHOOK_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.WEBHOOK_EVENTS_CALL==="true",TYPEBOT_START:process.env?.WEBHOOK_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS==="true",ERRORS:process.env?.WEBHOOK_EVENTS_ERRORS==="true",ERRORS_WEBHOOK:process.env?.WEBHOOK_EVENTS_ERRORS_WEBHOOK||""}},CONFIG_SESSION_PHONE:{CLIENT:process.env?.CONFIG_SESSION_PHONE_CLIENT||"Evolution API",NAME:process.env?.CONFIG_SESSION_PHONE_NAME||"Chrome",VERSION:process.env?.CONFIG_SESSION_PHONE_VERSION||null},QRCODE:{LIMIT:Number.parseInt(process.env.QRCODE_LIMIT)||30,COLOR:process.env.QRCODE_COLOR||"#198754"},TYPEBOT:{ENABLED:process.env?.TYPEBOT_ENABLED==="true",API_VERSION:process.env?.TYPEBOT_API_VERSION||"old",SEND_MEDIA_BASE64:process.env?.TYPEBOT_SEND_MEDIA_BASE64==="true"},CHATWOOT:{ENABLED:process.env?.CHATWOOT_ENABLED==="true",MESSAGE_DELETE:process.env.CHATWOOT_MESSAGE_DELETE==="true",MESSAGE_READ:process.env.CHATWOOT_MESSAGE_READ==="true",BOT_CONTACT:!process.env.CHATWOOT_BOT_CONTACT||process.env.CHATWOOT_BOT_CONTACT==="true",IMPORT:{DATABASE:{CONNECTION:{URI:process.env.CHATWOOT_IMPORT_DATABASE_CONNECTION_URI||""}},PLACEHOLDER_MEDIA_MESSAGE:process.env?.CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE==="true"}},OPENAI:{ENABLED:process.env?.OPENAI_ENABLED==="true",API_KEY_GLOBAL:process.env?.OPENAI_API_KEY_GLOBAL||null},DIFY:{ENABLED:process.env?.DIFY_ENABLED==="true"},CACHE:{REDIS:{ENABLED:process.env?.CACHE_REDIS_ENABLED==="true",URI:process.env?.CACHE_REDIS_URI||"",PREFIX_KEY:process.env?.CACHE_REDIS_PREFIX_KEY||"evolution-cache",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||604800,SAVE_INSTANCES:process.env?.CACHE_REDIS_SAVE_INSTANCES==="true"},LOCAL:{ENABLED:process.env?.CACHE_LOCAL_ENABLED==="true",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||86400}},S3:{ACCESS_KEY:process.env?.S3_ACCESS_KEY,SECRET_KEY:process.env?.S3_SECRET_KEY,ENDPOINT:process.env?.S3_ENDPOINT,BUCKET_NAME:process.env?.S3_BUCKET,ENABLE:process.env?.S3_ENABLED==="true",PORT:Number.parseInt(process.env?.S3_PORT||"9000"),USE_SSL:process.env?.S3_USE_SSL==="true",REGION:process.env?.S3_REGION},AUTHENTICATION:{API_KEY:{KEY:process.env.AUTHENTICATION_API_KEY||"BQYHJGJHJ"},EXPOSE_IN_FETCH_INSTANCES:process.env?.AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES==="true"}}}},C=new Ue;var Gc=JSON.parse(Er.default.readFileSync("./package.json","utf8")),br=p=>(0,Sr.default)(p).toDate().toString().replace(/\sGMT.+/,""),Ne=(o=>(o.LOG="\x1B[32m",o.INFO="\x1B[34m",o.WARN="\x1B[33m",o.ERROR="\x1B[31m",o.DEBUG="\x1B[36m",o.VERBOSE="\x1B[37m",o.DARK="\x1B[30m",o))(Ne||{});var Ir=(o=>(o.LOG="\x1B[32m%s\x1B[0m",o.DARK="\x1B[30m%s\x1B[0m",o.INFO="\x1B[34m%s\x1B[0m",o.WARN="\x1B[33m%s\x1B[0m",o.ERROR="\x1B[31m%s\x1B[0m",o.DEBUG="\x1B[36m%s\x1B[0m",o.VERBOSE="\x1B[37m%s\x1B[0m",o))(Ir||{}),Mr=(o=>(o.LOG="LOG",o.WARN="WARN",o.INFO="INFO",o.DARK="DARK",o.ERROR="ERROR",o.DEBUG="DEBUG",o.VERBOSE="VERBOSE",o))(Mr||{}),Tr=(o=>(o.LOG="\x1B[42m",o.INFO="\x1B[44m",o.WARN="\x1B[43m",o.DARK="\x1B[40m",o.ERROR="\x1B[41m",o.DEBUG="\x1B[46m",o.VERBOSE="\x1B[47m",o))(Tr||{}),T=class{constructor(i="Logger"){this.configService=C;this.instance=null;this.context=i}setContext(i){this.context=i}setInstance(i){this.instance=i}console(i,t){let e=[];this.configService.get("LOG").LEVEL.forEach(r=>e.push(Mr[r]));let s=typeof i;e.includes(t)&&(C.get("LOG").COLOR?(console.log("\x1B[1m"+Ir[t],"[Evolution API]","\x1B[1m"+Ne[t],this.instance?`[${this.instance}]`:"","\x1B[1m"+Ne[t],`v${Gc.version}`,"\x1B[1m"+Ne[t],process.pid.toString(),"\x1B[0m","\x1B[1m"+Ne[t],"-","\x1B[1m\x1B[37m",`${br(Date.now())}  `,"\x1B[0m",Ne[t]+Tr[t]+"\x1B[1m",`${t} \x1B[0m`,"\x1B[33m\x1B[1m",`[${this.context}]\x1B[0m`,Ne[t]+"\x1B[1m",`[${s}]\x1B[0m`,Ne[t],s!=="object"?i:"","\x1B[0m"),s==="object"&&console.log(i,`
`)):console.log("[Evolution API]",this.instance?`[${this.instance}]`:"",process.pid.toString(),"-",`${br(Date.now())}  `,`${t} `,`[${this.context}]`,`[${s}]`,i))}log(i){this.console(i,"LOG")}info(i){this.console(i,"INFO")}warn(i){this.console(i,"WARN")}error(i){this.console(i,"ERROR")}verbose(i){this.console(i,"VERBOSE")}debug(i){this.console(i,"DEBUG")}dark(i){this.console(i,"DARK")}};var Sn=require("baileys"),Cr=A(require("node-cache")),oe=class oe{constructor(i,t){this.configService=i;this.module=t;this.logger=new T("LocalCache");this.conf=this.configService.get("CACHE")?.LOCAL}async get(i){return oe.localCache.get(this.buildKey(i))}async set(i,t,e){return oe.localCache.set(this.buildKey(i),t,e||this.conf.TTL)}async has(i){return oe.localCache.has(this.buildKey(i))}async delete(i){return oe.localCache.del(this.buildKey(i))}async deleteAll(i){let t=await this.keys(i);return t?.length?oe.localCache.del(t):0}async keys(i){let t=`${this.buildKey("")}${i?`${i}:`:""}`;return oe.localCache.keys().filter(e=>e.substring(0,t.length)===t)}buildKey(i){return`${this.module}:${i}`}async hGet(i,t){try{let e=oe.localCache.get(this.buildKey(i));return e&&t in e?JSON.parse(e[t],Sn.BufferJSON.reviver):null}catch(e){this.logger.error(e)}}async hSet(i,t,e){try{let s=JSON.stringify(e,Sn.BufferJSON.replacer),r=oe.localCache.get(this.buildKey(i));r||(r={}),r[t]=s,oe.localCache.set(this.buildKey(i),r)}catch(s){this.logger.error(s)}}async hDelete(i,t){try{let e=oe.localCache.get(this.buildKey(i));return e&&t in e?(delete e[t],oe.localCache.set(this.buildKey(i),e),1):0}catch(e){this.logger.error(e)}}};oe.localCache=new Cr.default;var Jt=oe;var In=require("baileys");var vr=require("redis"),En=class{constructor(){this.logger=new T("Redis");this.client=null;this.connected=!1;this.conf=C.get("CACHE")?.REDIS}getConnection(){if(this.connected)return this.client;this.client=(0,vr.createClient)({url:this.conf.URI}),this.client.on("connect",()=>{this.logger.verbose("redis connecting")}),this.client.on("ready",()=>{this.logger.verbose("redis ready"),this.connected=!0}),this.client.on("error",()=>{this.logger.error("redis disconnected"),this.connected=!1}),this.client.on("end",()=>{this.logger.verbose("redis connection ended"),this.connected=!1});try{this.client.connect(),this.connected=!0}catch(i){return this.connected=!1,this.logger.error("redis connect exception caught: "+i),null}return this.client}},Ar=new En;var Wt=class{constructor(i,t){this.configService=i;this.module=t;this.logger=new T("RedisCache");this.conf=this.configService.get("CACHE")?.REDIS,this.client=Ar.getConnection()}async get(i){try{return JSON.parse(await this.client.get(this.buildKey(i)))}catch(t){this.logger.error(t)}}async hGet(i,t){try{let e=await this.client.hGet(this.buildKey(i),t);return e?JSON.parse(e,In.BufferJSON.reviver):null}catch(e){this.logger.error(e)}}async set(i,t,e){try{await this.client.setEx(this.buildKey(i),e||this.conf?.TTL,JSON.stringify(t))}catch(s){this.logger.error(s)}}async hSet(i,t,e){try{let s=JSON.stringify(e,In.BufferJSON.replacer);await this.client.hSet(this.buildKey(i),t,s)}catch(s){this.logger.error(s)}}async has(i){try{return await this.client.exists(this.buildKey(i))>0}catch(t){this.logger.error(t)}}async delete(i){try{return await this.client.del(this.buildKey(i))}catch(t){this.logger.error(t)}}async hDelete(i,t){try{return await this.client.hDel(this.buildKey(i),t)}catch(e){this.logger.error(e)}}async deleteAll(i){try{let t=await this.keys(i);return t?.length?await this.client.del(t):0}catch(t){this.logger.error(t)}}async keys(i){try{let t=`${this.buildKey("")}${i?`${i}:`:""}*`,e=[];for await(let s of this.client.scanIterator({MATCH:t,COUNT:100}))e.push(s);return[...new Set(e)]}catch(t){this.logger.error(t)}}buildKey(i){return`${this.conf?.PREFIX_KEY}:${this.module}:${i}`}};var Rr=new T("CacheEngine"),Ce=class{constructor(i,t){this.configService=i;let e=i.get("CACHE");e?.REDIS?.ENABLED&&e?.REDIS?.URI!==""?(Rr.verbose(`RedisCache initialized for ${t}`),this.engine=new Wt(i,t)):e?.LOCAL?.ENABLED&&(Rr.verbose(`LocalCache initialized for ${t}`),this.engine=new Jt(i,t))}getEngine(){return this.engine}};var Dr=A(require("eventemitter2")),Hc=parseInt(process.env.EVENT_EMITTER_MAX_LISTENERS,10)||50,Mn=new Dr.default({delimiter:".",newListener:!1,ignoreErrors:!1,maxListeners:Hc});var $t=class{constructor(i){this.waMonitor=i}async offerCall({instanceName:i},t){return await this.waMonitor.waInstances[i].offerCall(t)}};var qt=class{constructor(i){this.waMonitor=i}async whatsappNumber({instanceName:i},t){return await this.waMonitor.waInstances[i].whatsappNumber(t)}async readMessage({instanceName:i},t){return await this.waMonitor.waInstances[i].markMessageAsRead(t)}async archiveChat({instanceName:i},t){return await this.waMonitor.waInstances[i].archiveChat(t)}async markChatUnread({instanceName:i},t){return await this.waMonitor.waInstances[i].markChatUnread(t)}async deleteMessage({instanceName:i},t){return await this.waMonitor.waInstances[i].deleteMessage(t)}async fetchProfilePicture({instanceName:i},t){return await this.waMonitor.waInstances[i].profilePicture(t.number)}async fetchProfile({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchProfile(i,t.number)}async fetchContacts({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchContacts(t)}async getBase64FromMediaMessage({instanceName:i},t){return await this.waMonitor.waInstances[i].getBase64FromMediaMessage(t)}async fetchMessages({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchMessages(t)}async fetchStatusMessage({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchStatusMessage(t)}async fetchChats({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchChats(t)}async sendPresence({instanceName:i},t){return await this.waMonitor.waInstances[i].sendPresence(t)}async fetchPrivacySettings({instanceName:i}){return await this.waMonitor.waInstances[i].fetchPrivacySettings()}async updatePrivacySettings({instanceName:i},t){return await this.waMonitor.waInstances[i].updatePrivacySettings(t)}async fetchBusinessProfile({instanceName:i},t){return await this.waMonitor.waInstances[i].fetchBusinessProfile(t.number)}async updateProfileName({instanceName:i},t){return await this.waMonitor.waInstances[i].updateProfileName(t.name)}async updateProfileStatus({instanceName:i},t){return await this.waMonitor.waInstances[i].updateProfileStatus(t.status)}async updateProfilePicture({instanceName:i},t){return await this.waMonitor.waInstances[i].updateProfilePicture(t.picture)}async removeProfilePicture({instanceName:i}){return await this.waMonitor.waInstances[i].removeProfilePicture()}async updateMessage({instanceName:i},t){return await this.waMonitor.waInstances[i].updateMessage(t)}async blockUser({instanceName:i},t){return await this.waMonitor.waInstances[i].blockUser(t)}};var Gt=class{constructor(i){this.waMonitor=i}async createGroup(i,t){return await this.waMonitor.waInstances[i.instanceName].createGroup(t)}async updateGroupPicture(i,t){return await this.waMonitor.waInstances[i.instanceName].updateGroupPicture(t)}async updateGroupSubject(i,t){return await this.waMonitor.waInstances[i.instanceName].updateGroupSubject(t)}async updateGroupDescription(i,t){return await this.waMonitor.waInstances[i.instanceName].updateGroupDescription(t)}async findGroupInfo(i,t){return await this.waMonitor.waInstances[i.instanceName].findGroup(t)}async fetchAllGroups(i,t){return await this.waMonitor.waInstances[i.instanceName].fetchAllGroups(t)}async inviteCode(i,t){return await this.waMonitor.waInstances[i.instanceName].inviteCode(t)}async inviteInfo(i,t){return await this.waMonitor.waInstances[i.instanceName].inviteInfo(t)}async sendInvite(i,t){return await this.waMonitor.waInstances[i.instanceName].sendInvite(t)}async acceptInviteCode(i,t){return await this.waMonitor.waInstances[i.instanceName].acceptInviteCode(t)}async revokeInviteCode(i,t){return await this.waMonitor.waInstances[i.instanceName].revokeInviteCode(t)}async findParticipants(i,t){return await this.waMonitor.waInstances[i.instanceName].findParticipants(t)}async updateGParticipate(i,t){return await this.waMonitor.waInstances[i.instanceName].updateGParticipant(t)}async updateGSetting(i,t){return await this.waMonitor.waInstances[i.instanceName].updateGSetting(t)}async toggleEphemeral(i,t){return await this.waMonitor.waInstances[i.instanceName].toggleEphemeral(t)}async leaveGroup(i,t){return await this.waMonitor.waInstances[i.instanceName].leaveGroup(t)}};var Pr=["imageMessage","documentMessage","audioMessage","videoMessage","stickerMessage","ptvMessage"],xr=["ephemeralMessage","documentWithCaptionMessage","viewOnceMessage","viewOnceMessageV2"],P={WHATSAPP_BUSINESS:"WHATSAPP-BUSINESS",WHATSAPP_BAILEYS:"WHATSAPP-BAILEYS",EVOLUTION:"EVOLUTION"};var Tn=require("baileys"),pt=require("class-validator"),Cn=require("uuid"),Ht=class{constructor(i,t,e,s,r,n,o,a,c,u,d){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.eventEmitter=s;this.chatwootService=r;this.settingsService=n;this.proxyService=o;this.cache=a;this.chatwootCache=c;this.baileysCache=u;this.providerFiles=d;this.logger=new T("InstanceController")}async createInstance(i){try{let t=Vt.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});if(!t)throw new h("Invalid integration");let e=(0,Cn.v4)();i.instanceId=e;let s;if(i.token?s=i.token:s=(0,Cn.v4)().toUpperCase(),await this.waMonitor.saveInstance({instanceId:e,integration:i.integration,instanceName:i.instanceName,hash:s,number:i.number,businessId:i.businessId,status:i.status}),t.setInstance({instanceName:i.instanceName,instanceId:e,integration:i.integration,token:s,number:i.number,businessId:i.businessId}),this.waMonitor.waInstances[t.instanceName]=t,this.waMonitor.delInstanceTime(t.instanceName),await z.setInstance(t.instanceName,i),t.sendDataWebhook("instance.create",{instanceName:i.instanceName,instanceId:e}),i.proxyHost&&i.proxyPort&&i.proxyProtocol){if(!await this.proxyService.testProxy({host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword}))throw new h("Invalid proxy");await this.proxyService.createProxy(t,{enabled:!0,host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword})}let r={rejectCall:i.rejectCall===!0,msgCall:i.msgCall||"",groupsIgnore:i.groupsIgnore===!0,alwaysOnline:i.alwaysOnline===!0,readMessages:i.readMessages===!0,readStatus:i.readStatus===!0,syncFullHistory:i.syncFullHistory===!0};await this.settingsService.create(t,r);let n=null,o="";if(i.integration===P.WHATSAPP_BUSINESS){if(!i.number)throw new h("number is required");n=`${this.configService.get("SERVER").URL}/webhook/meta`,o=this.configService.get("WA_BUSINESS").TOKEN_WEBHOOK}if(!i.chatwootAccountId||!i.chatwootToken||!i.chatwootUrl){let u;return i.qrcode&&i.integration===P.WHATSAPP_BAILEYS&&(await t.connectToWhatsapp(i.number),await(0,Tn.delay)(5e3),u=t.qrCode),{instance:{instanceName:t.instanceName,instanceId:e,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:t.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,qrcode:u}}if(!this.configService.get("CHATWOOT").ENABLED)throw new h("Chatwoot is not enabled");if(!i.chatwootAccountId)throw new h("accountId is required");if(!i.chatwootToken)throw new h("token is required");if(!i.chatwootUrl)throw new h("url is required");if(!(0,pt.isURL)(i.chatwootUrl,{require_tld:!1}))throw new h('Invalid "url" property in chatwoot');if(i.chatwootSignMsg!==!0&&i.chatwootSignMsg!==!1)throw new h("signMsg is required");if(i.chatwootReopenConversation!==!0&&i.chatwootReopenConversation!==!1)throw new h("reopenConversation is required");if(i.chatwootConversationPending!==!0&&i.chatwootConversationPending!==!1)throw new h("conversationPending is required");let a=this.configService.get("SERVER").URL,c;try{c=await this.chatwootService.create(t,{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,nameInbox:i.chatwootNameInbox??t.instanceName.split("-cwId-")[0],number:i.number,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,importContacts:i.chatwootImportContacts??!0,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages??60,organization:i.chatwootOrganization,logo:i.chatwootLogo,autoCreate:i.chatwootAutoCreate!==!1}),this.logger.log(`Generated Inbox ID in controller: ${JSON.stringify(c)}`)}catch(u){this.logger.log(u)}return{instance:{instanceName:t.instanceName,instanceId:e,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:o,status:t.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:r,chatwoot:{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importContacts:i.chatwootImportContacts??!0,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages||60,number:i.number,nameInbox:i.chatwootNameInbox??t.instanceName,inbox_id:c?.inboxId,webhookUrl:`${a}/chatwoot/webhook/${encodeURIComponent(t.instanceName)}`}}}catch(t){throw this.waMonitor.deleteInstance(i.instanceName),this.logger.error((0,pt.isArray)(t.message)?t.message[0]:t.message),new h((0,pt.isArray)(t.message)?t.message[0]:t.message)}}async connectToWhatsapp({instanceName:i,number:t=null}){try{let e=this.waMonitor.waInstances[i],s=e?.connectionStatus?.state;if(!s)throw new h('The "'+i+'" instance does not exist');return s=="open"?await this.connectionState({instanceName:i}):s=="connecting"?e.qrCode:s=="close"?(await e.connectToWhatsapp(t),await(0,Tn.delay)(2e3),e.qrCode):{instance:{instanceName:i,status:s},qrcode:e?.qrCode}}catch(e){return this.logger.error(e),{error:!0,message:e.toString()}}}async restartInstance({instanceName:i}){try{let t=this.waMonitor.waInstances[i],e=t?.connectionStatus?.state;if(!e)throw new h('The "'+i+'" instance does not exist');if(e=="close")throw new h('The "'+i+'" instance is not connected');if(e=="open")return this.configService.get("CHATWOOT").ENABLED&&t.clearCacheChatwoot(),this.logger.info("restarting instance"+i),t.client?.ws?.close(),t.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i});if(e=="connecting")return t.client?.ws?.close(),t.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i})}catch(t){return this.logger.error(t),{error:!0,message:t.toString()}}}async connectionState({instanceName:i}){return{instance:{instanceName:i,state:this.waMonitor.waInstances[i]?.connectionStatus?.state}}}async fetchInstances({instanceName:i,instanceId:t,number:e},s){if(this.configService.get("AUTHENTICATION").API_KEY.KEY!==s){let o=await this.prismaRepository.instance.findMany({where:{token:s,name:i||void 0,id:t||void 0}});if(o.length>0){let a=o.map(c=>c.name);return this.waMonitor.instanceInfo(a)}else throw new We}if(t||e)return this.waMonitor.instanceInfoById(t,e);let n=i?[i]:null;return this.waMonitor.instanceInfo(n)}async setPresence({instanceName:i},t){return await this.waMonitor.waInstances[i].setPresence(t)}async logout({instanceName:i}){let{instance:t}=await this.connectionState({instanceName:i});if(t.state==="close")throw new h('The "'+i+'" instance is not connected');try{return this.waMonitor.waInstances[i]?.logoutInstance(),{status:"SUCCESS",error:!1,response:{message:"Instance logged out"}}}catch(e){throw new F(e.toString())}}async deleteInstance({instanceName:i}){let{instance:t}=await this.connectionState({instanceName:i});if(t.state==="open")throw new h('The "'+i+'" instance needs to be disconnected');try{let e=this.waMonitor.waInstances[i];this.configService.get("CHATWOOT").ENABLED&&e?.clearCacheChatwoot(),t.state==="connecting"&&await this.logout({instanceName:i});try{e?.sendDataWebhook("instance.delete",{instanceName:i,instanceId:e.instanceId})}catch(s){this.logger.error(s)}return this.eventEmitter.emit("remove.instance",i,"inner"),{status:"SUCCESS",error:!1,response:{message:"Instance deleted"}}}catch(e){throw new h(e.toString())}}};var jt=class{constructor(i){this.waMonitor=i}async fetchLabels({instanceName:i}){return await this.waMonitor.waInstances[i].fetchLabels()}async handleLabel({instanceName:i},t){return await this.waMonitor.waInstances[i].handleLabel(t)}};var vn=require("https-proxy-agent");function Ee(p){if(typeof p=="string")return new vn.HttpsProxyAgent(p);let{host:i,password:t,port:e,protocol:s,username:r}=p,n=`${s}://${i}:${e}`;return r&&t&&(n=`${s}://${r}:${t}@${i}:${e}`),new vn.HttpsProxyAgent(n)}var lt=A(require("axios")),An=new T("ProxyController"),Kt=class{constructor(i,t){this.proxyService=i;this.waMonitor=t}async createProxy(i,t){if(!this.waMonitor.waInstances[i.instanceName])throw new W(`The "${i.instanceName}" instance does not exist`);if(t?.enabled||(t.host="",t.port="",t.protocol="",t.username="",t.password=""),t.host&&!await this.testProxy(t))throw new h("Invalid proxy");return this.proxyService.create(i,t)}async findProxy(i){if(!this.waMonitor.waInstances[i.instanceName])throw new W(`The "${i.instanceName}" instance does not exist`);return this.proxyService.find(i)}async testProxy(i){try{let t=await lt.default.get("https://icanhazip.com/");return(await lt.default.get("https://icanhazip.com/",{httpsAgent:Ee(i)}))?.data!==t?.data}catch(t){return lt.default.isAxiosError(t)&&t.response?.data?An.error("testProxy error: "+t.response.data):(lt.default.isAxiosError(t),An.error("testProxy error: ")),!1}}};var Ie=require("class-validator"),Yt=class{constructor(i){this.waMonitor=i}async sendTemplate({instanceName:i},t){return await this.waMonitor.waInstances[i].templateMessage(t)}async sendText({instanceName:i},t){return await this.waMonitor.waInstances[i].textMessage(t)}async sendMedia({instanceName:i},t,e){if((0,Ie.isBase64)(t?.media)&&!t?.fileName&&t?.mediatype==="document")throw new h("For base64 the file name must be informed.");if(e||(0,Ie.isURL)(t?.media)||(0,Ie.isBase64)(t?.media))return await this.waMonitor.waInstances[i].mediaMessage(t,e);throw new h("Owned media must be a url or base64")}async sendPtv({instanceName:i},t,e){if(e||(0,Ie.isURL)(t?.video)||(0,Ie.isBase64)(t?.video))return await this.waMonitor.waInstances[i].ptvMessage(t,e);throw new h("Owned media must be a url or base64")}async sendSticker({instanceName:i},t,e){if(e||(0,Ie.isURL)(t.sticker)||(0,Ie.isBase64)(t.sticker))return await this.waMonitor.waInstances[i].mediaSticker(t,e);throw new h("Owned media must be a url or base64")}async sendWhatsAppAudio({instanceName:i},t,e){if(e?.buffer||(0,Ie.isURL)(t.audio)||(0,Ie.isBase64)(t.audio))return await this.waMonitor.waInstances[i].audioWhatsapp(t,e);throw console.error("El archivo no tiene buffer o el audio no es una URL o Base64 v\xE1lida"),new h("Owned media must be a url, base64, or valid file with buffer")}async sendButtons({instanceName:i},t){return await this.waMonitor.waInstances[i].buttonMessage(t)}async sendLocation({instanceName:i},t){return await this.waMonitor.waInstances[i].locationMessage(t)}async sendList({instanceName:i},t){return await this.waMonitor.waInstances[i].listMessage(t)}async sendContact({instanceName:i},t){return await this.waMonitor.waInstances[i].contactMessage(t)}async sendReaction({instanceName:i},t){if(!t.reaction.match(/[^()\w\sà-ú"-+]+/))throw new h('"reaction" must be an emoji');return await this.waMonitor.waInstances[i].reactionMessage(t)}async sendPoll({instanceName:i},t){return await this.waMonitor.waInstances[i].pollMessage(t)}async sendStatus({instanceName:i},t,e){return await this.waMonitor.waInstances[i].statusMessage(t,e)}};var Qt=class{constructor(i){this.settingsService=i}async createSettings(i,t){return this.settingsService.create(i,t)}async findSettings(i){return this.settingsService.find(i)}};var zt=class{constructor(i){this.templateService=i}async createTemplate(i,t){return this.templateService.create(i,t)}async findTemplate(i){return this.templateService.find(i)}};var Or=A(require("pg")),{Pool:Vc}=Or.default,Rn=class{constructor(){this.logger=new T("Postgres");this.connected=!1}getConnection(i){if(this.connected)return this.pool;this.pool=new Vc({connectionString:i,ssl:{rejectUnauthorized:!1}}),this.pool.on("error",()=>{this.logger.error("postgres disconnected"),this.connected=!1});try{this.connected=!0}catch(t){return this.connected=!1,this.logger.error("postgres connect exception caught: "+t),null}return this.pool}getChatwootConnection(){let i=C.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return this.getConnection(i)}},ve=new Rn;var Dn=class{constructor(){this.logger=new T("ChatwootImport");this.repositoryMessagesCache=new Map;this.historyMessages=new Map;this.historyContacts=new Map}getRepositoryMessagesCache(i){return this.repositoryMessagesCache.has(i.instanceName)?this.repositoryMessagesCache.get(i.instanceName):null}setRepositoryMessagesCache(i,t){this.repositoryMessagesCache.set(i.instanceName,t)}deleteRepositoryMessagesCache(i){this.repositoryMessagesCache.delete(i.instanceName)}addHistoryMessages(i,t){let e=this.historyMessages.has(i.instanceName)?this.historyMessages.get(i.instanceName):[];this.historyMessages.set(i.instanceName,[...e,...t])}addHistoryContacts(i,t){let e=this.historyContacts.has(i.instanceName)?this.historyContacts.get(i.instanceName):[];this.historyContacts.set(i.instanceName,e.concat(t))}deleteHistoryMessages(i){this.historyMessages.delete(i.instanceName)}deleteHistoryContacts(i){this.historyContacts.delete(i.instanceName)}clearAll(i){this.deleteRepositoryMessagesCache(i),this.deleteHistoryMessages(i),this.deleteHistoryContacts(i)}getHistoryMessagesLenght(i){return this.historyMessages.get(i.instanceName)?.length??0}async importHistoryContacts(i,t){try{if(this.getHistoryMessagesLenght(i)>0)return;let e=ve.getChatwootConnection(),s=0,r=this.historyContacts.get(i.instanceName)||[];if(r.length===0)return 0;let n=this.sliceIntoChunks(r,3e3);for(;n.length>0;){let o=`SELECT id FROM labels WHERE title = '${t.nameInbox}' AND account_id = ${t.accountId} LIMIT 1`,a=(await e.query(o))?.rows[0]?.id;if(!a){let f=`INSERT INTO labels (title, color, show_on_sidebar, account_id, created_at, updated_at) VALUES ('${t.nameInbox}', '#34039B', true, ${t.accountId}, NOW(), NOW()) RETURNING id`;a=(await e.query(f))?.rows[0]?.id}let c=`INSERT INTO contacts
          (name, phone_number, account_id, identifier, created_at, updated_at) VALUES `,u=[t.accountId];for(let f of n){u.push(f.pushName);let b=`$${u.length}`;u.push(`+${f.remoteJid.split("@")[0]}`);let S=`$${u.length}`;u.push(f.remoteJid);let w=`$${u.length}`;c+=`(${b}, ${S}, $1, ${w}, NOW(), NOW()),`}c.slice(-1)===","&&(c=c.slice(0,-1)),c+=` ON CONFLICT (identifier, account_id)
                       DO UPDATE SET
                        name = EXCLUDED.name,
                        phone_number = EXCLUDED.phone_number,
                        identifier = EXCLUDED.identifier`,s+=(await e.query(c,u))?.rowCount??0;let d=`SELECT id FROM tags WHERE name = '${t.nameInbox}' LIMIT 1`,g=(await e.query(d))?.rows[0]?.id,y=`INSERT INTO tags (name, taggings_count) VALUES ('${t.nameInbox}', ${s}) ON CONFLICT (name) DO UPDATE SET taggings_count = tags.taggings_count + ${s} RETURNING id`;g=(await e.query(y))?.rows[0]?.id,await e.query(y);let m="INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) VALUES ";n.forEach(f=>{let b=`(SELECT id FROM contacts WHERE identifier = '${f.remoteJid}' AND account_id = ${t.accountId})`;m+=`($1, $2, ${b}, $3, NOW()),`}),m.slice(-1)===","&&(m=m.slice(0,-1)),await e.query(m,[g,"Contact","labels"]),n=this.sliceIntoChunks(r,3e3)}return this.deleteHistoryContacts(i),s}catch(e){this.logger.error(`Error on import history contacts: ${e.toString()}`)}}async getExistingSourceIds(i){try{let t=new Set;if(i.length===0)return t;let e=i.map(o=>`WAID:${o.replace("WAID:","")}`),n=await ve.getChatwootConnection().query("SELECT source_id FROM messages WHERE source_id = ANY($1)",[e]);for(let o of n.rows)t.add(o.source_id);return t}catch{return null}}async importHistoryMessages(i,t,e,s){try{let r=ve.getChatwootConnection(),n=await this.getChatwootUser(s);if(!n)throw new Error("User not found to import messages.");let o=0,a=this.historyMessages.get(i.instanceName)||[];if(a.length===0)return 0;a.sort((m,f)=>{let b=m.key,S=f.key,w=m.messageTimestamp,I=f.messageTimestamp;return parseInt(b.remoteJid)-parseInt(S.remoteJid)||w-I});let c=this.createMessagesMapByPhoneNumber(a),u=new Map;c.forEach((m,f)=>{u.set(f,{first:m[0]?.messageTimestamp,last:m[m.length-1]?.messageTimestamp})});let d=await this.getExistingSourceIds(a.map(m=>m.key.id));a=a.filter(m=>!d.has(m.key.id));let l=4e3,g=this.sliceIntoChunks(a,l);for(;g.length>0;){let m=this.createMessagesMapByPhoneNumber(g);if(m.size>0){let f=await this.selectOrCreateFksFromChatwoot(s,e,u,m),b=`INSERT INTO messages
            (content, processed_message_content, account_id, inbox_id, conversation_id, message_type, private, content_type,
            sender_type, sender_id, source_id, created_at, updated_at) VALUES `,S=[s.accountId,e.id];m.forEach((w,I)=>{let E=f.get(I);w.forEach(M=>{if(!M.message||!E?.conversation_id||!E?.contact_id)return;let O=this.getContentMessage(t,M);if(!O)return;S.push(O);let N=`$${S.length}`;S.push(E.conversation_id);let _=`$${S.length}`;S.push(M.key.fromMe?"1":"0");let L=`$${S.length}`;S.push(M.key.fromMe?n.user_type:"Contact");let q=`$${S.length}`;S.push(M.key.fromMe?n.user_id:E.contact_id);let H=`$${S.length}`;S.push("WAID:"+M.key.id);let V=`$${S.length}`;S.push(M.messageTimestamp);let G=`$${S.length}`;b+=`(${N}, ${N}, $1, $2, ${_}, ${L}, FALSE, 0,
                  ${q},${H},${V}, to_timestamp(${G}), to_timestamp(${G})),`})}),S.length>2&&(b.slice(-1)===","&&(b=b.slice(0,-1)),o+=(await r.query(b,S))?.rowCount??0)}g=this.sliceIntoChunks(a,l)}this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i);let y={...s,ignoreJids:Array.isArray(s.ignoreJids)?s.ignoreJids.map(m=>String(m)):[]};return this.importHistoryContacts(i,y),o}catch(r){this.logger.error(`Error on import history messages: ${r.toString()}`),this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i)}}async selectOrCreateFksFromChatwoot(i,t,e,s){let r=ve.getChatwootConnection(),n=[i.accountId,t.id],a=`WITH
              phone_number AS (
                SELECT phone_number, created_at::INTEGER, last_activity_at::INTEGER FROM (
                  VALUES 
                   ${Array.from(s.keys()).map(u=>{let d=e.get(u);if(d){n.push(u);let l=`($${n.length},`;return n.push(d.first),l+=`$${n.length},`,n.push(d.last),`${l}$${n.length})`}}).join(",")}
                 ) as t (phone_number, created_at, last_activity_at)
              ),

              only_new_phone_number AS (
                SELECT * FROM phone_number
                WHERE phone_number NOT IN (
                  SELECT phone_number
                  FROM contacts
                    JOIN contact_inboxes ci ON ci.contact_id = contacts.id AND ci.inbox_id = $2
                    JOIN conversations con ON con.contact_inbox_id = ci.id 
                      AND con.account_id = $1
                      AND con.inbox_id = $2
                      AND con.contact_id = contacts.id
                  WHERE contacts.account_id = $1
                )
              ),

              new_contact AS (
                INSERT INTO contacts (name, phone_number, account_id, identifier, created_at, updated_at)
                SELECT REPLACE(p.phone_number, '+', ''), p.phone_number, $1, CONCAT(REPLACE(p.phone_number, '+', ''),
                  '@s.whatsapp.net'), to_timestamp(p.created_at), to_timestamp(p.last_activity_at)
                FROM only_new_phone_number AS p
                ON CONFLICT(identifier, account_id) DO UPDATE SET updated_at = EXCLUDED.updated_at
                RETURNING id, phone_number, created_at, updated_at
              ),

              new_contact_inbox AS (
                INSERT INTO contact_inboxes (contact_id, inbox_id, source_id, created_at, updated_at)
                SELECT new_contact.id, $2, gen_random_uuid(), new_contact.created_at, new_contact.updated_at
                FROM new_contact 
                RETURNING id, contact_id, created_at, updated_at
              ),

              new_conversation AS (
                INSERT INTO conversations (account_id, inbox_id, status, contact_id,
                  contact_inbox_id, uuid, last_activity_at, created_at, updated_at)
                SELECT $1, $2, 0, new_contact_inbox.contact_id, new_contact_inbox.id, gen_random_uuid(),
                  new_contact_inbox.updated_at, new_contact_inbox.created_at, new_contact_inbox.updated_at
                FROM new_contact_inbox
                RETURNING id, contact_id
              )

              SELECT new_contact.phone_number, new_conversation.contact_id, new_conversation.id AS conversation_id
              FROM new_conversation 
              JOIN new_contact ON new_conversation.contact_id = new_contact.id

              UNION

              SELECT p.phone_number, c.id contact_id, con.id conversation_id
                FROM phone_number p
              JOIN contacts c ON c.phone_number = p.phone_number
              JOIN contact_inboxes ci ON ci.contact_id = c.id AND ci.inbox_id = $2
              JOIN conversations con ON con.contact_inbox_id = ci.id AND con.account_id = $1
                AND con.inbox_id = $2 AND con.contact_id = c.id`,c=await r.query(a,n);return new Map(c.rows.map(u=>[u.phone_number,u]))}async getChatwootUser(i){try{return(await ve.getChatwootConnection().query(`SELECT owner_type AS user_type, owner_id AS user_id
                         FROM access_tokens
                       WHERE token = $1`,[i.token]))?.rows[0]||!1}catch(t){this.logger.error(`Error on getChatwootUser: ${t.toString()}`)}}createMessagesMapByPhoneNumber(i){return i.reduce((t,e)=>{let s=e?.key;if(!this.isIgnorePhoneNumber(s?.remoteJid)){let r=s?.remoteJid?.split("@")[0];if(r){let n=`+${r}`,o=t.has(n)?t.get(n):[];o.push(e),t.set(n,o)}}return t},new Map)}async getContactsOrderByRecentConversations(i,t,e=50){try{return(await ve.getChatwootConnection().query(`SELECT contacts.id, contacts.identifier, contacts.phone_number
                     FROM conversations
                   JOIN contacts ON contacts.id = conversations.contact_id
                   WHERE conversations.account_id = $1
                     AND inbox_id = $2
                   ORDER BY conversations.last_activity_at DESC
                   LIMIT $3`,[t.accountId,i.id,e]))?.rows}catch(s){this.logger.error(`Error on get recent conversations: ${s.toString()}`)}}getContentMessage(i,t){let e=i.getConversationMessage(t.message);if(e)return e;if(!C.get("CHATWOOT").IMPORT.PLACEHOLDER_MEDIA_MESSAGE)return"";let s={documentMessage:t.message.documentMessage,documentWithCaptionMessage:t.message.documentWithCaptionMessage?.message?.documentMessage,imageMessage:t.message.imageMessage,videoMessage:t.message.videoMessage,audioMessage:t.message.audioMessage,stickerMessage:t.message.stickerMessage,templateMessage:t.message.templateMessage?.hydratedTemplate?.hydratedContentText};switch(Object.keys(s).find(n=>s[n]!==void 0)){case"documentMessage":return`_<File: ${t.message.documentMessage.fileName}${t.message.documentMessage.caption?` ${t.message.documentMessage.caption}`:""}>_`;case"documentWithCaptionMessage":return`_<File: ${t.message.documentWithCaptionMessage.message.documentMessage.fileName}${t.message.documentWithCaptionMessage.message.documentMessage.caption?` ${t.message.documentWithCaptionMessage.message.documentMessage.caption}`:""}>_`;case"templateMessage":return t.message.templateMessage.hydratedTemplate.hydratedTitleText?`*${t.message.templateMessage.hydratedTemplate.hydratedTitleText}*\\n`:""+t.message.templateMessage.hydratedTemplate.hydratedContentText;case"imageMessage":return"_<Image Message>_";case"videoMessage":return"_<Video Message>_";case"audioMessage":return"_<Audio Message>_";case"stickerMessage":return"_<Sticker Message>_";default:return""}}sliceIntoChunks(i,t){return i.splice(0,t)}isGroup(i){return i.includes("@g.us")}isIgnorePhoneNumber(i){return this.isGroup(i)||i==="status@broadcast"||i==="0@s.whatsapp.net"}updateMessageSourceID(i,t){return ve.getChatwootConnection().query("UPDATE messages SET source_id = $1, status = 0, created_at = NOW(), updated_at = NOW() WHERE id = $2;",[`WAID:${t}`,i])}},ee=new Dn;var Lr=A(require("@figuro/chatwoot-sdk")),Xt=require("@figuro/chatwoot-sdk/dist/core/request");var _r=A(require("fs")),Pn=A(require("i18next")),xn=A(require("path")),jc=["en","pt-BR","es"],Kc=xn.default.join(__dirname,"translations"),Yc=new Ue,Nr={};jc.forEach(p=>{let i=xn.default.join(Kc,`${p}.json`);_r.default.existsSync(i)&&(Nr[p]={translation:require(i)})});Pn.default.init({resources:Nr,fallbackLng:"en",lng:Yc.get("LANGUAGE"),debug:!1,interpolation:{escapeValue:!1}});var U=Pn.default;var kr=A(require("axios")),Br=A(require("fs")),Qc=JSON.parse(Br.default.readFileSync("./package.json","utf8")),$=async p=>{if(!(process.env.TELEMETRY_ENABLED===void 0||process.env.TELEMETRY_ENABLED==="true")||p==="/")return;let t={route:p,apiVersion:`${Qc.version}`,timestamp:new Date},e=process.env.TELEMETRY_URL&&process.env.TELEMETRY_URL!==""?process.env.TELEMETRY_URL:"https://log.evolution-api.com/telemetry";kr.default.post(e,t).then(()=>{}).catch(()=>{})};var ut=A(require("axios")),Fr=A(require("dayjs")),On=A(require("form-data")),_n=A(require("jimp")),Nn=A(require("long")),Qe=A(require("mime")),kn=A(require("path")),Zt=require("stream"),Ae=class{constructor(i,t,e,s){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.cache=s;this.logger=new T("ChatwootService");this.pgClient=ve.getChatwootConnection()}async getProvider(i){let t=`${i.instanceName}:getProvider`;if(await this.cache.has(t))return await this.cache.get(t);let e=await this.waMonitor.waInstances[i.instanceName]?.findChatwoot();return e?(this.cache.set(t,e),e):(this.logger.warn("provider not found"),null)}async clientCw(i){let t=await this.getProvider(i);return t?(this.provider=t,new Lr.default({config:this.getClientCwConfig()})):(this.logger.error("provider not found"),null)}getClientCwConfig(){return{basePath:this.provider.url,with_credentials:!0,credentials:"include",token:this.provider.token,nameInbox:this.provider.nameInbox,mergeBrazilContacts:this.provider.mergeBrazilContacts}}getCache(){return this.cache}async create(i,t){await this.waMonitor.waInstances[i.instanceName].setChatwoot(t);let e="";if(t.autoCreate){this.logger.log("Auto create chatwoot instance");let s=this.configService.get("SERVER").URL;e=await this.initInstanceChatwoot(i,t.nameInbox??i.instanceName.split("-cwId-")[0],`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`,!0,t.number,t.organization,t.logo),this.logger.log(`Generated Inbox ID in service: ${JSON.stringify(e)}`)}return t.inboxId=e,t}async find(i){try{return await this.waMonitor.waInstances[i.instanceName].findChatwoot()}catch{return this.logger.error("chatwoot not found"),{enabled:null,url:""}}}async getContact(i,t){let e=await this.clientCw(i);if(!e)return this.logger.warn("client not found"),null;if(!t)return this.logger.warn("id is required"),null;let s=await e.contact.getContactable({accountId:this.provider.accountId,id:t});return s||(this.logger.warn("contact not found"),null)}async initInstanceChatwoot(i,t,e,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c=await a.inboxes.list({accountId:this.provider.accountId}),u=c.payload.map(y=>y.name).includes(t),d;if(this.logger.log("Creating chatwoot inbox"),u){let y=c.payload.find(m=>m.name===t);if(!y)return this.logger.warn("inbox not found"),null;d=y.id}else{let y={type:"api",webhook_url:e},m=await a.inboxes.create({accountId:this.provider.accountId,data:{name:t,channel:y}});if(!m)return this.logger.warn("inbox not found"),null;d=m.id}if(this.logger.log(`Inbox created - inboxId: ${d}`),!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;this.logger.log("Creating chatwoot bot contact");let l=await this.findContact(i,"123456")||await this.createContact(i,"123456",d,!1,n||"EvolutionAPI",o||"https://evolution-api.com/files/evolution-api-favicon.png");if(!l)return this.logger.warn("contact not found"),null;let g=l.id||l.payload.contact.id;if(this.logger.log(`Contact created - contactId: ${g}`),s){this.logger.log("QR code enabled");let y={contact_id:g.toString(),inbox_id:d.toString()},m=await a.conversations.create({accountId:this.provider.accountId,data:y});if(!m)return this.logger.warn("conversation not found"),null;let f="init";if(r&&(f=`init:${r}`),!await a.messages.create({accountId:this.provider.accountId,conversationId:m.id,data:{content:f,message_type:"outgoing"}}))return this.logger.warn("conversation not found"),null;this.logger.log("Init message sent")}return d}async createContact(i,t,e,s,r,n,o){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c={};s?c={inbox_id:e,name:r||t,identifier:t,avatar_url:n}:(c={inbox_id:e,name:r||t,identifier:o,avatar_url:n},(o&&o.includes("@")||!o)&&(c.phone_number=`+${t}`));let u=await a.contacts.create({accountId:this.provider.accountId,data:c});if(!u)return this.logger.warn("contact not found"),null;let l=(await this.findContact(i,t))?.id;return await this.addLabelToContact(this.provider.nameInbox,l),u}async updateContact(i,t,e){let s=await this.clientCw(i);if(!s)return this.logger.warn("client not found"),null;if(!t)return this.logger.warn("id is required"),null;try{return await s.contacts.update({accountId:this.provider.accountId,id:t,data:e})}catch{return null}}async addLabelToContact(i,t){try{if(!this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI)return!1;let r=(await this.pgClient.query("SELECT id, taggings_count FROM tags WHERE name = $1 LIMIT 1",[i]))?.rows[0],n=r?.id,o=r?.taggings_count||0;return n=(await this.pgClient.query(`INSERT INTO tags (name, taggings_count) 
                      VALUES ($1, $2) 
                      ON CONFLICT (name) 
                      DO UPDATE SET taggings_count = tags.taggings_count + 1 
                      RETURNING id`,[i,o+1]))?.rows[0]?.id,(await this.pgClient.query(`SELECT 1 FROM taggings 
                               WHERE tag_id = $1 AND taggable_type = 'Contact' AND taggable_id = $2 AND context = 'labels' LIMIT 1`,[n,t]))?.rowCount>0||await this.pgClient.query(`INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) 
                                VALUES ($1, 'Contact', $2, 'labels', NOW())`,[n,t]),!0}catch{return!1}}async findContact(i,t){let e=await this.clientCw(i);if(!e)return this.logger.warn("client not found"),null;let s,r=t.includes("@g.us");r?s=t:s=`+${t}`;let n;return r?n=await e.contacts.search({accountId:this.provider.accountId,q:s}):n=await(0,Xt.request)(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/contacts/filter`,body:{payload:this.getFilterPayload(s)}}),!n&&n?.payload?.length===0?(this.logger.warn("contact not found"),null):r?n.payload.find(o=>o.identifier===s):n.payload.length>1?this.findContactInContactList(n.payload,s):n.payload[0]}async mergeBrazilianContacts(i){try{return await(0,Xt.request)(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/actions/contact_merge`,body:{base_contact_id:i.find(e=>e.phone_number.length===14)?.id,mergee_contact_id:i.find(e=>e.phone_number.length===13)?.id}})}catch{return this.logger.error("Error merging contacts"),null}}findContactInContactList(i,t){let e=this.getNumbers(t),s=this.getSearchableFields();if(i.length===2&&this.getClientCwConfig().mergeBrazilContacts&&t.startsWith("+55")){let o=this.mergeBrazilianContacts(i);if(o)return o}let r=e.reduce((o,a)=>a.length>o.length?a:o,""),n=i.find(o=>o.phone_number===r);if(n)return n;for(let o of i)for(let a of s)if(o[a]&&e.includes(o[a]))return o;return null}getNumbers(i){let t=[];if(t.push(i),i.startsWith("+55")&&i.length===14){let e=i.slice(0,5)+i.slice(6);t.push(e)}else if(i.startsWith("+55")&&i.length===13){let e=i.slice(0,5)+"9"+i.slice(5);t.push(e)}return t}getSearchableFields(){return["phone_number"]}getFilterPayload(i){let t=[],e=this.getNumbers(i),s=this.getSearchableFields();return s.forEach((r,n)=>{e.forEach((o,a)=>{let c=s.length-1===n&&e.length-1===a?null:"OR";t.push({attribute_key:r,filter_operator:"equal_to",values:[o.replace("+","")],query_operator:c})})}),t}async createConversation(i,t){try{this.logger.verbose("--- Start createConversation ---"),this.logger.verbose(`Instance: ${JSON.stringify(i)}`);let e=await this.clientCw(i);if(!e)return this.logger.warn(`Client not found for instance: ${JSON.stringify(i)}`),null;let s=`${i.instanceName}:createConversation-${t.key.remoteJid}`;if(this.logger.verbose(`Cache key: ${s}`),await this.cache.has(s)){this.logger.verbose(`Cache hit for key: ${s}`);let m=await this.cache.get(s);this.logger.verbose(`Cached conversation ID: ${m}`);let f;try{f=await e.conversations.get({accountId:this.provider.accountId,conversationId:m}),this.logger.verbose(`Conversation exists: ${JSON.stringify(f)}`)}catch(b){this.logger.error(`Error getting conversation: ${b}`),f=!1}return f?m:(this.logger.verbose("Conversation does not exist, re-calling createConversation"),this.cache.delete(s),await this.createConversation(i,t))}let r=t.key.remoteJid.includes("@g.us");this.logger.verbose(`Is group: ${r}`);let n=r?t.key.remoteJid:t.key.remoteJid.split("@")[0];this.logger.verbose(`Chat ID: ${n}`);let o;o=t.key.fromMe?n:t.pushName,this.logger.verbose(`Name contact: ${o}`);let a=await this.getInbox(i);if(!a)return this.logger.warn(`Inbox not found for instance: ${JSON.stringify(i)}`),null;if(r){this.logger.verbose("Processing group conversation");let m=await this.waMonitor.waInstances[i.instanceName].client.groupMetadata(n);this.logger.verbose(`Group metadata: ${JSON.stringify(m)}`),o=`${m.subject} (GROUP)`;let f=await this.waMonitor.waInstances[i.instanceName].profilePicture(t.key.participant.split("@")[0]);this.logger.verbose(`Participant profile picture URL: ${JSON.stringify(f)}`);let b=await this.findContact(i,t.key.participant.split("@")[0]);this.logger.verbose(`Found participant: ${JSON.stringify(b)}`),b?(!b.name||b.name===n)&&await this.updateContact(i,b.id,{name:t.pushName,avatar_url:f.profilePictureUrl||null}):await this.createContact(i,t.key.participant.split("@")[0],a.id,!1,t.pushName,f.profilePictureUrl||null,t.key.participant)}let c=await this.waMonitor.waInstances[i.instanceName].profilePicture(n);this.logger.verbose(`Contact profile picture URL: ${JSON.stringify(c)}`);let u=await this.findContact(i,n);if(this.logger.verbose(`Found contact: ${JSON.stringify(u)}`),u){if(!t.key.fromMe){let m=c?.profilePictureUrl?.split("#")[0].split("?")[0].split("/").pop()||"",f=u?.thumbnail?.split("#")[0].split("?")[0].split("/").pop()||"",b=m!==f,S=!u.name||u.name===n||(`+${n}`.startsWith("+55")?this.getNumbers(`+${n}`).some(w=>u.name===w||u.name===w.substring(3)||u.name===w.substring(1)):!1);this.logger.verbose(`Picture needs update: ${b}`),this.logger.verbose(`Name needs update: ${S}`),(b||S)&&(u=await this.updateContact(i,u.id,{...S&&{name:o},...m===""&&{avatar:null},...b&&{avatar_url:c?.profilePictureUrl}}))}}else{let m=t.key.remoteJid;u=await this.createContact(i,n,a.id,r,o,c.profilePictureUrl||null,m)}if(!u)return this.logger.warn("Contact not created or found"),null;let d=u?.payload?.id||u?.payload?.contact?.id||u?.id;this.logger.verbose(`Contact ID: ${d}`);let l=await e.contacts.listConversations({accountId:this.provider.accountId,id:d});if(this.logger.verbose(`Contact conversations: ${JSON.stringify(l)}`),!l||!l.payload)return this.logger.error("No conversations found or payload is undefined"),null;if(l.payload.length){let m;if(this.provider.reopenConversation?(m=l.payload.find(f=>f.inbox_id==a.id),this.logger.verbose(`Found conversation in reopenConversation mode: ${JSON.stringify(m)}`),this.provider.conversationPending&&m&&await e.conversations.toggleStatus({accountId:this.provider.accountId,conversationId:m.id,data:{status:"pending"}})):(m=l.payload.find(f=>f.status!=="resolved"&&f.inbox_id==a.id),this.logger.verbose(`Found conversation: ${JSON.stringify(m)}`)),m)return this.logger.verbose(`Returning existing conversation ID: ${m.id}`),this.cache.set(s,m.id),m.id}let g={contact_id:d.toString(),inbox_id:a.id.toString()};this.provider.conversationPending&&(g.status="pending");let y=await e.conversations.create({accountId:this.provider.accountId,data:g});return y?(this.logger.verbose(`New conversation created with ID: ${y.id}`),this.cache.set(s,y.id),y.id):(this.logger.warn("Conversation not created or found"),null)}catch(e){this.logger.error(`Error in createConversation: ${e}`)}}async getInbox(i){let t=`${i.instanceName}:getInbox`;if(await this.cache.has(t))return await this.cache.get(t);let e=await this.clientCw(i);if(!e)return this.logger.warn("client not found"),null;let s=await e.inboxes.list({accountId:this.provider.accountId});if(!s)return this.logger.warn("inbox not found"),null;let r=s.payload.find(n=>n.name===this.getClientCwConfig().nameInbox);return r?(this.cache.set(t,r),r):(this.logger.warn("inbox not found"),null)}async createMessage(i,t,e,s,r,n,o,a,c){let u=await this.clientCw(i);if(!u)return this.logger.warn("client not found"),null;let d=await this.getReplyToIds(o,i),l=c?.chatwootMessageId||null,g=await u.messages.create({accountId:this.provider.accountId,conversationId:t,data:{content:e,message_type:s,attachments:n,private:r||!1,source_id:a,content_attributes:{...d},source_reply_id:l?l.toString():null}});return g||(this.logger.warn("message not found"),null)}async getOpenConversationByContact(i,t,e){let s=await this.clientCw(i);return s?(await s.contacts.listConversations({accountId:this.provider.accountId,id:e.id})).payload.find(n=>n.inbox_id===t.id&&n.status==="open")||void 0:(this.logger.warn("client not found"),null)}async createBotMessage(i,t,e,s){let r=await this.clientCw(i);if(!r)return this.logger.warn("client not found"),null;let n=await this.findContact(i,"123456");if(!n)return this.logger.warn("contact not found"),null;let o=await this.getInbox(i);if(!o)return this.logger.warn("inbox not found"),null;let a=await this.getOpenConversationByContact(i,o,n);if(!a){this.logger.warn("conversation not found");return}let c=await r.messages.create({accountId:this.provider.accountId,conversationId:a.id,data:{content:t,message_type:e,attachments:s}});return c||(this.logger.warn("message not found"),null)}async sendData(i,t,e,s,r,n,o,a,c){if(a&&this.isImportHistoryAvailable()){let g=await ee.getExistingSourceIds([a]);if(g&&g.size>0)return this.logger.warn("Message already saved on chatwoot"),null}let u=new On.default;r&&u.append("content",r),u.append("message_type",s),u.append("attachments[]",t,{filename:e});let d=c?.chatwootMessageId||null;if(o&&n){let g=await this.getReplyToIds(o,n);if(g.in_reply_to||g.in_reply_to_external_id){let y=JSON.stringify({...g});u.append("content_attributes",y)}}d&&u.append("source_reply_id",d.toString()),a&&u.append("source_id",a);let l={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${i}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:g}=await ut.default.request(l);return g}catch(g){this.logger.error(g)}}async createBotQr(i,t,e,s,r){if(!await this.clientCw(i))return this.logger.warn("client not found"),null;if(!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;let o=await this.findContact(i,"123456");if(!o)return this.logger.warn("contact not found"),null;let a=await this.getInbox(i);if(!a)return this.logger.warn("inbox not found"),null;let c=await this.getOpenConversationByContact(i,a,o);if(!c){this.logger.warn("conversation not found");return}let u=new On.default;t&&u.append("content",t),u.append("message_type",e),s&&r&&u.append("attachments[]",s,{filename:r});let d={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${c.id}/messages`,headers:{api_access_token:this.provider.token,...u.getHeaders()},data:u};try{let{data:l}=await ut.default.request(d);return l}catch(l){this.logger.error(l)}}async sendAttachment(i,t,e,s,r){try{let n=kn.default.parse(decodeURIComponent(e)),o=Qe.default.getType(n?.ext)||"",a=n?.name+n?.ext;if(!o){let l=e.split("/");a=decodeURIComponent(l[l.length-1]),o=(await ut.default.get(e,{responseType:"arraybuffer"})).headers["content-type"]}let c="document";switch(o.split("/")[0]){case"image":c="image";break;case"video":c="video";break;case"audio":c="audio";break;default:c="document";break}if(c==="audio"){let l={number:t,audio:e,delay:1200,quoted:r?.quoted};return $("/message/sendWhatsAppAudio"),await i?.audioWhatsapp(l,!0)}c==="image"&&n&&n?.ext===".gif"&&(c="document");let u={number:t,mediatype:c,fileName:a,media:e,delay:1200,quoted:r?.quoted};return $("/message/sendMedia"),s&&(u.caption=s),await i?.mediaMessage(u,null,!0)}catch(n){this.logger.error(n)}}async onSendMessageError(i,t,e){this.logger.verbose(`onSendMessageError ${JSON.stringify(e)}`);let s=await this.clientCw(i);if(s){if(e&&e?.status===400&&e?.message[0]?.exists===!1){s.messages.create({accountId:this.provider.accountId,conversationId:t,data:{content:`${U.t("cw.message.numbernotinwhatsapp")}`,message_type:"outgoing",private:!0}});return}s.messages.create({accountId:this.provider.accountId,conversationId:t,data:{content:U.t("cw.message.notsent",{error:e?`_${e.toString()}_`:""}),message_type:"outgoing",private:!0}})}}async receiveWebhook(i,t){try{if(await new Promise(c=>setTimeout(c,500)),!await this.clientCw(i))return this.logger.warn("client not found"),null;if(this.provider.reopenConversation===!1&&t.event==="conversation_status_changed"&&t.status==="resolved"&&t.meta?.sender?.identifier){let c=`${i.instanceName}:createConversation-${t.meta.sender.identifier}`;this.cache.delete(c)}if(!t?.conversation||t.private||t.event==="message_updated"&&!t.content_attributes?.deleted)return{message:"bot"};let s=t.conversation.meta.sender?.identifier||t.conversation.meta.sender?.phone_number.replace("+",""),r=t.content?t.content.replaceAll(/(?<!\*)\*((?!\s)([^\n*]+?)(?<!\s))\*(?!\*)/g,"_$1_").replaceAll(/\*{2}((?!\s)([^\n*]+?)(?<!\s))\*{2}/g,"*$1*").replaceAll(/~{2}((?!\s)([^\n*]+?)(?<!\s))~{2}/g,"~$1~").replaceAll(/(?<!`)`((?!\s)([^`*]+?)(?<!\s))`(?!`)/g,"```$1```"):t.content,n=t?.conversation?.messages[0]?.sender?.available_name||t?.sender?.name,o=this.waMonitor.waInstances[i.instanceName];if(t.event==="message_updated"&&t.content_attributes?.deleted){let c=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:t.id,instanceId:i.instanceId}});if(c){let u=c.key;await o?.client.sendMessage(u.remoteJid,{delete:u}),await this.prismaRepository.message.deleteMany({where:{instanceId:i.instanceId,chatwootMessageId:t.id}})}return{message:"bot"}}let a=this.configService.get("CHATWOOT").BOT_CONTACT;if(s==="123456"&&t.message_type==="outgoing"){let c=r.replace("/","");if(a&&(c.includes("init")||c.includes("iniciar")))if(o?.connectionStatus?.state!=="open"){let d=c.split(":")[1];await o.connectToWhatsapp(d)}else await this.createBotMessage(i,U.t("cw.inbox.alreadyConnected",{inboxName:t.inbox.name}),"incoming");if(c==="clearcache"&&(o.clearCacheChatwoot(),await this.createBotMessage(i,U.t("cw.inbox.clearCache",{inboxName:t.inbox.name}),"incoming")),c==="status"){let u=o?.connectionStatus?.state;u||await this.createBotMessage(i,U.t("cw.inbox.notFound",{inboxName:t.inbox.name}),"incoming"),u&&await this.createBotMessage(i,U.t("cw.inbox.status",{inboxName:t.inbox.name,state:u}),"incoming")}if(a&&(c==="disconnect"||c==="desconectar")){let u=U.t("cw.inbox.disconnect",{inboxName:t.inbox.name});await this.createBotMessage(i,u,"incoming"),await o?.client?.logout("Log out instance: "+i.instanceName),await o?.client?.ws?.close()}}if(t.message_type==="outgoing"&&t?.conversation?.messages?.length&&s!=="123456"){if(t?.conversation?.messages[0]?.source_id?.substring(0,5)==="WAID:")return{message:"bot"};if(!o&&t.conversation?.id)return this.onSendMessageError(i,t.conversation?.id,"Instance not found"),{message:"bot"};let c;if(n==null)c=r;else{let d=this.provider.signDelimiter?this.provider.signDelimiter.replaceAll("\\n",`
`):`
`,l=this.provider.signMsg?[`*${n}:*`]:[];l.push(r),c=l.join(d)}for(let d of t.conversation.messages)if(d.attachments&&d.attachments.length>0)for(let l of d.attachments){r||(c=null);let g={quoted:await this.getQuotedMessage(t,i)},y=await this.sendAttachment(o,s,l.data_url,c,g);!y&&t.conversation?.id&&this.onSendMessageError(i,t.conversation?.id),await this.updateChatwootMessageId({...y,owner:i.instanceName},{messageId:t.id,inboxId:t.inbox?.id,conversationId:t.conversation?.id,contactInboxSourceId:t.conversation?.contact_inbox?.source_id},i)}else{let l={number:s,text:c,delay:1200,quoted:await this.getQuotedMessage(t,i)};$("/message/sendText");let g;try{if(g=await o?.textMessage(l,!0),!g)throw new Error("Message not sent");Nn.default.isLong(g?.messageTimestamp)&&(g.messageTimestamp=g.messageTimestamp?.toNumber()),await this.updateChatwootMessageId({...g,instanceId:i.instanceId},{messageId:t.id,inboxId:t.inbox?.id,conversationId:t.conversation?.id,contactInboxSourceId:t.conversation?.contact_inbox?.source_id},i)}catch(y){throw!g&&t.conversation?.id&&this.onSendMessageError(i,t.conversation?.id,y),y}}if(this.configService.get("CHATWOOT").MESSAGE_READ){let d=await this.prismaRepository.message.findFirst({where:{key:{path:["fromMe"],equals:!1},instanceId:i.instanceId}});if(d&&!d.chatwootIsRead){let l=d.key;o?.markMessageAsRead({readMessages:[{id:l.id,fromMe:l.fromMe,remoteJid:l.remoteJid}]});let g={chatwootMessageId:d.chatwootMessageId,chatwootConversationId:d.chatwootConversationId,chatwootInboxId:d.chatwootInboxId,chatwootContactInboxSourceId:d.chatwootContactInboxSourceId,chatwootIsRead:!0};await this.prismaRepository.message.updateMany({where:{instanceId:i.instanceId,key:{path:["id"],equals:l.id}},data:g})}}}if(t.message_type==="template"&&t.event==="message_created"){let c={number:s,text:t.content.replace(/\\\r\n|\\\n|\n/g,`
`),delay:1200};$("/message/sendText"),await o?.textMessage(c)}return{message:"bot"}}catch(e){return this.logger.error(e),{message:"bot"}}}async updateChatwootMessageId(i,t,e){let s=i.key;!t.messageId||!s?.id||(await this.prismaRepository.message.updateMany({where:{key:{path:["id"],equals:s.id},instanceId:e.instanceId},data:{chatwootMessageId:t.messageId,chatwootConversationId:t.conversationId,chatwootInboxId:t.inboxId,chatwootContactInboxSourceId:t.contactInboxSourceId,chatwootIsRead:t.isRead}}),this.isImportHistoryAvailable()&&ee.updateMessageSourceID(t.messageId,s.id))}async getMessageByKeyId(i,t){return await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:t},instanceId:i.instanceId}})||null}async getReplyToIds(i,t){let e=null,s=null;if(i&&(s=i.message?.extendedTextMessage?.contextInfo?.stanzaId??i.contextInfo?.stanzaId,s)){let r=await this.getMessageByKeyId(t,s);r?.chatwootMessageId&&(e=r.chatwootMessageId)}return{in_reply_to:e,in_reply_to_external_id:s}}async getQuotedMessage(i,t){if(i?.content_attributes?.in_reply_to){let e=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:i?.content_attributes?.in_reply_to,instanceId:t.instanceId}}),s=e?.key;if(e&&s?.id)return{key:e.key,message:e.message}}return null}isMediaMessage(i){let t=["imageMessage","documentMessage","documentWithCaptionMessage","audioMessage","videoMessage","stickerMessage","viewOnceMessageV2"];return Object.keys(i).some(r=>t.includes(r))}getAdsMessage(i){return{title:i.extendedTextMessage?.contextInfo?.externalAdReply?.title||i.contextInfo?.externalAdReply?.title,body:i.extendedTextMessage?.contextInfo?.externalAdReply?.body||i.contextInfo?.externalAdReply?.body,thumbnailUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.thumbnailUrl||i.contextInfo?.externalAdReply?.thumbnailUrl,sourceUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.sourceUrl||i.contextInfo?.externalAdReply?.sourceUrl}}getReactionMessage(i){return i?.reactionMessage}getTypeMessage(i){return{conversation:i.conversation,imageMessage:i.imageMessage?.caption,videoMessage:i.videoMessage?.caption,extendedTextMessage:i.extendedTextMessage?.text,messageContextInfo:i.messageContextInfo?.stanzaId,stickerMessage:void 0,documentMessage:i.documentMessage?.caption,documentWithCaptionMessage:i.documentWithCaptionMessage?.message?.documentMessage?.caption,audioMessage:i.audioMessage?.caption,contactMessage:i.contactMessage?.vcard,contactsArrayMessage:i.contactsArrayMessage,locationMessage:i.locationMessage,liveLocationMessage:i.liveLocationMessage,listMessage:i.listMessage,listResponseMessage:i.listResponseMessage,viewOnceMessageV2:i?.message?.viewOnceMessageV2?.message?.imageMessage?.url||i?.message?.viewOnceMessageV2?.message?.videoMessage?.url||i?.message?.viewOnceMessageV2?.message?.audioMessage?.url}}getMessageContent(i){let t=Object.keys(i).find(s=>i[s]!==void 0),e=t?i[t]:void 0;if(e&&typeof e=="string"&&e.includes("externalAdReplyBody|")&&(e=e.split("externalAdReplyBody|").filter(Boolean).join("")),t==="locationMessage"||t==="liveLocationMessage"){let s=e.degreesLatitude,r=e.degreesLongitude,n=e?.name,o=e?.address;return`*${U.t("cw.locationMessage.location")}:*

_${U.t("cw.locationMessage.latitude")}:_ ${s} 
_${U.t("cw.locationMessage.longitude")}:_ ${r} 
`+(n?`_${U.t("cw.locationMessage.locationName")}:_ ${n}
`:"")+(o?`_${U.t("cw.locationMessage.locationAddress")}:_ ${o} 
`:"")+`_${U.t("cw.locationMessage.locationUrl")}:_ https://www.google.com/maps/search/?api=1&query=${s},${r}`}if(t==="contactMessage"){let s=e.split(`
`),r={};s.forEach(a=>{let[c,u]=a.split(":");c&&u&&(r[c]=u)});let n=`*${U.t("cw.contactMessage.contact")}:*

_${U.t("cw.contactMessage.name")}:_ ${r.FN}`,o=1;return Object.keys(r).forEach(a=>{if(a.startsWith("item")&&a.includes("TEL")){let c=r[a];n+=`
_${U.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}else if(a.includes("TEL")){let c=r[a];n+=`
_${U.t("cw.contactMessage.number")} (${o}):_ ${c}`,o++}}),n}if(t==="contactsArrayMessage")return e.contacts.map(n=>{let o=n.vcard.split(`
`),a={};o.forEach(d=>{let[l,g]=d.split(":");l&&g&&(a[l]=g)});let c=`*${U.t("cw.contactMessage.contact")}:*

_${U.t("cw.contactMessage.name")}:_ ${n.displayName}`,u=1;return Object.keys(a).forEach(d=>{if(d.startsWith("item")&&d.includes("TEL")){let l=a[d];c+=`
_${U.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}else if(d.includes("TEL")){let l=a[d];c+=`
_${U.t("cw.contactMessage.number")} (${u}):_ ${l}`,u++}}),c}).join(`

`);if(t==="listMessage"){let s=e?.title||"Unknown",r=e?.description||"Unknown",n=e?.footerText||"Unknown",o=`*List Menu:*

_Title_: `+s+`
_Description_: `+r+`
_Footer_: `+n;return e.sections&&e.sections.length>0?e.sections.forEach((a,c)=>{o+=`

*Section `+(c+1)+":* "+a.title||`Unknown
`,a.rows&&a.rows.length>0?a.rows.forEach((u,d)=>{o+=`
*Line `+(d+1)+`:*
`,o+="_\u25AA\uFE0F Title:_ "+(u.title||"Unknown")+`
`,o+="_\u25AA\uFE0F Description:_ "+(u.description||"Unknown")+`
`,o+="_\u25AA\uFE0F ID:_ "+(u.rowId||"Unknown")+`
`}):o+=`
No lines found in this section.
`}):o+=`
No sections found.
`,o}if(t==="listResponseMessage"){let s=e?.title||"Unknown",r=e?.description||"Unknown",n=e?.singleSelectReply?.selectedRowId||"Unknown";return`*List Response:*

_Title_: `+s+`
_Description_: `+r+`
_ID_: `+n}return e}getConversationMessage(i){let t=this.getTypeMessage(i);return this.getMessageContent(t)}async eventWhatsapp(i,t,e){try{let s=this.waMonitor.waInstances[t.instanceName];if(!s)return this.logger.warn("wa instance not found"),null;let r=await this.clientCw(t);if(!r)return this.logger.warn("client not found"),null;if(this.provider?.ignoreJids&&this.provider?.ignoreJids.length>0){let n=this.provider?.ignoreJids,o=!1,a=!1;if(n.includes("@g.us")&&(o=!0),n.includes("@s.whatsapp.net")&&(a=!0),o&&e?.key?.remoteJid.endsWith("@g.us")){this.logger.warn("Ignoring message from group: "+e?.key?.remoteJid);return}if(a&&e?.key?.remoteJid.endsWith("@s.whatsapp.net")){this.logger.warn("Ignoring message from contact: "+e?.key?.remoteJid);return}if(n.includes(e?.key?.remoteJid)){this.logger.warn("Ignoring message from jid: "+e?.key?.remoteJid);return}}if(i==="messages.upsert"||i==="send.message"){if(e.key.remoteJid==="status@broadcast")return;e.message?.ephemeralMessage?.message&&(e.message={...e.message?.ephemeralMessage?.message});let n=await this.getConversationMessage(e.message),o=n&&n.replaceAll(/\*((?!\s)([^\n*]+?)(?<!\s))\*/g,"**$1**").replaceAll(/_((?!\s)([^\n_]+?)(?<!\s))_/g,"*$1*").replaceAll(/~((?!\s)([^\n~]+?)(?<!\s))~/g,"~~$1~~");if(o&&o.includes("Por favor, classifique esta conversa, http"))return;let a=e.contextInfo?.stanzaId||e.message?.contextInfo?.stanzaId,c=null;a&&(c=await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:a},chatwootMessageId:{not:null}}}));let u=this.isMediaMessage(e.message),d=this.getAdsMessage(e),l=this.getReactionMessage(e.message);if(!o&&!u&&!l){this.logger.warn("no body message found");return}let g=await this.createConversation(t,e);if(!g){this.logger.warn("conversation not found");return}let y=e.key.fromMe?"outgoing":"incoming";if(u){let f=await s?.getBase64FromMediaMessage({message:{...e}}),b,S=e?.message[e?.messageType],w=S?.fileName||S?.filename||S?.message?.documentMessage?.fileName;if(w){let M=kn.default.parse(w);M.name&&M.ext&&(b=`${M.name}-${Math.floor(Math.random()*90+10)}${M.ext}`)}b||(b=`${Math.random().toString(36).substring(7)}.${Qe.default.getExtension(f.mimetype)||""}`);let I=Buffer.from(f.base64,"base64"),E=new Zt.Readable;if(E._read=()=>{},E.push(I),E.push(null),e.key.remoteJid.includes("@g.us")){let M=e.pushName,O;e.key.fromMe?O=`${o}`:O=`**${M}:**

${o}`;let N=await this.sendData(g,E,b,y,O,t,e,"WAID:"+e.key.id,c);if(!N){this.logger.warn("message not sent");return}return N}else{let M=await this.sendData(g,E,b,y,o,t,e,"WAID:"+e.key.id,c);if(!M){this.logger.warn("message not sent");return}return M}}if(l){if(l.text&&!await this.createMessage(t,g,l.text,y,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:l.key.id}}}},"WAID:"+e.key.id,c)){this.logger.warn("message not sent");return}return}if(d&&d.title||d.body||d.thumbnailUrl){let f=await ut.default.get(d.thumbnailUrl,{responseType:"arraybuffer"}),b=Qe.default.getExtension(f.headers["content-type"]),S=b&&Qe.default.getType(b);if(!S){this.logger.warn("mimetype of Ads message not found");return}let I=`${Math.random().toString(36).substring(7)}.${Qe.default.getExtension(S)}`,E=Buffer.from(f.data,"binary"),M=await _n.default.read(E);await M.cover(320,180);let O=await M.getBufferAsync(_n.default.MIME_PNG),N=new Zt.Readable;N._read=()=>{},N.push(O),N.push(null);let _=(V,G)=>V?V.length>G?V.substring(0,G)+"...":V:"",L=_(d.title,40),q=_(d?.body,75),H=await this.sendData(g,N,I,y,`${o}


**${L}**
${q}
${d.sourceUrl}`,t,e,"WAID:"+e.key.id);if(!H){this.logger.warn("message not sent");return}return H}if(e.key.remoteJid.includes("@g.us")){let f=e.pushName,b;e.key.fromMe?b=`${o}`:b=`**${f}**

${o}`;let S=await this.createMessage(t,g,b,y,!1,[],e,"WAID:"+e.key.id,c);if(!S){this.logger.warn("message not sent");return}return S}else{let f=await this.createMessage(t,g,o,y,!1,[],e,"WAID:"+e.key.id,c);if(!f){this.logger.warn("message not sent");return}return f}}if(i==="messages.delete"&&this.configService.get("CHATWOOT").MESSAGE_DELETE===!0){if(!e?.key?.id){this.logger.warn("message id not found");return}let o=await this.getMessageByKeyId(t,e.key.id);if(o?.chatwootMessageId&&o?.chatwootConversationId)return await this.prismaRepository.message.deleteMany({where:{key:{path:["id"],equals:e.key.id},instanceId:t.instanceId}}),await r.messages.delete({accountId:this.provider.accountId,conversationId:o.chatwootConversationId,messageId:o.chatwootMessageId})}if(i==="messages.edit"){let n=`${e?.editedMessage?.conversation||e?.editedMessage?.extendedTextMessage?.text}

_\`${U.t("cw.message.edited")}.\`_`,o=await this.getMessageByKeyId(t,e?.key?.id),a=o.key,c=a?.fromMe?"outgoing":"incoming";if(o&&o.chatwootConversationId&&!await this.createMessage(t,o.chatwootConversationId,n,c,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:a.id}}}},"WAID:"+e.key.id,null)){this.logger.warn("edited message not sent");return}return}if(i==="messages.read"){if(!e?.key?.id||!e?.key?.remoteJid){this.logger.warn("message id not found");return}let n=await this.getMessageByKeyId(t,e.key.id),o=n?.chatwootConversationId,a=n?.chatwootContactInboxSourceId;if(o){let c=a,u=await this.getInbox(t);if(!c&&u&&(c=(await r.conversations.get({accountId:this.provider.accountId,conversationId:o})).last_non_activity_message?.conversation?.contact_inbox?.source_id),c&&u?.inbox_identifier){let d=`/public/api/v1/inboxes/${u.inbox_identifier}/contacts/${c}/conversations/${o}/update_last_seen`;(0,Xt.request)(this.getClientCwConfig(),{method:"POST",url:d})}}return}if(i==="status.instance"){let n=e,o=await this.getInbox(t);if(!o){this.logger.warn("inbox not found");return}let a=U.t("cw.inbox.status",{inboxName:o.name,state:n.status});await this.createBotMessage(t,a,"incoming")}if(i==="connection.update"&&e.status==="open"&&this.waMonitor.waInstances[t.instanceName].qrCode.count>0){let n=U.t("cw.inbox.connected");await this.createBotMessage(t,n,"incoming"),this.waMonitor.waInstances[t.instanceName].qrCode.count=0,ee.clearAll(t)}if(i==="qrcode.updated")if(e.statusCode===500){let n=`\u{1F6A8} ${U.t("qrlimitreached")}`;return await this.createBotMessage(t,n,"incoming")}else{let n=Buffer.from(e?.qrcode.base64.replace("data:image/png;base64,",""),"base64"),o=new Zt.Readable;o._read=()=>{},o.push(n),o.push(null),await this.createBotQr(t,U.t("qrgeneratedsuccesfully"),"incoming",o,`${t.instanceName}.png`);let a=`\u26A1\uFE0F${U.t("qrgeneratedsuccesfully")}

${U.t("scanqr")}`;e?.qrcode?.pairingCode&&(a=a+`

*Pairing Code:* ${e.qrcode.pairingCode.substring(0,4)}-${e.qrcode.pairingCode.substring(4,8)}`),await this.createBotMessage(t,a,"incoming")}}catch(s){this.logger.error(s)}}getNumberFromRemoteJid(i){return i.replace(/:\d+/,"").split("@")[0]}startImportHistoryMessages(i){this.isImportHistoryAvailable()&&this.createBotMessage(i,U.t("cw.import.startImport"),"incoming")}isImportHistoryAvailable(){let i=this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return i&&i!=="postgres://user:password@hostname:port/dbname"}addHistoryMessages(i,t){this.isImportHistoryAvailable()&&ee.addHistoryMessages(i,t)}addHistoryContacts(i,t){if(this.isImportHistoryAvailable())return ee.addHistoryContacts(i,t)}async importHistoryMessages(i){if(!this.isImportHistoryAvailable())return;this.createBotMessage(i,U.t("cw.import.importingMessages"),"incoming");let t=await ee.importHistoryMessages(i,this,await this.getInbox(i),this.provider);this.updateContactAvatarInRecentConversations(i);let e=Number.isInteger(t)?U.t("cw.import.messagesImported",{totalMessagesImported:t}):U.t("cw.import.messagesException");return this.createBotMessage(i,e,"incoming"),t}async updateContactAvatarInRecentConversations(i,t=100){try{if(!this.isImportHistoryAvailable())return;let e=await this.clientCw(i);if(!e)return this.logger.warn("client not found"),null;let s=await this.getInbox(i);if(!s)return this.logger.warn("inbox not found"),null;let r=await ee.getContactsOrderByRecentConversations(s,this.provider,t),n=r.map(a=>a.identifier).filter(a=>a!==null),o=(await this.prismaRepository.contact.findMany({where:{instanceId:i.instanceId,id:{in:n},profilePicUrl:{not:null}}})).reduce((a,c)=>a.set(c.id,c),new Map);r.forEach(async a=>{o.has(a.identifier)&&e.contacts.update({accountId:this.provider.accountId,id:a.id,data:{avatar_url:o.get(a.identifier).profilePictureUrl||null}})})}catch(e){this.logger.error(`Error on update avatar in recent conversations: ${e.toString()}`)}}async syncLostMessages(i,t,e){try{if(!this.isImportHistoryAvailable()||!this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE)return;let s=await this.getInbox(i),r=`select * from messages m
      where account_id = ${t.accountId}
      and inbox_id = ${s.id}
      and created_at >= now() - interval '6h'
      order by created_at desc`,o=((await this.pgClient.query(r))?.rows).filter(l=>!!l.source_id).map(l=>l.source_id.replace("WAID:","")),c=(await this.prismaRepository.message.findMany({where:{Instance:{name:i.instanceName},messageTimestamp:{gte:(0,Fr.default)().subtract(6,"hours").unix()},AND:o.map(l=>({key:{path:["id"],not:l}}))}})).filter(l=>!ee.isIgnorePhoneNumber(l.key?.remoteJid)),u=[];for(let l of c)!l.message||!l.key||!l.messageTimestamp||(Nn.default.isLong(l?.messageTimestamp)&&(l.messageTimestamp=l.messageTimestamp?.toNumber()),u.push(e(l)));this.addHistoryMessages(i,u.filter(l=>!ee.isIgnorePhoneNumber(l.key?.remoteJid))),await ee.importHistoryMessages(i,this,s,this.provider),this.waMonitor.waInstances[i.instanceName].clearCacheChatwoot()}catch{return}}};var dt=A(require("axios")),Ur=require("stream"),ze=class{constructor(i,t,e){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.logger=new T("DifyService")}async createNewSession(i,t){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName,sessionId:t.remoteJid,status:"opened",awaitUser:!1,botId:t.botId,instanceId:i.instanceId,type:"dify"}})}}catch(e){this.logger.error(e);return}}isImageMessage(i){return i.includes("imageMessage")}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async sendMessageToBot(i,t,e,s,r,n,o){try{let a=s.apiUrl;if(s.botType==="chatBot"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"blocking",conversation_id:t.sessionId===r?void 0:t.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.query=g[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await dt.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,e),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0,sessionId:t.sessionId===r?l:t.sessionId}})}if(s.botType==="textGenerator"){a+="/completion-messages";let c={inputs:{query:o,pushName:n,remoteJid:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",conversation_id:t.sessionId===r?void 0:t.sessionId,user:r};if(this.isImageMessage(o)){let g=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.inputs.query=g[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await dt.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.answer,l=u?.data?.conversation_id;await this.sendMessageWhatsApp(i,r,d,e),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0,sessionId:t.sessionId===r?l:t.sessionId}})}if(s.botType==="agent"){a+="/chat-messages";let c={inputs:{remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:o,response_mode:"streaming",conversation_id:t.sessionId===r?void 0:t.sessionId,user:r};if(this.isImageMessage(o)){let m=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:m[1].split("?")[0]}],c.query=m[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await dt.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`},responseType:"stream"}),d,l="",g=u.data,y=new Ur.Readable().wrap(g);y.on("data",m=>{let f=m.toString().replace(/data:\s*/g,"");if(!(f.trim()===""||!f.startsWith("{")))try{let b=f.split(`
`).filter(S=>S.trim()!=="");for(let S of b)if(S.trim().startsWith("{")){let w=JSON.parse(S);w?.event==="agent_message"&&(console.log("event:",w),d=d??w?.conversation_id,l+=w?.answer)}}catch(b){console.error("Error parsing stream data:",b)}}),y.on("end",async()=>{i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let m=l;await this.sendMessageWhatsApp(i,r,m,e),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0,sessionId:d}})}),y.on("error",m=>{console.error("Error reading stream:",m)});return}if(s.botType==="workflow"){a+="/workflows/run";let c={inputs:{query:o,remoteJid:r,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",user:r};if(this.isImageMessage(o)){let l=o.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:l[1].split("?")[0]}],c.inputs.query=l[2]||o}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(r),await i.client.sendPresenceUpdate("composing",r));let u=await dt.default.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",r);let d=u?.data?.data.outputs.text;await this.sendMessageWhatsApp(i,r,d,e),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}});return}}catch(a){this.logger.error(a.response?.data||a);return}}async sendMessageWhatsApp(i,t,e,s){let r=/(!?)\[(.*?)\]\((.*?)\)/g,n="",o=0,a,c=y=>{let m=y.split(".").pop()?.toLowerCase(),f=["jpg","jpeg","png","gif","bmp","webp"],b=["mp3","wav","aac","ogg"],S=["mp4","avi","mkv","mov"],w=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return f.includes(m||"")?"image":b.includes(m||"")?"audio":S.includes(m||"")?"video":w.includes(m||"")?"document":null};for(;(a=r.exec(e))!==null;){let[y,m,f,b]=a,S=c(b),w=e.slice(o,a.index);if(w&&(n+=w),S){let I=s.splitMessages??!1,E=s.timePerChar??0,M=1e3,O=2e4;if(n.trim())if(I){let N=n.trim().split(`

`);for(let _=0;_<N.length;_++){let L=N[_],q=Math.min(Math.max(L.length*E,M),O);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(H=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:L},!1),H()},q)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1),n="";S==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:b,caption:f}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:S,media:b,caption:f},null,!1)}else n+=`[${f}](${b})`;o=r.lastIndex}if(o<e.length){let y=e.slice(o);y.trim()&&(n+=y)}let u=s.splitMessages??!1,d=s.timePerChar??0,l=1e3,g=2e4;if(n.trim())if(u){let y=n.trim().split(`

`);for(let m=0;m<y.length;m++){let f=y[m],b=Math.min(Math.max(f.length*d,l),g);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(S=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:f},!1),S()},b)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1);$("/message/sendText")}async initNewSession(i,t,e,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:t,pushName:o,botId:e.id});a.session&&(r=a.session),await this.sendMessageToBot(i,r,s,e,t,o,n)}async processDify(i,t,e,s,r,n,o){if(!(s&&s.status!=="opened")){if(s&&r.expire&&r.expire>0){let a=Date.now(),c=new Date(s.updatedAt).getTime(),u=a-c;if(Math.floor(u/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}}),await this.initNewSession(i,t,e,r,s,n,o);return}}if(!s){await this.initNewSession(i,t,e,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:t.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}});return}await this.sendMessageToBot(i,s,r,e,t,o,n)}}};var es=A(require("axios")),Jr=require("baileys"),Wr=A(require("form-data")),gt=A(require("openai")),$r=A(require("pino")),Xe=class{constructor(i,t,e){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.logger=new T("OpenaiService")}async sendMessageToBot(i,t,e,s){let n=t.systemMessages.map(m=>({role:"system",content:m})),a=t.assistantMessages.map(m=>({role:"assistant",content:m})),u=t.userMessages.map(m=>({role:"user",content:m})),d={role:"user",content:[{type:"text",text:s}]};if(this.isImageMessage(s)){let m=s.split("|"),f=m[1].split("?")[0];d.content=[{type:"text",text:m[2]||s},{type:"image_url",image_url:{url:f}}]}let l=[...n,...a,...u,d];i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e));let g=await this.client.chat.completions.create({model:t.model,messages:l,max_tokens:t.maxTokens});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e),g.choices[0].message.content}async sendMessageToAssistant(i,t,e,s,r,n,o){let a={role:r?"assistant":"user",content:[{type:"text",text:n}]};if(this.isImageMessage(n)){let l=n.split("|"),g=l[1].split("?")[0];a.content=[{type:"text",text:l[2]||n},{type:"image_url",image_url:{url:g}}]}if(await this.client.beta.threads.messages.create(o,a),r){$("/message/sendText");return}let c=await this.client.beta.threads.runs.create(o,{assistant_id:t.assistantId});i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e));let u=await this.getAIResponse(o,c.id,t.functionUrl,e,s);return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e),u?.data[0].content[0].text.value}async sendMessageWhatsapp(i,t,e,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,M=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*M,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,y=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),y);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async createAssistantNewSession(i,t){if(t.remoteJid==="status@broadcast")return;let e=await this.prismaRepository.openaiCreds.findFirst({where:{id:t.openaiCredsId}});if(!e)throw new Error("Openai Creds not found");try{this.client=new gt.default({apiKey:e.apiKey});let s=(await this.client.beta.threads.create({})).id,r=null;return s&&(r=await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName,sessionId:s,status:"opened",awaitUser:!1,botId:t.botId,instanceId:i.instanceId,type:"openai"}})),{session:r}}catch(s){this.logger.error(s);return}}async initAssistantNewSession(i,t,e,s,r,n,o,a){let c=await this.createAssistantNewSession(i,{remoteJid:t,pushName:e,openaiCredsId:r.openaiCredsId,botId:r.id});c.session&&(o=c.session);let u=await this.sendMessageToAssistant(i,r,t,e,s,a,o.sessionId);await this.sendMessageWhatsapp(i,o,t,n,u)}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async getAIResponse(i,t,e,s,r){let n=await this.client.beta.threads.runs.retrieve(i,t),o;switch(n.status){case"requires_action":if(o=n?.required_action?.submit_tool_outputs?.tool_calls,o)for(let a of o){let c=a.id,u=a?.function?.name,d=this.isJSON(a?.function?.arguments)?JSON.parse(a?.function?.arguments):a?.function?.arguments,l=null;try{let{data:g}=await es.default.post(e,{name:u,arguments:{...d,remoteJid:s,pushName:r}});l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}catch(g){l=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}await this.client.beta.threads.runs.submitToolOutputs(i,t,{tool_outputs:[{tool_call_id:c,output:l}]})}return this.getAIResponse(i,t,e,s,r);case"queued":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,t,e,s,r);case"in_progress":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,t,e,s,r);case"completed":return await this.client.beta.threads.messages.list(i,{run_id:t,limit:1})}}isImageMessage(i){return i.includes("imageMessage")}async processOpenaiAssistant(i,t,e,s,r,n,o,a){if(n&&n.status==="closed")return;if(n&&o.expire&&o.expire>0){let l=Date.now(),g=new Date(n.updatedAt).getTime(),y=l-g;if(Math.floor(y/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}}),await this.initAssistantNewSession(i,t,e,s,r,o,n,a);return}}if(!n){await this.initAssistantNewSession(i,t,e,s,r,o,n,a);return}if(n.status!=="paused"&&await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"opened",awaitUser:!1}}),!a){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:t.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),$("/message/sendText"));return}if(o.keywordFinish&&a.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}});return}let c=await this.prismaRepository.openaiCreds.findFirst({where:{id:r.openaiCredsId}});if(!c)throw new Error("Openai Creds not found");this.client=new gt.default({apiKey:c.apiKey});let u=n.sessionId,d=await this.sendMessageToAssistant(i,r,t,e,s,a,u);await this.sendMessageWhatsapp(i,n,t,o,d)}async createChatCompletionNewSession(i,t){if(t.remoteJid==="status@broadcast")return;let e=Math.floor(Math.random()*1e10).toString(),s=await this.prismaRepository.openaiCreds.findFirst({where:{id:t.openaiCredsId}});if(!s)throw new Error("Openai Creds not found");try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName,sessionId:e,status:"opened",awaitUser:!1,botId:t.botId,instanceId:i.instanceId,type:"openai"}}),creds:s}}catch(r){this.logger.error(r);return}}async initChatCompletionNewSession(i,t,e,s,r,n,o){let a=await this.createChatCompletionNewSession(i,{remoteJid:t,pushName:e,openaiCredsId:s.openaiCredsId,botId:s.id});n=a.session;let c=a.creds;this.client=new gt.default({apiKey:c.apiKey});let u=await this.sendMessageToBot(i,s,t,o);await this.sendMessageWhatsapp(i,n,t,r,u)}async processOpenaiChatCompletion(i,t,e,s,r,n,o){if(r&&r.status!=="opened")return;if(r&&n.expire&&n.expire>0){let u=Date.now(),d=new Date(r.updatedAt).getTime(),l=u-d;if(Math.floor(l/1e3/60)>n.expire){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:t}}),await this.initChatCompletionNewSession(i,t,e,s,n,r,o);return}}if(!r){await this.initChatCompletionNewSession(i,t,e,s,n,r,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"opened",awaitUser:!1}}),!o){n.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:t.split("@")[0],delay:n.delayMessage||1e3,text:n.unknownMessage},!1),$("/message/sendText"));return}if(n.keywordFinish&&o.toLowerCase()===n.keywordFinish.toLowerCase()){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:r.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:t}});return}let a=await this.prismaRepository.openaiCreds.findFirst({where:{id:s.openaiCredsId}});if(!a)throw new Error("Openai Creds not found");this.client=new gt.default({apiKey:a.apiKey});let c=await this.sendMessageToBot(i,s,t,o);await this.sendMessageWhatsapp(i,r,t,n,c)}async speechToText(i,t,e){let s;t?.message?.mediaUrl?s=await es.default.get(t.message.mediaUrl,{responseType:"arraybuffer"}).then(a=>Buffer.from(a.data,"binary")):s=await(0,Jr.downloadMediaMessage)({key:t.key,message:t?.message},"buffer",{},{logger:(0,$r.default)({level:"error"}),reuploadRequest:e});let r=this.configService.get("LANGUAGE").includes("pt")?"pt":this.configService.get("LANGUAGE"),n=new Wr.default;return n.append("file",s,"audio.ogg"),n.append("model","whisper-1"),n.append("language",r),(await es.default.post("https://api.openai.com/v1/audio/transcriptions",n,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${i.apiKey}`}}))?.data?.text}};var zc=p=>{let i;C.get("S3").ENABLE?i=p.message.mediaUrl:i=p.key.id;let t={conversation:p?.message?.conversation,extendedTextMessage:p?.message?.extendedTextMessage?.text,contactMessage:p?.message?.contactMessage?.displayName,locationMessage:p?.message?.locationMessage?.degreesLatitude,viewOnceMessageV2:p?.message?.viewOnceMessageV2?.message?.imageMessage?.url||p?.message?.viewOnceMessageV2?.message?.videoMessage?.url||p?.message?.viewOnceMessageV2?.message?.audioMessage?.url,listResponseMessage:p?.message?.listResponseMessage?.title,responseRowId:p?.message?.listResponseMessage?.singleSelectReply?.selectedRowId,templateButtonReplyMessage:p?.message?.templateButtonReplyMessage?.selectedId,audioMessage:p?.message?.speechToText?p?.message?.speechToText:p?.message?.audioMessage?`audioMessage|${i}`:void 0,imageMessage:p?.message?.imageMessage?`imageMessage|${i}${p?.message?.imageMessage?.caption?`|${p?.message?.imageMessage?.caption}`:""}`:void 0,videoMessage:p?.message?.videoMessage?`videoMessage|${i}${p?.message?.videoMessage?.caption?`|${p?.message?.videoMessage?.caption}`:""}`:void 0,documentMessage:p?.message?.documentMessage?`documentMessage|${i}${p?.message?.documentMessage?.caption?`|${p?.message?.documentMessage?.caption}`:""}`:void 0,documentWithCaptionMessage:p?.message?.documentWithCaptionMessage?.message?.documentMessage?`documentWithCaptionMessage|${i}${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption?`|${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption}`:""}`:void 0,externalAdReplyBody:p?.contextInfo?.externalAdReply?.body?`externalAdReplyBody|${p.contextInfo.externalAdReply.body}`:void 0},e=Object.keys(t).find(s=>t[s]!==void 0)||"unknown";return{...t,messageType:e}},Xc=p=>{let i=Object.keys(p).find(e=>e!=="externalAdReplyBody"&&p[e]!==void 0),t=i?p[i]:void 0;return p.externalAdReplyBody&&(t=t?`${t}
${p.externalAdReplyBody}`:p.externalAdReplyBody),t},he=p=>{let i=zc(p);return Xc(i)};var mt=A(require("axios")),Ze=class{constructor(i,t,e){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.logger=new T("TypebotService")}async createNewSession(i,t){if(t.remoteJid==="status@broadcast")return;let e=Math.floor(Math.random()*1e10).toString();try{let s=this.configService.get("TYPEBOT").API_VERSION,r,n;s==="latest"?(r=`${t.url}/api/v1/typebots/${t.typebot}/startChat`,n={prefilledVariables:{...t.prefilledVariables,remoteJid:t.remoteJid,pushName:t.pushName||t.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}):(r=`${t.url}/api/v1/sendMessage`,n={startParams:{publicId:t.typebot,prefilledVariables:{...t.prefilledVariables,remoteJid:t.remoteJid,pushName:t.pushName||t.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}});let o=await mt.default.post(r,n),a=null;return o?.data?.sessionId&&(a=await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName||"",sessionId:`${e}-${o.data.sessionId}`,status:"opened",parameters:{...t.prefilledVariables,remoteJid:t.remoteJid,pushName:t.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number},awaitUser:!1,botId:t.botId,instanceId:i.id,type:"typebot"}})),{...o.data,session:a}}catch(s){this.logger.error(s);return}}async sendWAMessage(i,t,e,s,r,n,o){u(this.waMonitor.waInstances[i.name],t,e,r,n,o,c,this.prismaRepository).catch(d=>{console.error("Erro ao processar mensagens:",d)});function a(d,l){if(!d)return null;for(let g of d)if(g.lastBubbleBlockId===l)return g.wait?.secondsToWaitFor;return null}function c(d){let l="";if(d.text&&(l+=d.text),d.children&&d.type!=="a")for(let m of d.children)l+=c(m);d.type==="p"&&d.type!=="inline-variable"&&(l=l.trim()+`
`),d.type==="inline-variable"&&(l=l.trim()),d.type==="ol"&&(l=`
`+l.split(`
`).map((m,f)=>m?`${f+1}. ${m}`:"").join(`
`)),d.type==="li"&&(l=l.split(`
`).map(m=>m?`  ${m}`:"").join(`
`));let g="";d.bold&&(g+="*"),d.italic&&(g+="_"),d.underline&&(g+="~");let y=`${g}${l}${g.split("").reverse().join("")}`;return d.url&&(y=d.children[0]?.text?`[${y}]
(${d.url})`:`${d.url}`),y}async function u(d,l,g,y,m,f,b,S){for(let w of y){if(w.type==="text"){let E="";for(let M of w.content.richText){for(let O of M.children)E+=b(O);E+=`
`}if(E=E.replace(/\*\*/g,"").replace(/__/,"").replace(/~~/,"").replace(/\n$/,""),E=E.replace(/\n$/,""),E.includes("[list]")){let M={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},O=E.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=E.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),_=E.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),L=E.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);O&&(M.title=O[1].trim()),N&&(M.description=N[1].trim()),_&&(M.buttonText=_[1].trim()),L&&(M.footerText=L[1].trim());let q=E.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(q){let H=q.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);H&&H.forEach(V=>{let G=V.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),J=V.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),Y={title:G,rows:J?.map(wn=>({title:wn.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:wn.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:wn.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};M.sections.push(Y)})}await d.listMessage(M)}else if(E.includes("[buttons]")){let M={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},O=E.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),N=E.match(/\[title\]([\s\S]*?)(?=\[description\])/),_=E.match(/\[description\]([\s\S]*?)(?=\[footer\])/),L=E.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);N&&(M.title=N[1].trim()),O&&(M.thumbnailUrl=O[1].trim()),_&&(M.description=_[1].trim()),L&&(M.footer=L[1].trim());let q={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[H,V]of Object.entries(q)){let G;for(;(G=V.exec(E))!==null;){let J=G[1].trim(),Y={type:H};switch(H){case"pix":Y.currency=J.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.name=J.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.keyType=J.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.key=J.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":Y.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.id=J.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":Y.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.copyCode=J.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":Y.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.phoneNumber=J.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":Y.displayText=J.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),Y.url=J.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(Y).length>1&&M.buttons.push(Y)}}await d.buttonMessage(M)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:E},!1);$("/message/sendText")}w.type==="image"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"image",media:w.content.url},null,!1),$("/message/sendMedia")),w.type==="video"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"video",media:w.content.url},null,!1),$("/message/sendMedia")),w.type==="audio"&&(await d.audioWhatsapp({number:s.split("@")[0],delay:g?.delayMessage||1e3,encoding:!0,audio:w.content.url},!1),$("/message/sendWhatsAppAudio"));let I=a(f,w.id);I&&await new Promise(E=>setTimeout(E,I*1e3))}if(console.log("input",m),m){if(m.type==="choice input"){let w="",I=m.items;for(let E of I)w+=`\u25B6\uFE0F ${E.content}
`;if(w=w.replace(/\n$/,""),w.includes("[list]")){let E={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},M=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),O=w.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),N=w.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),_=w.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);M&&(E.title=M[1].trim()),O&&(E.description=O[1].trim()),N&&(E.buttonText=N[1].trim()),_&&(E.footerText=_[1].trim());let L=w.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(L){let q=L.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);q&&q.forEach(H=>{let V=H.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),G=H.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),J={title:V,rows:G?.map(Y=>({title:Y.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:Y.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:Y.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};E.sections.push(J)})}await d.listMessage(E)}else if(w.includes("[buttons]")){let E={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},M=w.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),O=w.match(/\[title\]([\s\S]*?)(?=\[description\])/),N=w.match(/\[description\]([\s\S]*?)(?=\[footer\])/),_=w.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);O&&(E.title=O[1].trim()),M&&(E.thumbnailUrl=M[1].trim()),N&&(E.description=N[1].trim()),_&&(E.footer=_[1].trim());let L={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[q,H]of Object.entries(L)){let V;for(;(V=H.exec(w))!==null;){let G=V[1].trim(),J={type:q};switch(q){case"pix":J.currency=G.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),J.name=G.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),J.keyType=G.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),J.key=G.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.id=G.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.copyCode=G.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.phoneNumber=G.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":J.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),J.url=G.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(J).length>1&&E.buttons.push(J)}}await d.buttonMessage(E)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:w},!1);$("/message/sendText")}await S.integrationSession.update({where:{id:l.id},data:{awaitUser:!0}})}else g?.keepOpen?await S.integrationSession.update({where:{id:l.id},data:{status:"closed"}}):await S.integrationSession.deleteMany({where:{id:l.id}})}}async processTypebot(i,t,e,s,r,n,o,a,c,u,d,l,g,y,m,f){if(s&&o&&o>0){let E=Date.now(),M=new Date(s.updatedAt).getTime(),O=E-M;if(Math.floor(O/1e3/60)>o){y?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}});let _=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:t,pushName:e.pushName,botId:r.id,prefilledVariables:f});if(_.session&&(s=_.session),_.messages.length===0){let L=he(e.message);if(!L){d&&(this.waMonitor.waInstances[i.name].textMessage({number:t.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&L.toLowerCase()===c.toLowerCase()){y?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}});return}try{let q=this.configService.get("TYPEBOT").API_VERSION,H,V;q==="latest"?(H=`${n}/api/v1/sessions/${_.sessionId}/continueChat`,V={message:L}):(H=`${n}/api/v1/sendMessage`,V={message:L,sessionId:_.sessionId});let G=await mt.default.post(H,V);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:y},t,G.data.messages,G.data.input,G.data.clientSideActions)}catch(q){this.logger.error(q);return}}await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:y},t,_.messages,_.input,_.clientSideActions);return}}if(s&&s.status!=="opened")return;if(!s){let E=await this.createNewSession(i,{enabled:r?.enabled,url:n,typebot:a,expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,remoteJid:t,pushName:e?.pushName,botId:r.id,prefilledVariables:f});if(E?.session&&(s=E.session),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:y},t,E?.messages,E?.input,E?.clientSideActions),E.messages.length===0){if(!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:t.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){y?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}});return}let M;try{let O=this.configService.get("TYPEBOT").API_VERSION,N,_;O==="latest"?(N=`${n}/api/v1/sessions/${E.sessionId}/continueChat`,_={message:m}):(N=`${n}/api/v1/sendMessage`,_={message:m,sessionId:E.sessionId}),M=await mt.default.post(N,_),await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:y},t,M.data.messages,M.data.input,M.data.clientSideActions)}catch(O){this.logger.error(O);return}}return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!m){d&&(this.waMonitor.waInstances[i.name].textMessage({number:t.split("@")[0],delay:u||1e3,text:d},!1),$("/message/sendText"));return}if(c&&m.toLowerCase()===c.toLowerCase()){y?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:r.id,remoteJid:t}});return}let b=this.configService.get("TYPEBOT").API_VERSION,S,w;b==="latest"?(S=`${n}/api/v1/sessions/${s.sessionId.split("-")[1]}/continueChat`,w={message:m}):(S=`${n}/api/v1/sendMessage`,w={message:m,sessionId:s.sessionId.split("-")[1]});let I=await mt.default.post(S,w);await this.sendWAMessage(i,s,{expire:o,keywordFinish:c,delayMessage:u,unknownMessage:d,listeningFromMe:l,stopBotFromMe:g,keepOpen:y},t,I?.data?.messages,I?.data?.input,I?.data?.clientSideActions)}};var qr=require("class-validator"),Bn=require("uuid"),ke=class p{constructor(i,t,e,s){this.configService=i;this.eventEmitter=t;this.prismaRepository=e;this.chatwootCache=s;this.logger=new T("ChannelStartupService");this.instance={};this.localChatwoot={};this.localProxy={};this.localSettings={};this.localWebhook={};this.chatwootService=new Ae(k,this.configService,this.prismaRepository,this.chatwootCache);this.typebotService=new Ze(k,this.configService,this.prismaRepository);this.openaiService=new Xe(k,this.configService,this.prismaRepository);this.difyService=new ze(k,this.configService,this.prismaRepository)}setInstance(i){this.logger.setInstance(i.instanceName),this.instance.name=i.instanceName,this.instance.id=i.instanceId,this.instance.integration=i.integration,this.instance.number=i.number,this.instance.token=i.token,this.instance.businessId=i.businessId,this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name},{instance:this.instance.name,status:"created"})}set instanceName(i){if(this.logger.setInstance(i),!i){this.instance.name=(0,Bn.v4)();return}this.instance.name=i}get instanceName(){return this.instance.name}set instanceId(i){if(!i){this.instance.id=(0,Bn.v4)();return}this.instance.id=i}get instanceId(){return this.instance.id}set integration(i){this.instance.integration=i}get integration(){return this.instance.integration}set number(i){this.instance.number=i}get number(){return this.instance.number}set token(i){this.instance.token=i}get token(){return this.instance.token}get wuid(){return this.instance.wuid}async loadWebhook(){let i=await this.prismaRepository.webhook.findUnique({where:{instanceId:this.instanceId}});this.localWebhook.enabled=i?.enabled,this.localWebhook.webhookBase64=i?.webhookBase64}async loadSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async setSettings(i){await this.prismaRepository.setting.upsert({where:{instanceId:this.instanceId},update:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory},create:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,instanceId:this.instanceId}}),this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory}async findSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});return i?{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory}:null}async loadChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});this.localChatwoot.enabled=i?.enabled,this.localChatwoot.accountId=i?.accountId,this.localChatwoot.token=i?.token,this.localChatwoot.url=i?.url,this.localChatwoot.nameInbox=i?.nameInbox,this.localChatwoot.signMsg=i?.signMsg,this.localChatwoot.signDelimiter=i?.signDelimiter,this.localChatwoot.number=i?.number,this.localChatwoot.reopenConversation=i?.reopenConversation,this.localChatwoot.conversationPending=i?.conversationPending,this.localChatwoot.mergeBrazilContacts=i?.mergeBrazilContacts,this.localChatwoot.importContacts=i?.importContacts,this.localChatwoot.importMessages=i?.importMessages,this.localChatwoot.daysLimitImportMessages=i?.daysLimitImportMessages}async setChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)return;if(await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}})){await this.prismaRepository.chatwoot.update({where:{instanceId:this.instanceId},data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signMsg?i.signDelimiter:null,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot();return}await this.prismaRepository.chatwoot.create({data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids,instanceId:this.instanceId}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot()}async findChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return null;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});if(!i)return null;let t=Array.isArray(i.ignoreJids)?i.ignoreJids.map(e=>String(e)):[];return{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signDelimiter||null,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:t}}clearCacheChatwoot(){this.localChatwoot?.enabled&&this.chatwootService.getCache()?.deleteAll(this.instanceName)}async loadProxy(){this.localProxy.enabled=!1,process.env.PROXY_HOST&&(this.localProxy.enabled=!0,this.localProxy.host=process.env.PROXY_HOST,this.localProxy.port=process.env.PROXY_PORT||"80",this.localProxy.protocol=process.env.PROXY_PROTOCOL||"http",this.localProxy.username=process.env.PROXY_USERNAME,this.localProxy.password=process.env.PROXY_PASSWORD);let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});i?.enabled&&(this.localProxy.enabled=!0,this.localProxy.host=i?.host,this.localProxy.port=i?.port,this.localProxy.protocol=i?.protocol,this.localProxy.username=i?.username,this.localProxy.password=i?.password)}async setProxy(i){await this.prismaRepository.proxy.upsert({where:{instanceId:this.instanceId},update:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password},create:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password,instanceId:this.instanceId}}),Object.assign(this.localProxy,i)}async findProxy(){let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});if(!i)throw new W("Proxy not found");return i}async sendDataWebhook(i,t,e=!0){let s=this.configService.get("SERVER").URL,r=new Date().getTimezoneOffset()*6e4,o=new Date(Date.now()-r).toISOString(),a=this.configService.get("AUTHENTICATION").EXPOSE_IN_FETCH_INSTANCES,c=this.token||"Apikey not found";await z.emit({instanceName:this.instance.name,origin:p.name,event:i,data:t,serverUrl:s,dateTime:o,sender:this.wuid,apiKey:a&&c?c:null,local:e})}formatMXOrARNumber(i){let t=i.substring(0,2);return(Number(t)===52||Number(t)===54)&&i.length===13?t+i.substring(3):i}formatBRNumber(i){let t=new RegExp(/^(\d{2})(\d{2})\d{1}(\d{8})$/);if(t.test(i)){let e=t.exec(i);if(e&&e[1]==="55"){let s=Number.parseInt(e[3][0]),r=Number.parseInt(e[2]);return s<7||r<31?e[0]:e[1]+e[2]+e[3]}return i}else return i}createJid(i){return i.includes("@g.us")||i.includes("@s.whatsapp.net")||i.includes("@lid")||i.includes("@broadcast")?i:(i=i?.replace(/\s/g,"").replace(/\+/g,"").replace(/\(/g,"").replace(/\)/g,"").split(":")[0].split("@")[0],i.includes("-")&&i.length>=24?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=i.replace(/\D/g,""),i.length>=18?(i=i.replace(/[^\d-]/g,""),`${i}@g.us`):(i=this.formatMXOrARNumber(i),i=this.formatBRNumber(i),`${i}@s.whatsapp.net`)))}async fetchContacts(i){let t=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,e={instanceId:this.instanceId};return t&&(e.remoteJid=t),await this.prismaRepository.contact.findMany({where:e})}async fetchMessages(i){let t=i?.where?.key,e=await this.prismaRepository.message.count({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[t?.id?{key:{path:["id"],equals:t?.id}}:{},t?.fromMe?{key:{path:["fromMe"],equals:t?.fromMe}}:{},t?.remoteJid?{key:{path:["remoteJid"],equals:t?.remoteJid}}:{},t?.participants?{key:{path:["participants"],equals:t?.participants}}:{}]}});i?.offset||(i.offset=50),i?.page||(i.page=1);let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,AND:[t?.id?{key:{path:["id"],equals:t?.id}}:{},t?.fromMe?{key:{path:["fromMe"],equals:t?.fromMe}}:{},t?.remoteJid?{key:{path:["remoteJid"],equals:t?.remoteJid}}:{},t?.participants?{key:{path:["participants"],equals:t?.participants}}:{}]},orderBy:{messageTimestamp:"desc"},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset,select:{id:!0,key:!0,pushName:!0,messageType:!0,message:!0,messageTimestamp:!0,instanceId:!0,source:!0,contextInfo:!0,MessageUpdate:{select:{status:!0}}}});return{messages:{total:e,pages:Math.ceil(e/i.offset),currentPage:i.page,records:s}}}async fetchStatusMessage(i){return await this.prismaRepository.messageUpdate.findMany({where:{instanceId:this.instanceId,remoteJid:i.where?.remoteJid,keyId:i.where?.id},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset})}async fetchChats(i){let t=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:this.createJid(i.where?.remoteJid):null,e=[];return t?e=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId} AND "Chat"."remoteJid" = ${t} and "Message"."messageType" != 'reactionMessage'
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `:e=await this.prismaRepository.$queryRaw`
          SELECT
            "Chat"."id",
            "Chat"."remoteJid",
            "Chat"."name",
            "Chat"."labels",
            "Chat"."createdAt",
            "Chat"."updatedAt",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            "Chat"."unreadMessages",
            (ARRAY_AGG("Message"."id" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_id,
            (ARRAY_AGG("Message"."key" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_key,
            (ARRAY_AGG("Message"."pushName" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_push_name,
            (ARRAY_AGG("Message"."participant" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_participant,
            (ARRAY_AGG("Message"."messageType" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_type,
            (ARRAY_AGG("Message"."message" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message,
            (ARRAY_AGG("Message"."contextInfo" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_context_info,
            (ARRAY_AGG("Message"."source" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_source,
            (ARRAY_AGG("Message"."messageTimestamp" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_message_timestamp,
            (ARRAY_AGG("Message"."instanceId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_instance_id,
            (ARRAY_AGG("Message"."sessionId" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_session_id,
            (ARRAY_AGG("Message"."status" ORDER BY "Message"."messageTimestamp" DESC))[1] AS last_message_status
          FROM "Chat"
          LEFT JOIN "Message" ON "Message"."messageType" != 'reactionMessage' and "Message"."key"->>'remoteJid' = "Chat"."remoteJid"
          LEFT JOIN "Contact" ON "Chat"."remoteJid" = "Contact"."remoteJid"
          WHERE 
            "Chat"."instanceId" = ${this.instanceId}
          GROUP BY
            "Chat"."id",
            "Chat"."remoteJid",
            "Contact"."id"
          ORDER BY last_message_message_timestamp DESC NULLS LAST, "Chat"."updatedAt" DESC;
          `,e&&(0,qr.isArray)(e)&&e.length>0?e.map(s=>({id:s.id,remoteJid:s.remoteJid,name:s.name,labels:s.labels,createdAt:s.createdAt,updatedAt:s.updatedAt,pushName:s.pushName,profilePicUrl:s.profilePicUrl,unreadMessages:s.unreadMessages,lastMessage:s.last_message_id?{id:s.last_message_id,key:s.last_message_key,pushName:s.last_message_push_name,participant:s.last_message_participant,messageType:s.last_message_message_type,message:s.last_message_message,contextInfo:s.last_message_context_info,source:s.last_message_source,messageTimestamp:s.last_message_message_timestamp,instanceId:s.last_message_instance_id,sessionId:s.last_message_session_id,status:s.last_message_status}:void 0})):[]}};var X={0:"ERROR",1:"PENDING",2:"SERVER_ACK",3:"DELIVERY_ACK",4:"READ",5:"PLAYED"};var Ln=require("class-validator"),ht=A(require("mime")),Fn=require("uuid"),ts=class extends ke{constructor(t,e,s,r,n,o,a){super(t,e,s,n);this.configService=t;this.eventEmitter=e;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"};this.client=null}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async profilePicture(t){return{wuid:this.createJid(t),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async connectToWhatsapp(t){if(t)try{this.loadChatwoot(),this.eventHandler(t)}catch(e){throw this.logger.error(e),new F(e?.toString())}}async eventHandler(t){try{let e;if(t.message){if(e={key:{id:t.key.id||(0,Fn.v4)(),remoteJid:t.key.remoteJid,fromMe:t.key.fromMe},pushName:t.pushName,message:t.message,messageType:t.messageType,messageTimestamp:Math.round(new Date().getTime()/1e3),source:"unknown",instanceId:this.instanceId},this.configService.get("OPENAI").ENABLED){let r=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});r&&r.openaiCredsId&&r.speechToText&&t?.message?.audioMessage&&(e.message.speechToText=await this.openaiService.speechToText(r.OpenaiCreds,t,this.client.updateMediaMessage))}if(this.logger.log(e),this.sendDataWebhook("messages.upsert",e),await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:e.key.remoteJid,msg:e,pushName:e.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let r=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},e);r?.id&&(e.chatwootMessageId=r.id,e.chatwootInboxId=r.id,e.chatwootConversationId=r.id)}await this.prismaRepository.message.create({data:e}),await this.updateContact({remoteJid:e.key.remoteJid,pushName:e.key.fromMe||e.key.fromMe==null?"":t.pushName,profilePicUrl:t.profilePicUrl})}}catch(e){this.logger.error(e)}}async updateContact(t){let e=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:t.remoteJid}});if(e){let o={remoteJid:t.remoteJid,pushName:t?.pushName,instanceId:this.instanceId,profilePicUrl:t?.profilePicUrl};this.sendDataWebhook("contacts.update",o),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},o),await this.prismaRepository.contact.updateMany({where:{remoteJid:e.remoteJid,instanceId:this.instanceId},data:o});return}let s={remoteJid:t.remoteJid,pushName:t?.pushName,instanceId:this.instanceId,profilePicUrl:t?.profilePicUrl};this.sendDataWebhook("contacts.upsert",s),await this.prismaRepository.contact.create({data:s});let r=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:t.remoteJid}});if(r){let o={remoteJid:t.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.update",o),await this.prismaRepository.chat.updateMany({where:{remoteJid:r.remoteJid},data:o})}let n={remoteJid:t.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.upsert",n),await this.prismaRepository.chat.create({data:n})}async sendMessageWithTyping(t,e,s,r=!1){try{let n,o;if(s?.quoted){let d=s?.quoted?.key;if(!d)throw"Message not found";n=d}s.delay&&await new Promise(u=>setTimeout(u,s.delay)),s?.webhookUrl&&(o=s.webhookUrl);let c={key:{fromMe:!0,id:(0,Fn.v4)(),remoteJid:t},messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:o,source:"unknown",instanceId:this.instanceId,status:X[1]};return e?.mediaType==="image"?c={...c,message:{mediaUrl:e.media,quoted:n},messageType:"imageMessage"}:e?.mediaType==="video"?c={...c,message:{mediaUrl:e.media,quoted:n},messageType:"videoMessage"}:e?.mediaType==="audio"?c={...c,message:{mediaUrl:e.media,quoted:n},messageType:"audioMessage"}:e?.mediaType==="document"?c={...c,message:{mediaUrl:e.media,quoted:n},messageType:"documentMessage"}:c={...c,message:{...e,quoted:n},messageType:"conversation"},this.logger.log(c),this.sendDataWebhook("send.message",c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},c),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName}),await this.prismaRepository.message.create({data:c}),c}catch(n){throw this.logger.error(n),new h(n.toString())}}async textMessage(t,e=!1){return await this.sendMessageWithTyping(t.number,{conversation:t.text},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},e)}async prepareMediaMessage(t){try{if(t.mediatype==="document"&&!t.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(t.media);t.fileName=n[1]}t.mediatype==="image"&&!t.fileName&&(t.fileName="image.png"),t.mediatype==="video"&&!t.fileName&&(t.fileName="video.mp4");let e,s={caption:t?.caption,fileName:t.fileName,mediaType:t.mediatype,media:t.media,gifPlayback:!1};return(0,Ln.isURL)(t.media)?e=ht.default.getType(t.media):e=ht.default.getType(t.fileName),s.mimetype=e,s}catch(e){throw this.logger.error(e),new F(e?.toString()||e)}}async mediaMessage(t,e,s=!1){let r={...t};e&&(r.media=e.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(t.number,{...n},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async processAudio(t,e){e=e.replace(/\D/g,"");let s=`${e}-${new Date().getTime()}`,r,n={fileName:`${s}.mp4`,mediaType:"audio",media:t};return(0,Ln.isURL)(t)?r=ht.default.getType(t):r=ht.default.getType(n.fileName),n.mimetype=r,n}async audioWhatsapp(t,e,s=!1){let r={...t};if(e?.buffer)r.audio=e.buffer.toString("base64");else throw console.error("El archivo o buffer no est\uFFFD definido correctamente."),new Error("File or buffer is undefined.");let n=await this.processAudio(r.audio,t.number);return await this.sendMessageWithTyping(t.number,{...n},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async buttonMessage(){throw new h("Method not available on Evolution Channel")}async locationMessage(){throw new h("Method not available on Evolution Channel")}async listMessage(){throw new h("Method not available on Evolution Channel")}async templateMessage(){throw new h("Method not available on Evolution Channel")}async contactMessage(){throw new h("Method not available on Evolution Channel")}async reactionMessage(){throw new h("Method not available on Evolution Channel")}async getBase64FromMediaMessage(){throw new h("Method not available on Evolution Channel")}async deleteMessage(){throw new h("Method not available on Evolution Channel")}async mediaSticker(){throw new h("Method not available on Evolution Channel")}async pollMessage(){throw new h("Method not available on Evolution Channel")}async statusMessage(){throw new h("Method not available on Evolution Channel")}async reloadConnection(){throw new h("Method not available on Evolution Channel")}async whatsappNumber(){throw new h("Method not available on Evolution Channel")}async markMessageAsRead(){throw new h("Method not available on Evolution Channel")}async archiveChat(){throw new h("Method not available on Evolution Channel")}async markChatUnread(){throw new h("Method not available on Evolution Channel")}async fetchProfile(){throw new h("Method not available on Evolution Channel")}async offerCall(){throw new h("Method not available on WhatsApp Business API")}async sendPresence(){throw new h("Method not available on Evolution Channel")}async setPresence(){throw new h("Method not available on Evolution Channel")}async fetchPrivacySettings(){throw new h("Method not available on Evolution Channel")}async updatePrivacySettings(){throw new h("Method not available on Evolution Channel")}async fetchBusinessProfile(){throw new h("Method not available on Evolution Channel")}async updateProfileName(){throw new h("Method not available on Evolution Channel")}async updateProfileStatus(){throw new h("Method not available on Evolution Channel")}async updateProfilePicture(){throw new h("Method not available on Evolution Channel")}async removeProfilePicture(){throw new h("Method not available on Evolution Channel")}async blockUser(){throw new h("Method not available on Evolution Channel")}async updateMessage(){throw new h("Method not available on Evolution Channel")}async createGroup(){throw new h("Method not available on Evolution Channel")}async updateGroupPicture(){throw new h("Method not available on Evolution Channel")}async updateGroupSubject(){throw new h("Method not available on Evolution Channel")}async updateGroupDescription(){throw new h("Method not available on Evolution Channel")}async findGroup(){throw new h("Method not available on Evolution Channel")}async fetchAllGroups(){throw new h("Method not available on Evolution Channel")}async inviteCode(){throw new h("Method not available on Evolution Channel")}async inviteInfo(){throw new h("Method not available on Evolution Channel")}async sendInvite(){throw new h("Method not available on Evolution Channel")}async acceptInviteCode(){throw new h("Method not available on Evolution Channel")}async revokeInviteCode(){throw new h("Method not available on Evolution Channel")}async findParticipants(){throw new h("Method not available on Evolution Channel")}async updateGParticipant(){throw new h("Method not available on Evolution Channel")}async updateGSetting(){throw new h("Method not available on Evolution Channel")}async toggleEphemeral(){throw new h("Method not available on Evolution Channel")}async leaveGroup(){throw new h("Method not available on Evolution Channel")}async fetchLabels(){throw new h("Method not available on Evolution Channel")}async handleLabel(){throw new h("Method not available on Evolution Channel")}async receiveMobileCode(){throw new h("Method not available on Evolution Channel")}async fakeCall(){throw new h("Method not available on Evolution Channel")}};var Gr=A(require("minio")),Un=require("path"),ss=new T("S3 Service"),$e=new Ue().get("S3"),Me=(()=>{if($e?.ENABLE)return new Gr.Client({endPoint:$e.ENDPOINT,port:$e.PORT,useSSL:$e.USE_SSL,accessKey:$e.ACCESS_KEY,secretKey:$e.SECRET_KEY,region:$e.REGION})})(),Be=process.env.S3_BUCKET,Zc=async()=>{if(Me)try{return(await Me.listBuckets()).find(i=>i.name===Be)}catch{return!1}},ep=async()=>{if(Me){let p={Version:"2012-10-17",Statement:[{Effect:"Allow",Principal:"*",Action:["s3:GetObject"],Resource:[`arn:aws:s3:::${Be}/*`]}]};await Me.setBucketPolicy(Be,JSON.stringify(p))}},tp=async()=>{if(Me)try{return await Zc()||await Me.makeBucket(Be),await ep(),ss.info(`S3 Bucket ${Be} - ON`),!0}catch(p){return ss.error("S3 ERROR:"),ss.error(p),!1}};tp();var yt=async(p,i,t,e)=>{if(Me){let s=(0,Un.join)("evolution-api",p);try{return e["custom-header-application"]="evolution-api",await Me.putObject(Be,s,i,t,e)}catch(r){return ss.error(r),r}}},qe=async(p,i)=>{if(Me)try{let t=(0,Un.join)("evolution-api",p);return i?await Me.presignedGetObject(Be,t,i):await Me.presignedGetObject(Be,t)}catch(t){throw new h(t?.message)}};var Le=A(require("axios")),Ge=require("class-validator"),Vr=A(require("form-data")),jr=require("fs"),ft=A(require("mime")),Kr=require("path"),is=class extends ke{constructor(t,e,s,r,n,o,a){super(t,e,s,n);this.configService=t;this.eventEmitter=e;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.stateConnection={state:"open"}}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}async post(t,e){try{let s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${this.number}/${e}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};return(await Le.default.post(s,t,{headers:n})).data}catch(s){return s.response?.data?.error}}async profilePicture(t){return{wuid:this.createJid(t),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async setWhatsappBusinessProfile(t){let e={messaging_product:"whatsapp",about:t.about,address:t.address,description:t.description,vertical:t.vertical,email:t.email,websites:t.websites,profile_picture_handle:t.profilehandle};return await this.post(e,"whatsapp_business_profile")}async connectToWhatsapp(t){if(!t)return;let e=t.entry[0].changes[0].value;try{this.loadChatwoot(),this.eventHandler(e),this.phoneNumber=this.createJid(e.messages?e.messages[0].from:e.statuses[0]?.recipient_id)}catch(s){throw this.logger.error(s),new F(s?.toString())}}async downloadMediaMessage(t){try{let e=t[t.type].id,s=this.configService.get("WA_BUSINESS").URL,r=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${r}/${e}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},o=await Le.default.get(s,{headers:n});return o=await Le.default.get(o.data.url,{headers:n,responseType:"arraybuffer"}),o.data}catch(e){this.logger.error(e)}}messageMediaJson(t){let e=t.messages[0],s=e.type+"Message";return s={[s]:e[e.type]},e.context&&(s={...s,contextInfo:{stanzaId:e.context.id}}),s}messageInteractiveJson(t){let e=t.messages[0],s={conversation:e.interactive[e.interactive.type].title};return e.context&&(s={...s,contextInfo:{stanzaId:e.context.id}}),s}messageButtonJson(t){let e=t.messages[0],s={conversation:t.messages[0].button?.text};return e.context&&(s={...s,contextInfo:{stanzaId:e.context.id}}),s}messageReactionJson(t){let e=t.messages[0],s={reactionMessage:{key:{id:e.reaction.message_id},text:e.reaction.emoji}};return e.context&&(s={...s,contextInfo:{stanzaId:e.context.id}}),s}messageTextJson(t){let e,s=t.messages[0];return s.from===t.metadata.phone_number_id?(e={extendedTextMessage:{text:s.text.body}},s.context&&(e={...e,contextInfo:{stanzaId:s.context.id}})):(e={conversation:s.text.body},s.context&&(e={...e,contextInfo:{stanzaId:s.context.id}})),e}messageContactsJson(t){let e=t.messages[0],s={},r=n=>{let o=`BEGIN:VCARD
VERSION:3.0
N:${n.name.formatted_name}
FN:${n.name.formatted_name}
`;return n.org&&(o+=`ORG:${n.org.company};
`),n.emails&&(o+=`EMAIL:${n.emails[0].email}
`),n.urls&&(o+=`URL:${n.urls[0].url}
`),n.phones[0]?.wa_id||(n.phones[0].wa_id=this.createJid(n.phones[0].phone)),o+=`item1.TEL;waid=${n.phones[0]?.wa_id}:${n.phones[0].phone}
item1.X-ABLabel:Celular
END:VCARD`,o};return e.contacts.length===1?s.contactMessage={displayName:e.contacts[0].name.formatted_name,vcard:r(e.contacts[0])}:s.contactsArrayMessage={displayName:`${e.length} contacts`,contacts:e.map(n=>({displayName:n.name.formatted_name,vcard:r(n)}))},e.context&&(s={...s,contextInfo:{stanzaId:e.context.id}}),s}renderMessageType(t){let e;switch(t){case"text":e="conversation";break;case"image":e="imageMessage";break;case"video":e="videoMessage";break;case"audio":e="audioMessage";break;case"document":e="documentMessage";break;case"template":e="conversation";break;default:e="conversation";break}return e}async messageHandle(t,e,s){try{let r,n;if(t.contacts&&(n=t.contacts[0].profile.name),t.messages){let o={id:t.messages[0].id,remoteJid:this.phoneNumber,fromMe:t.messages[0].from===t.metadata.phone_number_id};if(t?.messages[0].document||t?.messages[0].image||t?.messages[0].audio||t?.messages[0].video)if(r={key:o,pushName:n,message:this.messageMediaJson(t),contextInfo:this.messageMediaJson(t)?.contextInfo,messageType:this.renderMessageType(t.messages[0].type),messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId},this.configService.get("S3").ENABLE)try{let u=t,d=u.messages[0][u.messages[0].type].id,l=this.configService.get("WA_BUSINESS").URL,g=this.configService.get("WA_BUSINESS").VERSION;l=`${l}/${g}/${d}`;let y={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},m=await Le.default.get(l,{headers:y}),f=await Le.default.get(m.data.url,{headers:y,responseType:"arraybuffer"}),b=u.messages[0].document?"document":u.messages[0].image?"image":u.messages[0].audio?"audio":"video",S=m.headers["content-type"],w=m.headers["content-disposition"],I=`${u.messages[0].id}.${S.split("/")[1]}`;if(w){let N=w.match(/filename="(.+?)"/);N&&(I=N[1])}let E=m.headers["content-length"]||f.data.byteLength,M=(0,Kr.join)(`${this.instance.id}`,t.key.remoteJid,b,I);await yt(M,f.data,E,{"Content-Type":S}),await this.prismaRepository.media.create({data:{messageId:t.messages[0].id,instanceId:this.instanceId,type:b,fileName:M,mimetype:S}});let O=await qe(M);r.message.mediaUrl=O}catch(u){this.logger.error(["Error on upload file to minio",u?.message,u?.stack])}else{let u=await this.downloadMediaMessage(t?.messages[0]);r.message.base64=u.toString("base64")}else t?.messages[0].interactive?r={key:o,pushName:n,message:{...this.messageInteractiveJson(t)},contextInfo:this.messageInteractiveJson(t)?.contextInfo,messageType:"interactiveMessage",messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:t?.messages[0].button?r={key:o,pushName:n,message:{...this.messageButtonJson(t)},contextInfo:this.messageButtonJson(t)?.contextInfo,messageType:"buttonMessage",messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:t?.messages[0].reaction?r={key:o,pushName:n,message:{...this.messageReactionJson(t)},contextInfo:this.messageReactionJson(t)?.contextInfo,messageType:"reactionMessage",messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:t?.messages[0].contacts?r={key:o,pushName:n,message:{...this.messageContactsJson(t)},contextInfo:this.messageContactsJson(t)?.contextInfo,messageType:"contactMessage",messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:r={key:o,pushName:n,message:this.messageTextJson(t),contextInfo:this.messageTextJson(t)?.contextInfo,messageType:this.renderMessageType(t.messages[0].type),messageTimestamp:parseInt(t.messages[0].timestamp),source:"unknown",instanceId:this.instanceId};if(this.localSettings.readMessages,this.configService.get("OPENAI").ENABLED){let u=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});u&&u.openaiCredsId&&u.speechToText&&t?.message?.audioMessage&&(r.message.speechToText=await this.openaiService.speechToText(u.OpenaiCreds,t,this.client.updateMediaMessage))}if(this.logger.log(r),this.sendDataWebhook("messages.upsert",r),await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:r.key.remoteJid,msg:r,pushName:r.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let u=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},r);u?.id&&(r.chatwootMessageId=u.id,r.chatwootInboxId=u.id,r.chatwootConversationId=u.id)}await this.prismaRepository.message.create({data:r});let a=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:o.remoteJid}}),c={remoteJid:t.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};if(c.remoteJid==="status@broadcast")return;if(a){let u={remoteJid:t.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};this.sendDataWebhook("contacts.update",u),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},u),await this.prismaRepository.contact.updateMany({where:{remoteJid:a.remoteJid},data:u});return}this.sendDataWebhook("contacts.upsert",c),this.prismaRepository.contact.create({data:c})}if(t.statuses)for await(let o of t.statuses){let a={id:o.id,remoteJid:this.phoneNumber,fromMe:this.phoneNumber===t.metadata.phone_number_id};if(s?.groups_ignore&&a.remoteJid.includes("@g.us"))return;if(a.remoteJid!=="status@broadcast"&&!a?.remoteJid?.match(/(:\d+)/)){let c=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:a.id}}});if(!c)return;if(o.message===null&&o.status===void 0){this.sendDataWebhook("messages.delete",a);let d={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:"DELETED",instanceId:this.instanceId};await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:a});return}let u={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:o.status.toUpperCase(),instanceId:this.instanceId};this.sendDataWebhook("messages.update",u),await this.prismaRepository.messageUpdate.create({data:u}),c.webhookUrl&&await Le.default.post(c.webhookUrl,u)}}}catch(r){this.logger.error(r)}}convertMessageToRaw(t,e){let s;return t?.conversation?e?.context?.message_id?(s={...t,contextInfo:{stanzaId:e.context.message_id}},s):(s=t,s):t?.mediaType==="image"?e?.context?.message_id?(s={imageMessage:t,contextInfo:{stanzaId:e.context.message_id}},s):{imageMessage:t}:t?.mediaType==="video"?e?.context?.message_id?(s={videoMessage:t,contextInfo:{stanzaId:e.context.message_id}},s):{videoMessage:t}:t?.mediaType==="audio"?e?.context?.message_id?(s={audioMessage:t,contextInfo:{stanzaId:e.context.message_id}},s):{audioMessage:t}:t?.mediaType==="document"?e?.context?.message_id?(s={documentMessage:t,contextInfo:{stanzaId:e.context.message_id}},s):{documentMessage:t}:t}async eventHandler(t){let e=this.configService.get("DATABASE"),s=await this.findSettings();this.messageHandle(t,e,s)}async sendMessageWithTyping(t,e,s,r=!1){try{let n,o,a=s?.linkPreview!=!1?void 0:!1;if(s?.quoted){let g=s?.quoted?.key;if(!g)throw"Message not found";n=g}s?.webhookUrl&&(o=s.webhookUrl);let c,u=await(async()=>{if(e.reactionMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"reaction",to:t.replace(/\D/g,""),reaction:{message_id:e.reactionMessage.key.id,emoji:e.reactionMessage.text}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(e.locationMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"location",to:t.replace(/\D/g,""),location:{longitude:e.locationMessage.degreesLongitude,latitude:e.locationMessage.degreesLatitude,name:e.locationMessage.name,address:e.locationMessage.address}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(e.contacts)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"contacts",to:t.replace(/\D/g,""),contacts:e.contacts},n&&(c.context={message_id:n.id}),e=e.message,await this.post(c,"messages");if(e.conversation)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"text",to:t.replace(/\D/g,""),text:{body:e.conversation,preview_url:a}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(e.media)return c={messaging_product:"whatsapp",recipient_type:"individual",type:e.mediaType,to:t.replace(/\D/g,""),[e.mediaType]:{[e.type]:e.id,preview_url:a,caption:e.caption}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(e.audio)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"audio",to:t.replace(/\D/g,""),audio:{[e.type]:e.id}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(e.buttons){c={messaging_product:"whatsapp",recipient_type:"individual",to:t.replace(/\D/g,""),type:"interactive",interactive:{type:"button",body:{text:e.text||"Select"},action:{buttons:e.buttons}}},n&&(c.context={message_id:n.id});let l="";for(let g of e.buttons)l+=`\u25B6\uFE0F ${g.reply?.title}
`;return e={conversation:`${e.text||"Select"}
`+l},await this.post(c,"messages")}if(e.listMessage){c={messaging_product:"whatsapp",recipient_type:"individual",to:t.replace(/\D/g,""),type:"interactive",interactive:{type:"list",header:{type:"text",text:e.listMessage.title},body:{text:e.listMessage.description},footer:{text:e.listMessage.footerText},action:{button:e.listMessage.buttonText,sections:e.listMessage.sections}}},n&&(c.context={message_id:n.id});let l="";for(let g of e.listMessage.sections){l+=`${g?.title}
`;for(let y of g.rows)l+=`${y?.title}
`}return e={conversation:`${e.listMessage.title}
`+l},await this.post(c,"messages")}if(e.template)return c={messaging_product:"whatsapp",recipient_type:"individual",to:t.replace(/\D/g,""),type:"template",template:{name:e.template.name,language:{code:e.template.language||"en_US"},components:e.template.components}},n&&(c.context={message_id:n.id}),e={conversation:`\u25B6\uFE0F${e.template.name}\u25C0\uFE0F`},await this.post(c,"messages")})();if(u?.error_data)return this.logger.error(u),u;let d={key:{fromMe:!0,id:u?.messages[0]?.id,remoteJid:this.createJid(t)},message:this.convertMessageToRaw(e,c),messageType:this.renderMessageType(c.type),messageTimestamp:u?.messages[0]?.timestamp||Math.round(new Date().getTime()/1e3),instanceId:this.instanceId,webhookUrl:o,status:X[1],source:"unknown"};return this.logger.log(d),this.sendDataWebhook("send.message",d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:d.key.remoteJid,msg:d,pushName:d.pushName}),await this.prismaRepository.message.create({data:d}),d}catch(n){throw this.logger.error(n),new h(n.toString())}}async textMessage(t,e=!1){return await this.sendMessageWithTyping(t.number,{conversation:t.text},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},e)}async getIdMedia(t){let e=new Vr.default,s=(0,jr.createReadStream)(t.media);e.append("file",s,{filename:"media",contentType:t.mimetype}),e.append("typeFile",t.mimetype),e.append("messaging_product","whatsapp");let r={Authorization:`Bearer ${this.token}`};return(await Le.default.post(process.env.API_URL+"/"+process.env.VERSION+"/"+this.number+"/media",e,{headers:r})).data.id}async prepareMediaMessage(t){try{if(t.mediatype==="document"&&!t.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(t.media);t.fileName=n[1]}t.mediatype==="image"&&!t.fileName&&(t.fileName="image.png"),t.mediatype==="video"&&!t.fileName&&(t.fileName="video.mp4");let e,s={caption:t?.caption,fileName:t.fileName,mediaType:t.mediatype,media:t.media,gifPlayback:!1};if((0,Ge.isURL)(t.media))e=ft.default.getType(t.media),s.id=t.media,s.type="link";else{e=ft.default.getType(t.fileName);let r=await this.getIdMedia(s);s.id=r,s.type="id"}return s.mimetype=e,s}catch(e){throw this.logger.error(e),new F(e?.toString()||e)}}async mediaMessage(t,e,s=!1){let r={...t};e&&(r.media=e.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(t.number,{...n},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async processAudio(t,e){e=e.replace(/\D/g,"");let s=`${e}-${new Date().getTime()}`,r,n={fileName:`${s}.mp3`,mediaType:"audio",media:t};if((0,Ge.isURL)(t))r=ft.default.getType(t),n.id=t,n.type="link";else{r=ft.default.getType(n.fileName);let o=await this.getIdMedia(n);n.id=o,n.type="id"}return n.mimetype=r,n}async audioWhatsapp(t,e,s=!1){let r={...t};if(e?.buffer)r.audio=e.buffer.toString("base64");else throw console.error("El archivo no tiene buffer o file es undefined"),new Error("File or buffer is undefined");let n=await this.processAudio(r.audio,t.number);return await this.sendMessageWithTyping(t.number,{...n},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async buttonMessage(t){let e={},s={text:t.buttons.map(r=>r.displayText),ids:t.buttons.map(r=>r.id)};if(!(0,Ge.arrayUnique)(s.text)||!(0,Ge.arrayUnique)(s.ids))throw new h("Button texts cannot be repeated","Button IDs cannot be repeated.");return await this.sendMessageWithTyping(t.number,{text:e?.mediaKey?void 0:t.title,buttons:t.buttons.map(r=>({type:"reply",reply:{title:r.displayText,id:r.id}})),[e?.mediaKey]:e?.message},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async locationMessage(t){return await this.sendMessageWithTyping(t.number,{locationMessage:{degreesLatitude:t.latitude,degreesLongitude:t.longitude,name:t?.name,address:t?.address}},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async listMessage(t){let e={title:t.sections.map(r=>r.title)};if(!(0,Ge.arrayUnique)(e.title))throw new h("Section tiles cannot be repeated");let s={listMessage:{title:t.title,description:t.description,footerText:t?.footerText,buttonText:t?.buttonText,sections:t.sections.map(r=>({title:r.title,rows:r.rows.map(n=>({title:n.title,description:n.description.substring(0,72),id:n.rowId}))}))}};return await this.sendMessageWithTyping(t.number,s,{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async templateMessage(t,e=!1){return await this.sendMessageWithTyping(t.number,{template:{name:t.name,language:t.language,components:t.components}},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned,webhookUrl:t?.webhookUrl},e)}async contactMessage(t){let e={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return t.contact.length===1?e.contact={displayName:t.contact[0].fullName,vcard:s(t.contact[0])}:e.contactsArrayMessage={displayName:`${t.contact.length} contacts`,contacts:t.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(t.number,{contacts:t.contact.map(r=>({name:{formatted_name:r.fullName,first_name:r.fullName},phones:[{phone:r.phoneNumber}],urls:[{url:r.url}],emails:[{email:r.email}],org:{company:r.organization}})),message:e},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async reactionMessage(t){return await this.sendMessageWithTyping(t.key.remoteJid,{reactionMessage:{key:t.key,text:t.reaction}})}async getBase64FromMediaMessage(t){try{let e=t.message,s=e.messageType.includes("Message")?e.messageType:e.messageType+"Message",r=e.message[s];return{mediaType:e.messageType,fileName:r?.fileName,caption:r?.caption,size:{fileLength:r?.fileLength,height:r?.fileLength,width:r?.width},mimetype:r?.mime_type,base64:e.message.base64}}catch(e){throw this.logger.error(e),new h(e.toString())}}async deleteMessage(){throw new h("Method not available on WhatsApp Business API")}async mediaSticker(){throw new h("Method not available on WhatsApp Business API")}async pollMessage(){throw new h("Method not available on WhatsApp Business API")}async statusMessage(){throw new h("Method not available on WhatsApp Business API")}async reloadConnection(){throw new h("Method not available on WhatsApp Business API")}async whatsappNumber(){throw new h("Method not available on WhatsApp Business API")}async markMessageAsRead(){throw new h("Method not available on WhatsApp Business API")}async archiveChat(){throw new h("Method not available on WhatsApp Business API")}async markChatUnread(){throw new h("Method not available on WhatsApp Business API")}async fetchProfile(){throw new h("Method not available on WhatsApp Business API")}async offerCall(){throw new h("Method not available on WhatsApp Business API")}async sendPresence(){throw new h("Method not available on WhatsApp Business API")}async setPresence(){throw new h("Method not available on WhatsApp Business API")}async fetchPrivacySettings(){throw new h("Method not available on WhatsApp Business API")}async updatePrivacySettings(){throw new h("Method not available on WhatsApp Business API")}async fetchBusinessProfile(){throw new h("Method not available on WhatsApp Business API")}async updateProfileName(){throw new h("Method not available on WhatsApp Business API")}async updateProfileStatus(){throw new h("Method not available on WhatsApp Business API")}async updateProfilePicture(){throw new h("Method not available on WhatsApp Business API")}async removeProfilePicture(){throw new h("Method not available on WhatsApp Business API")}async blockUser(){throw new h("Method not available on WhatsApp Business API")}async updateMessage(){throw new h("Method not available on WhatsApp Business API")}async createGroup(){throw new h("Method not available on WhatsApp Business API")}async updateGroupPicture(){throw new h("Method not available on WhatsApp Business API")}async updateGroupSubject(){throw new h("Method not available on WhatsApp Business API")}async updateGroupDescription(){throw new h("Method not available on WhatsApp Business API")}async findGroup(){throw new h("Method not available on WhatsApp Business API")}async fetchAllGroups(){throw new h("Method not available on WhatsApp Business API")}async inviteCode(){throw new h("Method not available on WhatsApp Business API")}async inviteInfo(){throw new h("Method not available on WhatsApp Business API")}async sendInvite(){throw new h("Method not available on WhatsApp Business API")}async acceptInviteCode(){throw new h("Method not available on WhatsApp Business API")}async revokeInviteCode(){throw new h("Method not available on WhatsApp Business API")}async findParticipants(){throw new h("Method not available on WhatsApp Business API")}async updateGParticipant(){throw new h("Method not available on WhatsApp Business API")}async updateGSetting(){throw new h("Method not available on WhatsApp Business API")}async toggleEphemeral(){throw new h("Method not available on WhatsApp Business API")}async leaveGroup(){throw new h("Method not available on WhatsApp Business API")}async fetchLabels(){throw new h("Method not available on WhatsApp Business API")}async handleLabel(){throw new h("Method not available on WhatsApp Business API")}async receiveMobileCode(){throw new h("Method not available on WhatsApp Business API")}async fakeCall(){throw new h("Method not available on WhatsApp Business API")}};var et=class{constructor(i,t,e,s){this.jid=i;this.exists=t;this.number=e;this.name=s}},ns=class{},rs=class{},wt=class{};var os=class{},as=class{},tt=class{};var cs=class{};var ps=class{},ls=class{},us=class{},ds=class{};var Jn=class{},gs=class extends Jn{},ms=class extends gs{},hs=class extends gs{},ys=class{};var Wn=require("baileys"),Re=class{constructor(i){this.cache=i;this.logger=new T("CacheService");i?this.logger.verbose(`cacheservice created using cache engine: ${i.constructor?.name}`):this.logger.verbose("cacheservice disabled")}async get(i){if(this.cache)return this.cache.get(i)}async hGet(i,t){if(!this.cache)return null;try{let e=await this.cache.hGet(i,t);return e?JSON.parse(e,Wn.BufferJSON.reviver):null}catch(e){return this.logger.error(e),null}}async set(i,t,e){this.cache&&this.cache.set(i,t,e)}async hSet(i,t,e){if(this.cache)try{let s=JSON.stringify(e,Wn.BufferJSON.replacer);await this.cache.hSet(i,t,s)}catch(s){this.logger.error(s)}}async has(i){if(this.cache)return this.cache.has(i)}async delete(i){if(this.cache)return this.cache.delete(i)}async hDelete(i,t){if(!this.cache)return!1;try{return await this.cache.hDelete(i,t),!0}catch(e){return this.logger.error(e),!1}}async deleteAll(i){if(this.cache)return this.cache.deleteAll(i)}async keys(i){if(this.cache)return this.cache.keys(i)}};var Hn=A(require("@ffmpeg-installer/ffmpeg"));var Yr=A(require("dayjs"));function Qr(p){let i=[];p.startsWith("+")&&(p=p.slice(1));let[t,e]=p.split("@");if(p.startsWith("55")){let s=t.slice(4,5)==="9"&&t.length===13?t:`${t.slice(0,4)}9${t.slice(4)}`,r=t.length===12?t:t.slice(0,4)+t.slice(5);i.push(s),i.push(r)}else if(t.startsWith("52")||t.startsWith("54")){let s="";t.startsWith("52")&&(s="1"),t.startsWith("54")&&(s="9");let r=t.slice(2,3)===s&&t.length===13?t:`${t.slice(0,2)}${s}${t.slice(2)}`,n=t.length===12?t:t.slice(0,2)+t.slice(3);i.push(r),i.push(n)}else i.push(p);return i.map(s=>`${s}@${e}`)}async function He(p){if(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let i=p.map(t=>{let e=t.remoteJid.startsWith("+")?t.remoteJid.slice(1):t.remoteJid,s=Qr(e);return B.isOnWhatsapp.upsert({create:{remoteJid:e,jidOptions:s.join(",")},update:{jidOptions:s.join(",")},where:{remoteJid:e}})});await B.$transaction(i)}}async function zr(p){let i=[];if(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let t=p.map(s=>Qr(s)).flat();i=(await B.isOnWhatsapp.findMany({where:{OR:t.map(s=>({jidOptions:{contains:s}})),updatedAt:{gte:(0,Yr.default)().subtract(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP_DAYS,"days").toDate()}}})).map(s=>({remoteJid:s.remoteJid,number:s.remoteJid.split("@")[0],jidOptions:s.jidOptions.split(",")}))}return i}var bt=require("path"),fs=process.cwd(),St=(0,bt.join)(fs,"instances"),Wu=(0,bt.join)(fs,"src"),$u=(0,bt.join)(fs,"store","auth"),Xr=(0,bt.join)(fs,"store");var Ve=require("baileys"),Zr=A(require("fs/promises")),eo=A(require("path"));async function $n(p){try{return!!await B.session.findUnique({where:{sessionId:p}})}catch{return!1}}async function sp(p,i){let t=await $n(p);try{if(!t)return await B.session.create({data:{sessionId:p,creds:JSON.stringify(i)}});await B.session.update({where:{sessionId:p},data:{creds:JSON.stringify(i)}})}catch{return null}}async function ip(p){try{if(!await $n(p))return null;let t=await B.session.findUnique({where:{sessionId:p}});return JSON.parse(t?.creds)}catch{return null}}async function np(p){try{if(!await $n(p))return;await B.session.delete({where:{sessionId:p}})}catch{return}}async function qn(p,i){let t=eo.default.join(St,p);await Zr.default.mkdir(t,{recursive:!0});async function e(o,a){let c=JSON.stringify(o,Ve.BufferJSON.replacer);if(a!="creds")return await i.hSet(p,a,o);await sp(p,c)}async function s(o){try{let a;return o!="creds"?await i.hGet(p,o):(a=await ip(p),JSON.parse(a,Ve.BufferJSON.reviver))}catch{return null}}async function r(o){try{if(o!="creds")return await i.hDelete(p,o);await np(p)}catch{return}}let n=await s("creds");return n||(n=(0,Ve.initAuthCreds)(),await e(n,"creds")),{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=Ve.WAProto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?e(d,l):r(l))}await Promise.all(a)}}},saveCreds:()=>e(n,"creds")}}var je=require("baileys"),to=require("class-validator");var ws=class{constructor(i){this.providerFiles=i;this.logger=new T("AuthStateProvider")}async authStateProvider(i){let[,t]=await this.providerFiles.create(i);if(t){this.logger.error(["Failed to create folder on file server",t?.message,t?.stack]);return}let e=async(o,a)=>{let c=JSON.stringify(o,je.BufferJSON.replacer),[u,d]=await this.providerFiles.write(i,a,{data:c});if(!d)return u},s=async o=>{let[a,c]=await this.providerFiles.read(i,o);if(!c&&(0,to.isNotEmpty)(a?.data))return JSON.parse(JSON.stringify(a.data),je.BufferJSON.reviver)},r=async o=>{let[a,c]=await this.providerFiles.delete(i,o);if(!c)return a},n=await s("creds")||(0,je.initAuthCreds)();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=je.proto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await e(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await e(n,"creds")}}};var bs=require("baileys");async function so(p,i){let t=new T("useMultiFileAuthStateRedisDb"),e=async(o,a)=>{try{return await i.hSet(p,a,o)}catch(c){return t.error({localError:"writeData",error:c})}},s=async o=>{try{return await i.hGet(p,o)}catch(a){t.error({localError:"readData",error:a});return}},r=async o=>{try{return await i.hDelete(p,o)}catch(a){t.error({readData:"removeData",error:a})}},n=await s("creds")||(0,bs.initAuthCreds)();return{state:{creds:n,keys:{get:async(o,a)=>{let c={};return await Promise.all(a.map(async u=>{let d=await s(`${o}-${u}`);o==="app-state-sync-key"&&d&&(d=bs.proto.Message.AppStateSyncKeyData.fromObject(d)),c[u]=d})),c},set:async o=>{let a=[];for(let c in o)for(let u in o[c]){let d=o[c][u],l=`${c}-${u}`;a.push(d?await e(d,l):await r(l))}await Promise.all(a)}}},saveCreds:async()=>await e(n,"creds")}}var Pe=A(require("axios")),R=A(require("baileys")),io=require("child_process"),Z=require("class-validator"),no=require("crypto"),Vn=A(require("fluent-ffmpeg")),ro=A(require("form-data")),oo=require("fs"),Ss=A(require("long")),Et=A(require("mime")),jn=A(require("node-cache")),ao=A(require("node-cron")),co=require("os"),Es=require("path"),st=A(require("pino")),po=A(require("qrcode")),lo=A(require("qrcode-terminal")),uo=A(require("sharp")),Ke=require("stream"),Is=require("uuid"),Gn=new Re(new Ce(C,"groups").getEngine());async function rp(p){let i=(await import("mediainfo.js")).default,t=await i({format:"JSON"}),e,s;if(Buffer.isBuffer(p))e=p.length,s=async(c,u)=>p.slice(u,u+c);else if(typeof p=="string"){let c=await import("fs");e=(await c.promises.stat(p)).size;let d=await c.promises.open(p,"r");s=async(l,g)=>{let y=Buffer.alloc(l);return await d.read(y,0,l,g),y};try{let l=await t.analyzeData(()=>e,s),m=JSON.parse(l).media.track.find(f=>f["@type"]==="General").Duration;return Math.round(parseFloat(m))}finally{await d.close()}}else if(p instanceof Ke.Readable){let c=[];for await(let d of p)c.push(d);let u=Buffer.concat(c);e=u.length,s=async(d,l)=>u.slice(l,l+d)}else throw new Error("Tipo de entrada n\xE3o suportado");let r=await t.analyzeData(()=>e,s),a=JSON.parse(r).media.track.find(c=>c["@type"]==="General").Duration;return Math.round(parseFloat(a))}var Ms=class extends ke{constructor(t,e,s,r,n,o,a){super(t,e,s,n);this.configService=t;this.eventEmitter=e;this.prismaRepository=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.providerFiles=a;this.msgRetryCounterCache=new jn.default;this.userDevicesCache=new jn.default;this.endSession=!1;this.logBaileys=this.configService.get("LOG").BAILEYS;this.stateConnection={state:"close"};this.chatHandle={"chats.upsert":async t=>{let e=await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId},select:{remoteJid:!0}}),s=new Set(e.map(n=>n.remoteJid)),r=t.filter(n=>!s?.has(n.id)).map(n=>({remoteJid:n.id,instanceId:this.instanceId,name:n.name,unreadMessages:n.unreadCount!==void 0?n.unreadCount:0}));this.sendDataWebhook("chats.upsert",r),r.length>0&&this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.createMany({data:r,skipDuplicates:!0})},"chats.update":async t=>{let e=t.map(s=>({remoteJid:s.id,instanceId:this.instanceId}));this.sendDataWebhook("chats.update",e);for(let s of t)await this.prismaRepository.chat.updateMany({where:{instanceId:this.instanceId,remoteJid:s.id,name:s.name},data:{remoteJid:s.id}})},"chats.delete":async t=>{t.forEach(async e=>await this.prismaRepository.chat.deleteMany({where:{instanceId:this.instanceId,remoteJid:e}})),this.sendDataWebhook("chats.delete",[...t])}};this.contactHandle={"contacts.upsert":async t=>{try{let e=t.map(r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:null,instanceId:this.instanceId}));if(e.length>0){this.sendDataWebhook("contacts.upsert",e),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.createMany({data:e,skipDuplicates:!0});let r=e.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await He(r.map(n=>({remoteJid:n.remoteJid})))}this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importContacts&&e.length&&(this.chatwootService.addHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},e),ee.importHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},this.localChatwoot));let s=await Promise.all(t.map(async r=>({remoteJid:r.id,pushName:r?.name||r?.verifiedName||r.id.split("@")[0],profilePicUrl:(await this.profilePicture(r.id)).profilePictureUrl,instanceId:this.instanceId})));if(s.length>0){let r=s.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await He(r.map(n=>({remoteJid:n.remoteJid}))),this.sendDataWebhook("contacts.update",s),await Promise.all(s.map(async n=>{let o=this.prismaRepository.contact.updateMany({where:{remoteJid:n.remoteJid,instanceId:this.instanceId},data:{profilePicUrl:n.profilePicUrl}});if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let a={instanceName:this.instance.name,instanceId:this.instance.id},c=await this.chatwootService.findContact(a,n.remoteJid.split("@")[0]);if(!c)return;this.chatwootService.updateContact(a,c.id,{name:n.pushName,avatar_url:n.profilePicUrl})}return o}))}}catch(e){console.error(e),this.logger.error(`Error: ${e.message}`)}},"contacts.update":async t=>{let e=[];for await(let n of t)e.push({remoteJid:n.id,pushName:n?.name??n?.verifiedName,profilePicUrl:(await this.profilePicture(n.id)).profilePictureUrl,instanceId:this.instanceId});this.sendDataWebhook("contacts.update",e);let s=e.map(n=>this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:n.remoteJid,instanceId:n.instanceId}},create:n,update:n}));await this.prismaRepository.$transaction(s);let r=e.filter(n=>n.remoteJid.includes("@s.whatsapp"));r&&await He(r.map(n=>({remoteJid:n.remoteJid})))}};this.messageHandle={"messaging-history.set":async({messages:t,chats:e,contacts:s,isLatest:r,progress:n,syncType:o})=>{try{o===R.proto.HistorySync.HistorySyncType.ON_DEMAND&&console.log("received on-demand history sync, messages=",t),console.log(`recv ${e.length} chats, ${s.length} contacts, ${t.length} msgs (is latest: ${r}, progress: ${n}%), type: ${o}`);let a={instanceName:this.instance.name},c=null;if(this.configService.get("CHATWOOT").ENABLED){let y=this.localChatwoot?.enabled?this.localChatwoot.daysLimitImportMessages:1e3,m=new Date;if(c=new Date(m.setDate(m.getDate()-y)).getTime()/1e3,!(Math.max(...t.map(S=>S.messageTimestamp))>=c))return}let u=[],d=new Set((await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).map(y=>y.remoteJid));for(let y of e)d?.has(y.id)||u.push({remoteJid:y.id,instanceId:this.instanceId,name:y.name});this.sendDataWebhook("chats.set",u),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.chat.createMany({data:u,skipDuplicates:!0});let l=[],g=new Set(ee.getRepositoryMessagesCache(a)??(await this.prismaRepository.message.findMany({select:{key:!0},where:{instanceId:this.instanceId}})).map(y=>y.key.id));ee.getRepositoryMessagesCache(a)===null&&ee.setRepositoryMessagesCache(a,g);for(let y of t)!y.message||!y.key||!y.messageTimestamp||(Ss.default.isLong(y?.messageTimestamp)&&(y.messageTimestamp=y.messageTimestamp?.toNumber()),!(this.configService.get("CHATWOOT").ENABLED&&y.messageTimestamp<=c)&&(g?.has(y.key.id)||l.push(this.prepareMessage(y))));this.sendDataWebhook("messages.set",[...l]),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.message.createMany({data:l,skipDuplicates:!0}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&l.length>0&&this.chatwootService.addHistoryMessages(a,l.filter(y=>!ee.isIgnorePhoneNumber(y.key?.remoteJid))),await this.contactHandle["contacts.upsert"](s.filter(y=>!!y.notify||!!y.name).map(y=>({id:y.id,name:y.name??y.notify}))),s=void 0,t=void 0,e=void 0}catch(a){this.logger.error(a)}},"messages.upsert":async({messages:t,type:e,requestId:s},r)=>{try{for(let n of t){if(n.message?.conversation||n.message?.extendedTextMessage?.text){let g=n.message?.conversation||n.message?.extendedTextMessage?.text;if(g=="requestPlaceholder"&&!s){let y=await this.client.requestPlaceholderResend(n.key);console.log("requested placeholder resync, id=",y)}else s&&console.log("Message received from phone, id=",s,n);if(g=="onDemandHistSync"){let y=await this.client.fetchMessageHistory(50,n.key,n.messageTimestamp);console.log("requested on-demand sync, id=",y)}}if(n.message?.protocolMessage?.editedMessage||n.message?.editedMessage?.message){let g=n.message?.protocolMessage||n.message?.editedMessage?.message?.protocolMessage;g&&(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.edit",{instanceName:this.instance.name,instanceId:this.instance.id},g),await this.sendDataWebhook("messages.edited",g))}if(n.messageStubParameters&&n.messageStubParameters[0]==="Message absent from node"){this.logger.info(`Recovering message lost messageId: ${n.key.id}`),await this.baileysCache.set(n.key.id,{message:n,retry:0});continue}if((await this.baileysCache.get(n.key.id)||null)&&(this.logger.info("Recovered message lost"),await this.baileysCache.delete(n.key.id)),e!=="notify"&&e!=="append"||n.message?.protocolMessage||n.message?.pollUpdateMessage||!n?.message||(Ss.default.isLong(n.messageTimestamp)&&(n.messageTimestamp=n.messageTimestamp?.toNumber()),r?.groupsIgnore&&n.key.remoteJid.includes("@g.us")))continue;if(await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:n.key.remoteJid}})){let g={remoteJid:n.key.remoteJid,instanceId:this.instanceId,name:n.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[g]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:g})}let c=this.prepareMessage(n),u=n?.message?.imageMessage||n?.message?.videoMessage||n?.message?.stickerMessage||n?.message?.documentMessage||n?.message?.documentWithCaptionMessage||n?.message?.ptvMessage||n?.message?.audioMessage;if(this.localSettings.readMessages&&n.key.id!=="status@broadcast"&&await this.client.readMessages([n.key]),this.localSettings.readStatus&&n.key.id==="status@broadcast"&&await this.client.readMessages([n.key]),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!n.key.id.includes("@broadcast")){let g=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instance.id},c);g?.id&&(c.chatwootMessageId=g.id,c.chatwootInboxId=g.inbox_id,c.chatwootConversationId=g.conversation_id)}if(this.configService.get("OPENAI").ENABLED&&n?.message?.audioMessage){let g=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});g&&g.openaiCredsId&&g.speechToText&&(c.message.speechToText=await this.openaiService.speechToText(g.OpenaiCreds,n,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let g=await this.prismaRepository.message.create({data:c});if(n.key.fromMe===!1?g.status===X[3]?(this.logger.log(`Update not read messages ${n.key.remoteJid}`),await this.updateChatUnreadMessages(n.key.remoteJid)):g.status===X[4]&&(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)):(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)),u&&this.configService.get("S3").ENABLE)try{let y=n,m=await this.getBase64FromMediaMessage({message:y},!0),{buffer:f,mediaType:b,fileName:S,size:w}=m,I=Et.default.getType(S).toString(),E=(0,Es.join)(`${this.instance.id}`,n.key.remoteJid,b,S);await yt(E,f,w.fileLength?.low,{"Content-Type":I}),await this.prismaRepository.media.create({data:{messageId:g.id,instanceId:this.instanceId,type:b,fileName:E,mimetype:I}});let M=await qe(E);c.message.mediaUrl=M,await this.prismaRepository.message.update({where:{id:g.id},data:c})}catch(y){this.logger.error(["Error on upload file to minio",y?.message,y?.stack])}}if(this.localWebhook.enabled&&u&&this.localWebhook.webhookBase64){let g=await(0,R.downloadMediaMessage)({key:n.key,message:n?.message},"buffer",{},{logger:(0,st.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage});c.message.base64=g?g.toString("base64"):void 0}this.logger.log(c),this.sendDataWebhook("messages.upsert",c),await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName});let d=await this.prismaRepository.contact.findFirst({where:{remoteJid:n.key.remoteJid,instanceId:this.instanceId}}),l={remoteJid:n.key.remoteJid,pushName:n.key.fromMe||n.key.fromMe==null?"":n.pushName,profilePicUrl:(await this.profilePicture(n.key.remoteJid)).profilePictureUrl,instanceId:this.instanceId};if(l.remoteJid!=="status@broadcast"){if(d){this.sendDataWebhook("contacts.update",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},create:l,update:l});continue}this.sendDataWebhook("contacts.upsert",l),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:l.remoteJid,instanceId:l.instanceId}},update:l,create:l}),l.remoteJid.includes("@s.whatsapp")&&await He([{remoteJid:l.remoteJid}])}}}catch(n){this.logger.error(n)}},"messages.update":async(t,e)=>{this.logger.log(`Update messages ${JSON.stringify(t,void 0,2)}`);let s={};for await(let{key:r,update:n}of t)if(!(e?.groupsIgnore&&r.remoteJid?.includes("@g.us"))&&(X[n.status]==="READ"&&r.fromMe&&this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.read",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r}),r.remoteJid!=="status@broadcast")){let o;if(n.pollUpdates){let d=await this.getMessage(r);d&&(o=(0,R.getAggregateVotesInPollMessage)({message:d,pollUpdates:n.pollUpdates}))}let a=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:r.id}}});if(!a)continue;if(n.message===null&&n.status===void 0){this.sendDataWebhook("messages.delete",r);let d={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:"DELETED",instanceId:this.instanceId};this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:r});continue}else n.status!==void 0&&X[n.status]!==a.status&&(!r.fromMe&&r.remoteJid&&(s[r.remoteJid]=!0,X[n.status]===X[4]&&(this.logger.log(`Update as read ${r.remoteJid} - ${a.messageTimestamp}`),this.updateMessagesReadedByTimestamp(r.remoteJid,a.messageTimestamp))),await this.prismaRepository.message.update({where:{id:a.id},data:{status:X[n.status]}}));let c={messageId:a.id,keyId:r.id,remoteJid:r.remoteJid,fromMe:r.fromMe,participant:r?.remoteJid,status:X[n.status],pollUpdates:o,instanceId:this.instanceId};if(this.sendDataWebhook("messages.update",c),this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:c}),await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:c.remoteJid}})){let d={remoteJid:c.remoteJid,instanceId:this.instanceId,name:c.pushName||"",unreadMessages:0};this.sendDataWebhook("chats.upsert",[d]),this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.create({data:d})}}await Promise.all(Object.keys(s).map(r=>this.updateChatUnreadMessages(r)))}};this.groupHandler={"groups.upsert":t=>{this.sendDataWebhook("groups.upsert",t)},"groups.update":t=>{this.sendDataWebhook("groups.update",t),t.forEach(e=>{(0,R.isJidGroup)(e.id)&&this.updateGroupMetadataCache(e.id)})},"group-participants.update":t=>{this.sendDataWebhook("group-participants.update",t),this.updateGroupMetadataCache(t.id)}};this.labelHandle={"labels.edit":async t=>{let s=(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).find(n=>n.labelId===t.id);if(t.deleted&&s){await this.prismaRepository.label.delete({where:{labelId_instanceId:{instanceId:this.instanceId,labelId:t.id}}}),this.sendDataWebhook("labels.edit",{...t,instance:this.instance.name});return}let r=t.name.replace(/[^\x20-\x7E]/g,"");if(!s||s.color!==`${t.color}`||s.name!==r){if(this.configService.get("DATABASE").SAVE_DATA.LABELS){let n={color:`${t.color}`,name:r,labelId:t.id,predefinedId:t.predefinedId,instanceId:this.instanceId};await this.prismaRepository.label.upsert({where:{labelId_instanceId:{instanceId:n.instanceId,labelId:n.labelId}},update:n,create:n})}this.sendDataWebhook("labels.edit",{...t,instance:this.instance.name})}},"labels.association":async(t,e)=>{if(e.SAVE_DATA.CHATS){let r=(await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).find(n=>n.remoteJid===t.association.chatId);if(r){let o=[...Array.isArray(r.labels)?r.labels.map(a=>String(a)):[]];t.type==="remove"?o=o.filter(a=>a!==t.association.labelId):t.type==="add"&&(o=[...o,t.association.labelId]),await this.prismaRepository.chat.update({where:{id:r.id},data:{labels:o}})}}this.sendDataWebhook("labels.association",{instance:this.instance.name,type:t.type,chatId:t.association.chatId,labelId:t.association.labelId})}};this.mapType=new Map([["reply","quick_reply"],["copy","cta_copy"],["url","cta_url"],["call","cta_call"],["pix","payment_info"]]);this.mapKeyType=new Map([["phone","PHONE"],["email","EMAIL"],["cpf","CPF"],["cnpj","CNPJ"],["random","EVP"]]);this.getGroupMetadataCache=async t=>{if(!(0,R.isJidGroup)(t))return null;let e=this.configService.get("CACHE");if(e?.REDIS?.ENABLED&&e?.REDIS?.URI!==""||e?.LOCAL?.ENABLED){if(await Gn?.has(t)){console.log(`Cache request for group: ${t}`);let s=await Gn.get(t);return Date.now()-s.timestamp>36e5&&await this.updateGroupMetadataCache(t),s.data}return console.log(`Cache request for group: ${t} - not found`),await this.updateGroupMetadataCache(t)}return await this.findGroup({groupJid:t},"inner")};this.instance.qrcode={count:0},this.authStateProvider=new ws(this.providerFiles)}get connectionStatus(){return this.stateConnection}async logoutInstance(){await this.client?.logout("Log out instance: "+this.instanceName),this.client?.ws?.close(),await this.prismaRepository.session.findFirst({where:{sessionId:this.instanceId}})&&await this.prismaRepository.session.delete({where:{sessionId:this.instanceId}})}async getProfileName(){let t=this.client.user?.name??this.client.user?.verifiedName;if(!t){let e=await this.prismaRepository.session.findUnique({where:{sessionId:this.instanceId}});if(e){let s=JSON.parse(JSON.stringify(e.creds),R.BufferJSON.reviver);t=s.me?.name||s.me?.verifiedName}}return t}async getProfileStatus(){return(await this.client.fetchStatus(this.instance.wuid))?.status}get profilePictureUrl(){return this.instance.profilePictureUrl}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async connectionUpdate({qr:t,connection:e,lastDisconnect:s}){if(t){if(this.instance.qrcode.count===this.configService.get("QRCODE").LIMIT)return this.sendDataWebhook("qrcode.updated",{message:"QR code limit reached, please login again",statusCode:R.DisconnectReason.badSession}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{message:"QR code limit reached, please login again",statusCode:R.DisconnectReason.badSession}),this.sendDataWebhook("connection.update",{instance:this.instance.name,state:"refused",statusReason:R.DisconnectReason.connectionClosed}),this.endSession=!0,this.eventEmitter.emit("no.connection",this.instance.name);this.instance.qrcode.count++;let n={margin:3,scale:4,errorCorrectionLevel:"H",color:{light:"#ffffff",dark:this.configService.get("QRCODE").COLOR}};this.phoneNumber?(await(0,R.delay)(1e3),this.instance.qrcode.pairingCode=await this.client.requestPairingCode(this.phoneNumber)):this.instance.qrcode.pairingCode=null,po.default.toDataURL(t,n,(o,a)=>{if(o){this.logger.error("Qrcode generate failed:"+o.toString());return}this.instance.qrcode.base64=a,this.instance.qrcode.code=t,this.sendDataWebhook("qrcode.updated",{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:t,base64:a}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:t,base64:a}})}),lo.default.generate(t,{small:!0},o=>this.logger.log(`
{ instance: ${this.instance.name} pairingCode: ${this.instance.qrcode.pairingCode}, qrcodeCount: ${this.instance.qrcode.count} }
`+o)),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"connecting"}})}if(e&&(this.stateConnection={state:e,statusReason:s?.error?.output?.statusCode??200},this.sendDataWebhook("connection.update",{instance:this.instance.name,...this.stateConnection})),e==="close"){let r=s?.error?.output?.statusCode;![R.DisconnectReason.loggedOut,R.DisconnectReason.forbidden,402,406].includes(r)?await this.connectToWhatsapp(this.phoneNumber):(this.sendDataWebhook("status.instance",{instance:this.instance.name,status:"closed",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"close",disconnectionAt:new Date,disconnectionReasonCode:r,disconnectionObject:JSON.stringify(s)}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"closed"}),this.eventEmitter.emit("logout.instance",this.instance.name,"inner"),this.client?.ws?.close(),this.client.end(new Error("Close connection")))}if(e==="open"){this.instance.wuid=this.client.user.id.replace(/:\d+/,"");try{let o=await this.profilePicture(this.instance.wuid);this.instance.profilePictureUrl=o.profilePictureUrl}catch{this.instance.profilePictureUrl=null}let r=this.instance.wuid.split("@")[0].padEnd(30," "),n=this.instance.name;this.logger.info(`
        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u2502    CONNECTED TO WHATSAPP     \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`.replace(/^ +/gm,"  ")),this.logger.info(`
        wuid: ${r}
        name: ${n}
      `),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{ownerJid:this.instance.wuid,profileName:await this.getProfileName(),profilePicUrl:this.instance.profilePictureUrl,connectionStatus:"open"}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&(this.chatwootService.eventWhatsapp("connection.update",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"open"}),this.syncChatwootLostMessages())}}async getMessage(t,e=!1){try{let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,key:{path:["id"],equals:t.id}}});if(e)return s[0];if(s[0].message?.pollCreationMessage){let r=s[0].message?.messageContextInfo?.messageSecret;if(typeof r=="string")return{messageContextInfo:{messageSecret:Buffer.from(r,"base64")},pollCreationMessage:s[0].message?.pollCreationMessage}}return s[0].message}catch{return{conversation:""}}}async defineAuthState(){let t=this.configService.get("DATABASE"),e=this.configService.get("CACHE");if(this.configService.get("PROVIDER")?.ENABLED)return await this.authStateProvider.authStateProvider(this.instance.id);if(e?.REDIS.ENABLED&&e?.REDIS.SAVE_INSTANCES)return this.logger.info("Redis enabled"),await so(this.instance.id,this.cache);if(t.SAVE_DATA.INSTANCE)return await qn(this.instance.id,this.cache)}async createClient(t){this.instance.authState=await this.defineAuthState();let e=this.configService.get("CONFIG_SESSION_PHONE"),s={};if(t||this.phoneNumber)this.phoneNumber=t,this.logger.info(`Phone number: ${t}`);else{let c=[e.CLIENT,e.NAME,(0,co.release)()];s={browser:c},this.logger.info(`Browser: ${c}`)}let r,n;e.VERSION?(r=e.VERSION.split("."),n=`Baileys version env: ${r}`):(r=(await(0,R.fetchLatestBaileysVersion)()).version,n=`Baileys version: ${r}`),this.logger.info(n),this.logger.info(`Group Ignore: ${this.localSettings.groupsIgnore}`);let o;if(this.localProxy?.enabled)if(this.logger.info("Proxy enabled: "+this.localProxy?.host),this.localProxy?.host?.includes("proxyscrape"))try{let d=(await Pe.default.get(this.localProxy?.host)).data.split(`\r
`),l=Math.floor(Math.random()*Math.floor(d.length)),g="http://"+d[l];o={agent:Ee(g),fetchAgent:Ee(g)}}catch{this.localProxy.enabled=!1}else o={agent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password}),fetchAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})};let a={...o,version:r,logger:(0,st.default)({level:this.logBaileys}),printQRInTerminal:!1,auth:{creds:this.instance.authState.state.creds,keys:(0,R.makeCacheableSignalKeyStore)(this.instance.authState.state.keys,(0,st.default)({level:"error"}))},msgRetryCounterCache:this.msgRetryCounterCache,generateHighQualityLinkPreview:!0,getMessage:async c=>await this.getMessage(c),...s,markOnlineOnConnect:this.localSettings.alwaysOnline,retryRequestDelayMs:350,maxMsgRetryCount:4,fireInitQueries:!0,connectTimeoutMs:3e4,keepAliveIntervalMs:3e4,qrTimeout:45e3,emitOwnEvents:!1,shouldIgnoreJid:c=>{let u=this.localSettings.groupsIgnore&&(0,R.isJidGroup)(c),d=!this.localSettings.readStatus&&(0,R.isJidBroadcast)(c),l=(0,R.isJidNewsletter)(c);return u||d||l},syncFullHistory:this.localSettings.syncFullHistory,shouldSyncHistoryMessage:c=>this.historySyncNotification(c),cachedGroupMetadata:this.getGroupMetadataCache,userDevicesCache:this.userDevicesCache,transactionOpts:{maxCommitRetries:10,delayBetweenTriesMs:3e3},patchMessageBeforeSending(c){return c.deviceSentMessage?.message?.listMessage?.listType===R.proto.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.deviceSentMessage.message.listMessage.listType=R.proto.Message.ListMessage.ListType.SINGLE_SELECT),c.listMessage?.listType==R.proto.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.listMessage.listType=R.proto.Message.ListMessage.ListType.SINGLE_SELECT),c}};return this.endSession=!1,this.client=(0,R.default)(a),this.eventHandler(),this.phoneNumber=t,this.client}async connectToWhatsapp(t){try{return this.loadChatwoot(),this.loadSettings(),this.loadWebhook(),this.loadProxy(),await this.createClient(t)}catch(e){throw this.logger.error(e),new F(e?.toString())}}async reloadConnection(){try{return await this.createClient(this.phoneNumber)}catch(t){throw this.logger.error(t),new F(t?.toString())}}eventHandler(){this.client.ev.process(async t=>{if(!this.endSession){let e=this.configService.get("DATABASE"),s=await this.findSettings();if(t.call){let r=t.call[0];if(s?.rejectCall&&r.status=="offer"&&this.client.rejectCall(r.id,r.from),s?.msgCall?.trim().length>0&&r.status=="offer"){let n=await this.client.sendMessage(r.from,{text:s.msgCall});this.client.ev.emit("messages.upsert",{messages:[n],type:"notify"})}this.sendDataWebhook("call",r)}if(t["connection.update"]&&this.connectionUpdate(t["connection.update"]),t["creds.update"]&&this.instance.authState.saveCreds(),t["messaging-history.set"]){let r=t["messaging-history.set"];this.messageHandle["messaging-history.set"](r)}if(t["messages.upsert"]){let r=t["messages.upsert"];this.messageHandle["messages.upsert"](r,s)}if(t["messages.update"]){let r=t["messages.update"];this.messageHandle["messages.update"](r,s)}if(t["message-receipt.update"]){let r=t["message-receipt.update"],n={};for(let o of r)typeof o.key.remoteJid=="string"&&typeof o.receipt.readTimestamp=="number"&&(n[o.key.remoteJid]=o.receipt.readTimestamp);await Promise.all(Object.keys(n).map(async o=>this.updateMessagesReadedByTimestamp(o,n[o])))}if(t["presence.update"]){let r=t["presence.update"];if(s?.groupsIgnore&&r.id.includes("@g.us"))return;this.sendDataWebhook("presence.update",r)}if(!s?.groupsIgnore){if(t["groups.upsert"]){let r=t["groups.upsert"];this.groupHandler["groups.upsert"](r)}if(t["groups.update"]){let r=t["groups.update"];this.groupHandler["groups.update"](r)}if(t["group-participants.update"]){let r=t["group-participants.update"];this.groupHandler["group-participants.update"](r)}}if(t["chats.upsert"]){let r=t["chats.upsert"];this.chatHandle["chats.upsert"](r)}if(t["chats.update"]){let r=t["chats.update"];this.chatHandle["chats.update"](r)}if(t["chats.delete"]){let r=t["chats.delete"];this.chatHandle["chats.delete"](r)}if(t["contacts.upsert"]){let r=t["contacts.upsert"];this.contactHandle["contacts.upsert"](r)}if(t["contacts.update"]){let r=t["contacts.update"];this.contactHandle["contacts.update"](r)}if(t["labels.association"]){let r=t["labels.association"];this.labelHandle["labels.association"](r,e);return}if(t["labels.edit"]){let r=t["labels.edit"];this.labelHandle["labels.edit"](r);return}}})}historySyncNotification(t){let e={instanceName:this.instance.name};return this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&this.isSyncNotificationFromUsedSyncType(t)&&(t.chunkOrder===1&&this.chatwootService.startImportHistoryMessages(e),t.progress===100&&setTimeout(()=>{this.chatwootService.importHistoryMessages(e)},1e4)),!0}isSyncNotificationFromUsedSyncType(t){return this.localSettings.syncFullHistory&&t?.syncType===2||!this.localSettings.syncFullHistory&&t?.syncType===3}async profilePicture(t){let e=this.createJid(t);try{let s=await this.client.profilePictureUrl(e,"image");return{wuid:e,profilePictureUrl:s}}catch{return{wuid:e,profilePictureUrl:null}}}async getStatus(t){let e=this.createJid(t);try{return{wuid:e,status:(await this.client.fetchStatus(e))?.status}}catch{return{wuid:e,status:null}}}async fetchProfile(t,e){let s=e?this.createJid(e):this.client?.user?.id,r=(await this.whatsappNumber({numbers:[s]}))?.shift();if(!r.exists)throw new h(r);try{if(e){let n=(await this.whatsappNumber({numbers:[s]}))?.shift(),o=await this.profilePicture(n?.jid),a=await this.getStatus(n?.jid),c=await this.fetchBusinessProfile(n?.jid);return{wuid:n?.jid||s,name:n?.name,numberExists:n?.exists,picture:o?.profilePictureUrl,status:a?.status,isBusiness:c.isBusiness,email:c?.email,description:c?.description,website:c?.website?.shift()}}else{let n=t?[t]:null,o=await k.instanceInfo(n),a=await this.fetchBusinessProfile(s);return{wuid:s,name:o?.profileName,numberExists:!0,picture:o?.profilePicUrl,status:o?.connectionStatus,isBusiness:a.isBusiness,email:a?.email,description:a?.description,website:a?.website?.shift()}}}catch{return{wuid:s,name:null,picture:null,status:null,os:null,isBusiness:!1}}}async offerCall({number:t,isVideo:e,callDuration:s}){let r=this.createJid(t);try{let n=await this.client.offerCall(r,e);return setTimeout(()=>this.client.terminateCall(n.id,n.to),s*1e3),n}catch(n){return n}}async sendMessage(t,e,s,r,n,o,a){t=t.toLowerCase();let c={quoted:n};if((0,R.isJidGroup)(t)&&(c.useCachedGroupMetadata=!0),a&&(c.ephemeralExpiration=a),o?c.messageId=o:c.messageId="3EB0"+(0,no.randomBytes)(18).toString("hex").toUpperCase(),e.viewOnceMessage){let u=(0,R.generateWAMessageFromContent)(t,e,{timestamp:new Date,userJid:this.instance.wuid,messageId:o,quoted:n}),d=await this.client.relayMessage(t,e,{messageId:o});u.key={id:d,remoteJid:t,participant:(0,R.isJidUser)(t)?t:void 0,fromMe:!0};for(let[l,g]of Object.entries(u))(!g||((0,Z.isArray)(g)&&g.length)===0)&&delete u[l];return u}if(!e.audio&&!e.poll&&!e.sticker&&!e.conversation&&t!=="status@broadcast"&&e.reactionMessage)return await this.client.sendMessage(t,{react:{text:e.reactionMessage.text,key:e.reactionMessage.key}},c);if(e.conversation)return await this.client.sendMessage(t,{text:e.conversation,mentions:s,linkPreview:r},c);if(!e.audio&&!e.poll&&!e.sticker&&t!="status@broadcast")return await this.client.sendMessage(t,{forward:{key:{remoteJid:this.instance.wuid,fromMe:!0},message:e},mentions:s},c);if(t==="status@broadcast"){let u;e.status.option.allContacts?u=(await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{not:{endsWith:"@g.us"}}}})).map(b=>b.remoteJid):u=e.status.option.statusJidList;let d=10,l=Array.from({length:Math.ceil(u.length/d)},(f,b)=>u.slice(b*d,b*d+d)),g=null,y,m=l.shift();return m&&(y=await this.client.sendMessage(t,e.status.content,{backgroundColor:e.status.option.backgroundColor,font:e.status.option.font,statusJidList:m}),g=y.key.id),l.length===0||await Promise.allSettled(l.map(async f=>await this.client.sendMessage(t,e.status.content,{backgroundColor:e.status.option.backgroundColor,font:e.status.option.font,statusJidList:f,messageId:g}))),y}return await this.client.sendMessage(t,e,c)}async sendMessageWithTyping(t,e,s,r=!1){let n=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!n.exists&&!(0,R.isJidGroup)(n.jid)&&!n.jid.includes("@broadcast"))throw new h(n);let o=n.jid.toLowerCase();this.logger.verbose(`Sending message to ${o}`);try{if(s?.delay)if(this.logger.verbose(`Typing for ${s.delay}ms to ${o}`),s.delay>2e4){let y=s.delay;for(;y>2e4;)await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(2e4),await this.client.sendPresenceUpdate("paused",o),y-=2e4;y>0&&(await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(y),await this.client.sendPresenceUpdate("paused",o))}else await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(s.presence??"composing",o),await(0,R.delay)(s.delay),await this.client.sendPresenceUpdate("paused",o);let a=s?.linkPreview!=!1?void 0:!1,c;if(s?.quoted){let y=s?.quoted,m=y?.message?y:await this.getMessage(y.key,!0);m&&(c=m)}let u,d;if((0,R.isJidGroup)(o)){let y;try{let m=this.configService.get("CACHE");!m.REDIS.ENABLED&&!m.LOCAL.ENABLED?y=await this.findGroup({groupJid:o},"inner"):y=await this.getGroupMetadataCache(o)}catch{throw new W("Group not found")}if(!y)throw new W("Group not found");s?.mentionsEveryOne?d=y.participants.map(m=>m.id):s.mentioned?.length&&(d=s.mentioned.map(m=>{let f=this.createJid(m);return(0,R.isJidGroup)(f)?null:f})),u=await this.sendMessage(o,e,d,a,c,null,y?.ephemeralDuration)}else u=await this.sendMessage(o,e,d,a,c);Ss.default.isLong(u?.messageTimestamp)&&(u.messageTimestamp=u.messageTimestamp?.toNumber());let l=this.prepareMessage(u),g=u?.message?.imageMessage||u?.message?.videoMessage||u?.message?.stickerMessage||u?.message?.ptvMessage||u?.message?.documentMessage||u?.message?.documentWithCaptionMessage||u?.message?.ptvMessage||u?.message?.audioMessage;if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!r&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},l),this.configService.get("OPENAI").ENABLED&&l?.message?.audioMessage){let y=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});y&&y.openaiCredsId&&y.speechToText&&(l.message.speechToText=await this.openaiService.speechToText(y.OpenaiCreds,l,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let y=await this.prismaRepository.message.create({data:l});if(g&&this.configService.get("S3").ENABLE)try{let m=l,f=await this.getBase64FromMediaMessage({message:m},!0),{buffer:b,mediaType:S,fileName:w,size:I}=f,E=Et.default.getType(w).toString(),M=(0,Es.join)(`${this.instance.id}`,l.key.remoteJid,`${l.key.id}`,S,w);await yt(M,b,I.fileLength?.low,{"Content-Type":E}),await this.prismaRepository.media.create({data:{messageId:y.id,instanceId:this.instanceId,type:S,fileName:M,mimetype:E}});let O=await qe(M);l.message.mediaUrl=O,await this.prismaRepository.message.update({where:{id:y.id},data:l})}catch(m){this.logger.error(["Error on upload file to minio",m?.message,m?.stack])}}if(this.localWebhook.enabled&&g&&this.localWebhook.webhookBase64){let y=await(0,R.downloadMediaMessage)({key:l.key,message:l?.message},"buffer",{},{logger:(0,st.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage});l.message.base64=y?y.toString("base64"):void 0}return this.logger.log(l),this.sendDataWebhook("send.message",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&r&&await De.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:l.key.remoteJid,msg:l,pushName:l.pushName,isIntegration:r}),l}catch(a){throw this.logger.error(a),new h(a.toString())}}async sendPresence(t){try{let{number:e}=t,s=(await this.whatsappNumber({numbers:[e]}))?.shift();if(!s.exists&&!(0,R.isJidGroup)(s.jid)&&!s.jid.includes("@broadcast"))throw new h(s);let r=s.jid;if(t?.delay&&t?.delay>2e4){let n=t?.delay;for(;n>2e4;)await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(t?.presence??"composing",r),await(0,R.delay)(2e4),await this.client.sendPresenceUpdate("paused",r),n-=2e4;n>0&&(await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(t?.presence??"composing",r),await(0,R.delay)(n),await this.client.sendPresenceUpdate("paused",r))}else await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(t?.presence??"composing",r),await(0,R.delay)(t?.delay),await this.client.sendPresenceUpdate("paused",r);return{presence:t.presence}}catch(e){throw this.logger.error(e),new h(e.toString())}}async setPresence(t){try{return await this.client.sendPresenceUpdate(t.presence),{presence:t.presence}}catch(e){throw this.logger.error(e),new h(e.toString())}}async textMessage(t,e=!1){let s=t.text;if(!s||s.trim().length===0)throw new h("Text is required");return await this.sendMessageWithTyping(t.number,{conversation:t.text},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},e)}async pollMessage(t){return await this.sendMessageWithTyping(t.number,{poll:{name:t.name,selectableCount:t.selectableCount,values:t.values}},{delay:t?.delay,presence:"composing",quoted:t?.quoted,linkPreview:t?.linkPreview,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async formatStatusMessage(t){if(!t.type)throw new h("Type is required");if(!t.content)throw new h("Content is required");if(t.allContacts){let e=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId}});if(!e.length)throw new h("Contacts not found");t.statusJidList=e.filter(s=>s.pushName).map(s=>s.remoteJid)}if(!t.statusJidList?.length&&!t.allContacts)throw new h("StatusJidList is required");if(t.type==="text"){if(!t.backgroundColor)throw new h("Background color is required");if(!t.font)throw new h("Font is required");return{content:{text:t.content},option:{backgroundColor:t.backgroundColor,font:t.font,statusJidList:t.statusJidList}}}if(t.type==="image")return{content:{image:{url:t.content},caption:t.caption},option:{statusJidList:t.statusJidList}};if(t.type==="video")return{content:{video:{url:t.content},caption:t.caption},option:{statusJidList:t.statusJidList}};if(t.type==="audio"){let e=await this.processAudioMp4(t.content);if(Buffer.isBuffer(e))return{content:{audio:e,ptt:!0,mimetype:"audio/ogg; codecs=opus"},option:{statusJidList:t.statusJidList}};throw new F(e)}throw new h("Type not found")}async statusMessage(t,e){let s={...t};e&&(s.content=e.buffer.toString("base64"));let r=await this.formatStatusMessage(s);return await this.sendMessageWithTyping("status@broadcast",{status:r})}async prepareMediaMessage(t){try{let e=t.mediatype==="ptv"?"video":t.mediatype,s=await(0,R.prepareWAMessageMedia)({[e]:(0,Z.isURL)(t.media)?{url:t.media}:Buffer.from(t.media,"base64")},{upload:this.client.waUploadToServer}),r=t.mediatype+"Message";if(t.mediatype==="document"&&!t.fileName){let a=new RegExp(/.*\/(.+?)\./).exec(t.media);t.fileName=a[1]}t.mediatype==="image"&&!t.fileName&&(t.fileName="image.png"),t.mediatype==="video"&&!t.fileName&&(t.fileName="video.mp4");let n;if(t.mimetype)n=t.mimetype;else if(n=Et.default.getType(t.fileName),!n&&(0,Z.isURL)(t.media)){let o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),n=(await Pe.default.get(t.media,o)).headers["content-type"]}if(t.mediatype==="ptv"){if(s[r]=s[e+"Message"],n="video/mp4",!s[r])throw new Error("Failed to prepare video message");try{let o;if((0,Z.isURL)(t.media))o=t.media;else{let c=Buffer.from(t.media,"base64");if(!c||c.length===0)throw new Error("Invalid media buffer");o=c}let a=await rp(o);if(!a||a<=0)throw new Error("Invalid media duration");this.logger.verbose(`Video duration: ${a} seconds`),s[r].seconds=a}catch(o){throw this.logger.error("Error getting video duration:"),this.logger.error(o),new Error(`Failed to get video duration: ${o.message}`)}}return s[r].caption=t?.caption,s[r].mimetype=n,s[r].fileName=t.fileName,t.mediatype==="video"&&(s[r].jpegThumbnail=Uint8Array.from((0,oo.readFileSync)((0,Es.join)(process.cwd(),"public","images","video-cover.png"))),s[r].gifPlayback=!1),(0,R.generateWAMessageFromContent)("",{[r]:{...s[r]}},{userJid:this.instance.wuid})}catch(e){throw this.logger.error(e),new F(e?.toString()||e)}}async convertToWebP(t){try{let e;if((0,Z.isBase64)(t)){let r=t.replace(/^data:image\/(jpeg|png|gif);base64,/,"");e=Buffer.from(r,"base64")}else{let r=new Date().getTime(),n=`${t}?timestamp=${r}`,o={responseType:"arraybuffer"};this.localProxy?.enabled&&(o={...o,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})});let a=await Pe.default.get(n,o);e=Buffer.from(a.data,"binary")}return await(0,uo.default)(e).webp().toBuffer()}catch(e){throw console.error("Erro ao converter a imagem para WebP:",e),e}}async mediaSticker(t,e){let s={...t};e&&(s.sticker=e.buffer.toString("base64"));let r=await this.convertToWebP(t.sticker),n=t.sticker.includes(".gif");return await this.sendMessageWithTyping(t.number,{sticker:r,gifPlayback:n},{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async mediaMessage(t,e,s=!1){let r={...t};e&&(r.media=e.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(t.number,{...n.message},{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async ptvMessage(t,e,s=!1){let r={number:t.number,media:t.video,mediatype:"ptv",delay:t?.delay,quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned};e&&(r.media=e.buffer.toString("base64"));let n=await this.prepareMediaMessage(r);return await this.sendMessageWithTyping(t.number,{...n.message},{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned},s)}async processAudioMp4(t){let e;if((0,Z.isURL)(t))e=(await Pe.default.get(t,{responseType:"stream"})).data;else{let s=Buffer.from(t,"base64");e=new Ke.PassThrough,e.end(s)}return new Promise((s,r)=>{let n=(0,io.spawn)(Hn.default.path,["-i","pipe:0","-vn","-ab","128k","-ar","44100","-f","mp4","-movflags","frag_keyframe+empty_moov","pipe:1"]),o=[],a="";n.stdout.on("data",c=>{o.push(c)}),n.stderr.on("data",c=>{a+=c.toString(),this.logger.verbose(`ffmpeg stderr: ${c}`)}),n.on("error",c=>{console.error("Error in ffmpeg process",c),r(c)}),n.on("close",c=>{if(c===0){this.logger.verbose("Audio converted to mp4");let u=Buffer.concat(o);s(u)}else this.logger.error(`ffmpeg exited with code ${c}`),this.logger.error(`ffmpeg stderr: ${a}`),r(new Error(`ffmpeg exited with code ${c}: ${a}`))}),e.pipe(n.stdin),e.on("error",c=>{console.error("Error in inputStream",c),n.stdin.end(),r(c)})})}async processAudio(t){if(process.env.API_AUDIO_CONVERTER){this.logger.verbose("Using audio converter API");let e=new ro.default;(0,Z.isURL)(t)?e.append("url",t):e.append("base64",t);let{data:s}=await Pe.default.post(process.env.API_AUDIO_CONVERTER,e,{headers:{...e.getHeaders(),apikey:process.env.API_AUDIO_CONVERTER_KEY}});if(!s.audio)throw new F("Failed to convert audio");return this.logger.verbose("Audio converted"),Buffer.from(s.audio,"base64")}else{let e;if((0,Z.isURL)(t)){let s=new Date().getTime(),r=`${t}?timestamp=${s}`,n={responseType:"stream"};e=(await Pe.default.get(r,n)).data.pipe(new Ke.PassThrough)}else{let s=Buffer.from(t,"base64");e=new Ke.PassThrough,e.end(s)}return new Promise((s,r)=>{let n=new Ke.PassThrough,o=[];n.on("data",a=>o.push(a)),n.on("end",()=>{let a=Buffer.concat(o);s(a)}),n.on("error",a=>{console.log("error",a),r(a)}),Vn.default.setFfmpegPath(Hn.default.path),(0,Vn.default)(e).outputFormat("ogg").noVideo().audioCodec("libopus").addOutputOptions("-avoid_negative_ts make_zero").audioChannels(1).pipe(n,{end:!0}).on("error",function(a){console.log("error",a),r(a)})})}}async audioWhatsapp(t,e,s=!1){let r={...t};if(e?.buffer)r.audio=e.buffer.toString("base64");else if(!(0,Z.isURL)(t.audio)&&!(0,Z.isBase64)(t.audio))throw console.error("Invalid file or audio source"),new h("File buffer, URL, or base64 audio is required");if(!t?.encoding&&t?.encoding!==!1&&(t.encoding=!0),t?.encoding){let n=await this.processAudio(r.audio);if(Buffer.isBuffer(n))return this.sendMessageWithTyping(t.number,{audio:n,ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:t?.delay},s);throw new F("Failed to convert audio")}return await this.sendMessageWithTyping(t.number,{audio:(0,Z.isURL)(t.audio)?{url:t.audio}:Buffer.from(t.audio,"base64"),ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:t?.delay},s)}generateRandomId(t=11){let e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",s="";for(let r=0;r<t;r++)s+=e.charAt(Math.floor(Math.random()*e.length));return s}toJSONString(t){let e=r=>JSON.stringify(r);return{call:()=>e({display_text:t.displayText,phone_number:t.phoneNumber}),reply:()=>e({display_text:t.displayText,id:t.id}),copy:()=>e({display_text:t.displayText,copy_code:t.copyCode}),url:()=>e({display_text:t.displayText,url:t.url,merchant_url:t.url}),pix:()=>e({currency:t.currency,total_amount:{value:0,offset:100},reference_id:this.generateRandomId(),type:"physical-goods",order:{status:"pending",subtotal:{value:0,offset:100},order_type:"ORDER",items:[{name:"",amount:{value:0,offset:100},quantity:0,sale_amount:{value:0,offset:100}}]},payment_settings:[{type:"pix_static_code",pix_static_code:{merchant_name:t.name,key:t.key,key_type:this.mapKeyType.get(t.keyType)}}],share_payment_status:!1})}[t.type]?.()||""}async buttonMessage(t){if(t.buttons.length===0)throw new h("At least one button is required");let e=t.buttons.some(c=>c.type==="reply"),s=t.buttons.some(c=>c.type==="pix"),r=t.buttons.some(c=>c.type!=="reply"&&c.type!=="pix");if(e){if(t.buttons.length>3)throw new h("Maximum of 3 reply buttons allowed");if(r)throw new h("Reply buttons cannot be mixed with other button types")}if(s){if(t.buttons.length>1)throw new h("Only one PIX button is allowed");if(r)throw new h("PIX button cannot be mixed with other button types");let c={viewOnceMessage:{message:{interactiveMessage:{nativeFlowMessage:{buttons:[{name:this.mapType.get("pix"),buttonParamsJson:this.toJSONString(t.buttons[0])}],messageParamsJson:JSON.stringify({from:"api",templateId:(0,Is.v4)()})}}}}};return await this.sendMessageWithTyping(t.number,c,{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}let n=await(async()=>{if(t?.thumbnailUrl)return await this.prepareMediaMessage({mediatype:"image",media:t.thumbnailUrl})})(),o=t.buttons.map(c=>({name:this.mapType.get(c.type),buttonParamsJson:this.toJSONString(c)})),a={viewOnceMessage:{message:{interactiveMessage:{body:{text:(()=>{let c="*"+t.title+"*";return t?.description&&(c+=`

`,c+=t.description,c+=`
`),c})()},footer:{text:t?.footer},header:(()=>{if(n?.message?.imageMessage)return{hasMediaAttachment:!!n.message.imageMessage,imageMessage:n.message.imageMessage}})(),nativeFlowMessage:{buttons:o,messageParamsJson:JSON.stringify({from:"api",templateId:(0,Is.v4)()})}}}}};return await this.sendMessageWithTyping(t.number,a,{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async locationMessage(t){return await this.sendMessageWithTyping(t.number,{locationMessage:{degreesLatitude:t.latitude,degreesLongitude:t.longitude,name:t?.name,address:t?.address}},{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async listMessage(t){return await this.sendMessageWithTyping(t.number,{listMessage:{title:t.title,description:t.description,buttonText:t?.buttonText,footerText:t?.footerText,sections:t.sections,listType:2}},{delay:t?.delay,presence:"composing",quoted:t?.quoted,mentionsEveryOne:t?.mentionsEveryOne,mentioned:t?.mentioned})}async contactMessage(t){let e={},s=r=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${r.fullName}
FN:${r.fullName}
`;return r.organization&&(n+=`ORG:${r.organization};
`),r.email&&(n+=`EMAIL:${r.email}
`),r.url&&(n+=`URL:${r.url}
`),r.wuid||(r.wuid=this.createJid(r.phoneNumber)),n+=`item1.TEL;waid=${r.wuid}:${r.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return t.contact.length===1?e.contactMessage={displayName:t.contact[0].fullName,vcard:s(t.contact[0])}:e.contactsArrayMessage={displayName:`${t.contact.length} contacts`,contacts:t.contact.map(r=>({displayName:r.fullName,vcard:s(r)}))},await this.sendMessageWithTyping(t.number,{...e},{})}async reactionMessage(t){return await this.sendMessageWithTyping(t.key.remoteJid,{reactionMessage:{key:t.key,text:t.reaction}})}async whatsappNumber(t){let e={groups:[],broadcast:[],users:[]};t.numbers.forEach(l=>{let g=this.createJid(l);(0,R.isJidGroup)(g)?e.groups.push({number:l,jid:g}):g==="status@broadcast"?e.broadcast.push({number:l,jid:g}):e.users.push({number:l,jid:g})});let s=[];s.push(...e.broadcast.map(({jid:l,number:g})=>new et(l,!1,g)));let r=await Promise.all(e.groups.map(async({jid:l,number:g})=>{let y=await this.findGroup({groupJid:l},"inner");return y||new et(l,!1,g),new et(y.id,!!y?.id,g,y?.subject)}));s.push(...r);let n=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:e.users.map(({jid:l})=>l)}}}),o=e.users.map(({jid:l})=>l.replace("+","")),a=await zr(o),c=o.filter(l=>!a.some(g=>g.jidOptions.includes(l))),u=await this.client.onWhatsApp(...c),d=await Promise.all(e.users.map(async l=>{let g=null,y=a.find(f=>f.jidOptions.includes(l.jid.replace("+","")));if(y)return{exists:!0,jid:y.remoteJid,name:n.find(f=>f.remoteJid===y.remoteJid)?.pushName,number:l.number};if(l.number.startsWith("55")){let f=l.number.slice(4,5)==="9"&&l.number.length===13?l.number:`${l.number.slice(0,4)}9${l.number.slice(4)}`,b=l.number.length===12?l.number:l.number.slice(0,4)+l.number.slice(5);g=u.find(S=>S.jid===`${f}@s.whatsapp.net`||S.jid===`${b}@s.whatsapp.net`)}if(!g&&(l.number.startsWith("52")||l.number.startsWith("54"))){let f="";l.number.startsWith("52")&&(f=""),l.number.startsWith("54")&&(f="9");let b=l.number.slice(2,3)===f&&l.number.length===13?l.number:`${l.number.slice(0,2)}${f}${l.number.slice(2)}`,S=l.number.length===12?l.number:l.number.slice(0,2)+l.number.slice(3);g=u.find(w=>w.jid===`${b}@s.whatsapp.net`||w.jid===`${S}@s.whatsapp.net`)}g||(g=u.find(f=>f.jid===l.jid));let m=g?.jid||l.jid;return{exists:!!g?.exists,jid:m,name:n.find(f=>f.remoteJid===m)?.pushName,number:l.number}}));return await He(d.filter(l=>l.exists).map(l=>({remoteJid:l.jid}))),s.push(...d),s}async markMessageAsRead(t){try{let e=[];return t.readMessages.forEach(s=>{((0,R.isJidGroup)(s.remoteJid)||(0,R.isJidUser)(s.remoteJid))&&e.push({remoteJid:s.remoteJid,fromMe:s.fromMe,id:s.id})}),await this.client.readMessages(e),{message:"Read messages",read:"success"}}catch(e){throw new F("Read messages fail",e.toString())}}async getLastMessage(t){let e={key:{remoteJid:t},instanceId:this.instance.id},s=await this.prismaRepository.message.findMany({where:e,orderBy:{messageTimestamp:"desc"},take:1});if(s.length===0)throw new W("Messages not found");let r=s.pop();for(let n of s)n.messageTimestamp>=r.messageTimestamp&&(r=n);return r}async archiveChat(t){try{let e=t.lastMessage,s=t.chat;if(!e&&s?e=await this.getLastMessage(s):(e=t.lastMessage,e.messageTimestamp=e?.messageTimestamp??Date.now(),s=e?.key?.remoteJid),!e||Object.keys(e).length===0)throw new W("Last message not found");return await this.client.chatModify({archive:t.archive,lastMessages:[e]},this.createJid(s)),{chatId:s,archived:!0}}catch(e){throw new F({archived:!1,message:["An error occurred while archiving the chat. Open a calling.",e.toString()]})}}async markChatUnread(t){try{let e=t.lastMessage,s=t.chat;if(!e&&s?e=await this.getLastMessage(s):(e=t.lastMessage,e.messageTimestamp=e?.messageTimestamp??Date.now(),s=e?.key?.remoteJid),!e||Object.keys(e).length===0)throw new W("Last message not found");return await this.client.chatModify({markRead:!1,lastMessages:[e]},this.createJid(s)),{chatId:s,markedChatUnread:!0}}catch(e){throw new F({markedChatUnread:!1,message:["An error occurred while marked unread the chat. Open a calling.",e.toString()]})}}async deleteMessage(t){try{let e=await this.client.sendMessage(t.remoteJid,{delete:t});if(e){let s=e.message?.protocolMessage?.key?.id;if(s){let r=C.get("DATABASE").DELETE_DATA.LOGICAL_MESSAGE_DELETE,n=await this.prismaRepository.message.findUnique({where:{id:s}});if(r){if(!n)return e;let o=typeof n?.key=="object"&&n.key!==null?n.key:{};n=await this.prismaRepository.message.update({where:{id:s},data:{key:{...o,deleted:!0}}})}else await this.prismaRepository.message.deleteMany({where:{id:s}});this.sendDataWebhook("messages.delete",{id:n.id,instanceId:n.instanceId,key:n.key,messageType:n.messageType,status:n.status,source:n.source,messageTimestamp:n.messageTimestamp,pushName:n.pushName,participant:n.participant,message:n.message})}}return e}catch(e){throw new F("Error while deleting message for everyone",e?.toString())}}async getBase64FromMediaMessage(t,e=!1){try{let s=t?.message,r=t?.convertToMp4??!1,n=s?.message?s:await this.getMessage(s.key,!0);if(!n)throw"Message not found";for(let g of xr)n.message[g]&&(n.message=n.message[g].message);let o,a;for(let g of Pr)if(o=n.message[g],o){a=g;break}if(!o)throw"The message is not of the media type";typeof o.mediaKey=="object"&&(n.message=JSON.parse(JSON.stringify(n.message)));let c=await(0,R.downloadMediaMessage)({key:n?.key,message:n?.message},"buffer",{},{logger:(0,st.default)({level:"error"}),reuploadRequest:this.client.updateMediaMessage}),u=(0,R.getContentType)(n.message),d=Et.default.getExtension(o?.mimetype),l=o?.fileName||`${n.key.id}.${d}`||`${(0,Is.v4)()}.${d}`;if(r&&u==="audioMessage")try{let g=await this.processAudioMp4(c.toString("base64"));if(Buffer.isBuffer(g))return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:"audio/mp4",base64:g.toString("base64"),buffer:e?g:null}}catch(g){throw this.logger.error("Error converting audio to mp4:"),this.logger.error(g),new h("Failed to convert audio to MP4")}return{mediaType:a,fileName:l,caption:o.caption,size:{fileLength:o.fileLength,height:o.height,width:o.width},mimetype:o.mimetype,base64:c.toString("base64"),buffer:e?c:null}}catch(s){throw this.logger.error("Error processing media message:"),this.logger.error(s),new h(s.toString())}}async fetchPrivacySettings(){let t=await this.client.fetchPrivacySettings();return{readreceipts:t.readreceipts,profile:t.profile,status:t.status,online:t.online,last:t.last,groupadd:t.groupadd}}async updatePrivacySettings(t){try{return await this.client.updateReadReceiptsPrivacy(t.readreceipts),await this.client.updateProfilePicturePrivacy(t.profile),await this.client.updateStatusPrivacy(t.status),await this.client.updateOnlinePrivacy(t.online),await this.client.updateLastSeenPrivacy(t.last),await this.client.updateGroupsAddPrivacy(t.groupadd),this.reloadConnection(),{update:"success",data:{readreceipts:t.readreceipts,profile:t.profile,status:t.status,online:t.online,last:t.last,groupadd:t.groupadd}}}catch(e){throw new F("Error updating privacy settings",e.toString())}}async fetchBusinessProfile(t){try{let e=t?this.createJid(t):this.instance.wuid,s=await this.client.getBusinessProfile(e);return s?{isBusiness:!0,...s}:{isBusiness:!1,message:"Not is business profile",...(await this.whatsappNumber({numbers:[e]}))?.shift()}}catch(e){throw new F("Error updating profile name",e.toString())}}async updateProfileName(t){try{return await this.client.updateProfileName(t),{update:"success"}}catch(e){throw new F("Error updating profile name",e.toString())}}async updateProfileStatus(t){try{return await this.client.updateProfileStatus(t),{update:"success"}}catch(e){throw new F("Error updating profile status",e.toString())}}async updateProfilePicture(t){try{let e;if((0,Z.isURL)(t)){let s=new Date().getTime(),r=`${t}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),e=(await Pe.default.get(r,n)).data}else if((0,Z.isBase64)(t))e=Buffer.from(t,"base64");else throw new h('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(this.instance.wuid,e),this.reloadConnection(),{update:"success"}}catch(e){throw new F("Error updating profile picture",e.toString())}}async removeProfilePicture(){try{return await this.client.removeProfilePicture(this.instance.wuid),this.reloadConnection(),{update:"success"}}catch(t){throw new F("Error removing profile picture",t.toString())}}async blockUser(t){try{let{number:e}=t,s=(await this.whatsappNumber({numbers:[e]}))?.shift();if(!s.exists&&!(0,R.isJidGroup)(s.jid)&&!s.jid.includes("@broadcast"))throw new h(s);let r=s.jid;return await this.client.updateBlockStatus(r,t.status),{block:"success"}}catch(e){throw new F("Error blocking user",e.toString())}}async formatUpdateMessage(t){try{let e=await this.getMessage(t.key,!0);return e?.messageType==="conversation"||e?.messageType==="extendedTextMessage"?{text:t.text}:e?.messageType==="imageMessage"?{image:e?.message?.imageMessage,caption:t.text}:e?.messageType==="videoMessage"?{video:e?.message?.videoMessage,caption:t.text}:null}catch(e){throw this.logger.error(e),new h(e.toString())}}async updateMessage(t){let e=this.createJid(t.number),s=await this.formatUpdateMessage(t);if(!s)throw this.logger.error("Message not compatible"),new h("Message not compatible");try{return await this.client.sendMessage(e,{...s,edit:t.key})}catch(r){throw this.logger.error(r),new h(r.toString())}}async fetchLabels(){return(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).map(e=>({color:e.color,name:e.name,id:e.labelId,predefinedId:e.predefinedId}))}async handleLabel(t){let e=await this.whatsappNumber({numbers:[t.number]});if(e.length===0)throw new W("Number not found");let s=e[0];if(!s.exists)throw new W("Number is not on WhatsApp");try{if(t.action==="add")return await this.client.addChatLabel(s.jid,t.labelId),{numberJid:s.jid,labelId:t.labelId,add:!0};if(t.action==="remove")return await this.client.removeChatLabel(s.jid,t.labelId),{numberJid:s.jid,labelId:t.labelId,remove:!0}}catch(r){throw new h(`Unable to ${t.action} label to chat`,r.toString())}}async updateGroupMetadataCache(t){try{let e=await this.client.groupMetadata(t),s=this.configService.get("CACHE");return(s?.REDIS?.ENABLED&&s?.REDIS?.URI!==""||s?.LOCAL?.ENABLED)&&(this.logger.verbose(`Updating cache for group: ${t}`),await Gn.set(t,{timestamp:Date.now(),data:e})),e}catch(e){return this.logger.error(e),null}}async createGroup(t){try{let e=(await this.whatsappNumber({numbers:t.participants})).filter(n=>n.exists).map(n=>n.jid),{id:s}=await this.client.groupCreate(t.subject,e);return t?.description&&await this.client.groupUpdateDescription(s,t.description),t?.promoteParticipants&&await this.updateGParticipant({groupJid:s,action:"promote",participants:e}),await this.client.groupMetadata(s)}catch(e){throw this.logger.error(e),new F("Error creating group",e.toString())}}async updateGroupPicture(t){try{let e;if((0,Z.isURL)(t.image)){let s=new Date().getTime(),r=`${t.image}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Ee({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),e=(await Pe.default.get(r,n)).data}else if((0,Z.isBase64)(t.image))e=Buffer.from(t.image,"base64");else throw new h('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(t.groupJid,e),{update:"success"}}catch(e){throw new F("Error update group picture",e.toString())}}async updateGroupSubject(t){try{return await this.client.groupUpdateSubject(t.groupJid,t.subject),{update:"success"}}catch(e){throw new F("Error updating group subject",e.toString())}}async updateGroupDescription(t){try{return await this.client.groupUpdateDescription(t.groupJid,t.description),{update:"success"}}catch(e){throw new F("Error updating group description",e.toString())}}async findGroup(t,e="out"){try{let s=await this.client.groupMetadata(t.groupJid);if(!s)return this.logger.error("Group not found"),null;let r=await this.profilePicture(s.id);return{id:s.id,subject:s.subject,subjectOwner:s.subjectOwner,subjectTime:s.subjectTime,pictureUrl:r.profilePictureUrl,size:s.participants.length,creation:s.creation,owner:s.owner,desc:s.desc,descId:s.descId,restrict:s.restrict,announce:s.announce,participants:s.participants,isCommunity:s.isCommunity,isCommunityAnnounce:s.isCommunityAnnounce,linkedParent:s.linkedParent}}catch(s){if(e==="inner")return;throw new W("Error fetching group",s.toString())}}async fetchAllGroups(t){let e=Object.values(await this?.client?.groupFetchAllParticipating()),s=[];for(let r of e){let n=await this.profilePicture(r.id),o={id:r.id,subject:r.subject,subjectOwner:r.subjectOwner,subjectTime:r.subjectTime,pictureUrl:n?.profilePictureUrl,size:r.participants.length,creation:r.creation,owner:r.owner,desc:r.desc,descId:r.descId,restrict:r.restrict,announce:r.announce,isCommunity:r.isCommunity,isCommunityAnnounce:r.isCommunityAnnounce,linkedParent:r.linkedParent};t.getParticipants=="true"&&(o.participants=r.participants),s=[...s,o]}return s}async inviteCode(t){try{let e=await this.client.groupInviteCode(t.groupJid);return{inviteUrl:`https://chat.whatsapp.com/${e}`,inviteCode:e}}catch(e){throw new W("No invite code",e.toString())}}async inviteInfo(t){try{return await this.client.groupGetInviteInfo(t.inviteCode)}catch{throw new W("No invite info",t.inviteCode)}}async sendInvite(t){try{let s=(await this.inviteCode({groupJid:t.groupJid})).inviteUrl,r=t.numbers.map(c=>this.createJid(c)),a={conversation:`${t.description??""}

${s}`};for await(let c of r)await this.sendMessageWithTyping(c,a);return{send:!0,inviteUrl:s}}catch{throw new W("No send invite")}}async acceptInviteCode(t){try{return{accepted:!0,groupJid:await this.client.groupAcceptInvite(t.inviteCode)}}catch(e){throw new W("Accept invite error",e.toString())}}async revokeInviteCode(t){try{return{revoked:!0,inviteCode:await this.client.groupRevokeInvite(t.groupJid)}}catch(e){throw new W("Revoke error",e.toString())}}async findParticipants(t){try{let e=(await this.client.groupMetadata(t.groupJid)).participants,s=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:e.map(o=>o.id)}}}),r=e.map(o=>{let a=s.find(c=>c.remoteJid===o.id);return{...o,name:o.name??a?.pushName,imgUrl:o.imgUrl??a?.profilePicUrl}}),n=r.filter(o=>o.id.includes("@s.whatsapp"));return n&&await He(n.map(o=>({remoteJid:o.id}))),{participants:r}}catch(e){throw console.error(e),new W("No participants",e.toString())}}async updateGParticipant(t){try{let e=t.participants.map(r=>this.createJid(r));return{updateParticipants:await this.client.groupParticipantsUpdate(t.groupJid,e,t.action)}}catch(e){throw new h("Error updating participants",e.toString())}}async updateGSetting(t){try{return{updateSetting:await this.client.groupSettingUpdate(t.groupJid,t.action)}}catch(e){throw new h("Error updating setting",e.toString())}}async toggleEphemeral(t){try{return await this.client.groupToggleEphemeral(t.groupJid,t.expiration),{success:!0}}catch(e){throw new h("Error updating setting",e.toString())}}async leaveGroup(t){try{return await this.client.groupLeave(t.groupJid),{groupJid:t.groupJid,leave:!0}}catch(e){throw new h("Unable to leave the group",e.toString())}}async templateMessage(){throw new Error("Method not available in the Baileys service")}prepareMessage(t){let e=(0,R.getContentType)(t.message),s=t?.message[e],r={key:t.key,pushName:t.pushName,status:X[t.status],message:{...t.message},contextInfo:s?.contextInfo,messageType:e||"unknown",messageTimestamp:t.messageTimestamp,instanceId:this.instanceId,source:(0,R.getDevice)(t.key.id)};return!r.status&&t.key.fromMe===!1&&(r.status=X[3]),r.message.extendedTextMessage&&(r.messageType="conversation",r.message.conversation=r.message.extendedTextMessage.text,delete r.message.extendedTextMessage),r.message.documentWithCaptionMessage&&(r.messageType="documentMessage",r.message.documentMessage=r.message.documentWithCaptionMessage.message.documentMessage,delete r.message.documentWithCaptionMessage),r}async syncChatwootLostMessages(){if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let t=await this.findChatwoot(),e=r=>this.prepareMessage(r);this.chatwootService.syncLostMessages({instanceName:this.instance.name},t,e),ao.default.schedule("0,30 * * * *",async()=>{this.chatwootService.syncLostMessages({instanceName:this.instance.name},t,e)}).start()}}async updateMessagesReadedByTimestamp(t,e){if(e==null)return 0;let s=await this.prismaRepository.message.updateMany({where:{AND:[{key:{path:["remoteJid"],equals:t}},{key:{path:["fromMe"],equals:!1}},{messageTimestamp:{lte:e}},{OR:[{status:null},{status:X[3]}]}]},data:{status:X[4]}});return s?(s.count>0&&this.updateChatUnreadMessages(t),s.count):0}async updateChatUnreadMessages(t){let[e,s]=await Promise.all([this.prismaRepository.chat.findFirst({where:{remoteJid:t}}),this.prismaRepository.message.count({where:{AND:[{key:{path:["remoteJid"],equals:t}},{key:{path:["fromMe"],equals:!1}},{status:{equals:X[3]}}]}})]);return e&&e.unreadMessages!==s&&await this.prismaRepository.chat.update({where:{id:e.id},data:{unreadMessages:s}}),s}};var Fe=class{constructor(i,t){this.prisma=i,this.monitor=t}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}init(i,t){if(!i.token&&i.integration===P.WHATSAPP_BUSINESS)throw new h("token is required");return i.integration===P.WHATSAPP_BUSINESS?new is(t.configService,t.eventEmitter,t.prismaRepository,t.cache,t.chatwootCache,t.baileysCache,t.providerFiles):i.integration===P.EVOLUTION?new ts(t.configService,t.eventEmitter,t.prismaRepository,t.cache,t.chatwootCache,t.baileysCache,t.providerFiles):i.integration===P.WHATSAPP_BAILEYS?new Ms(t.configService,t.eventEmitter,t.prismaRepository,t.cache,t.chatwootCache,t.baileysCache,t.providerFiles):null}};var Ts=class extends Fe{constructor(t,e){super(t,e);this.logger=new T("EvolutionController")}async receiveWebhook(t){let e=t.numberId;if(!e){this.logger.error("WebhookService -> receiveWebhookEvolution -> numberId not found");return}let s=await this.prismaRepository.instance.findFirst({where:{number:e}});if(!s){this.logger.error("WebhookService -> receiveWebhook -> instance not found");return}return await this.waMonitor.waInstances[s.name].connectToWhatsapp(t),{status:"success"}}};var go=A(require("axios"));var Cs=class extends Fe{constructor(t,e){super(t,e);this.logger=new T("MetaController")}async receiveWebhook(t){if(t.object==="whatsapp_business_account"){if(t.entry[0]?.changes[0]?.field==="message_template_status_update"){let e=await this.prismaRepository.template.findFirst({where:{templateId:`${t.entry[0].changes[0].value.message_template_id}`}});if(!e){console.log("template not found");return}let{webhookUrl:s}=e;await go.default.post(s,t.entry[0].changes[0].value,{headers:{"Content-Type":"application/json"}});return}t.entry?.forEach(async e=>{let s=e.changes[0].value.metadata.phone_number_id;if(!s)return this.logger.error("WebhookService -> receiveWebhookMeta -> numberId not found"),{status:"success"};let r=await this.prismaRepository.instance.findFirst({where:{number:s}});return r?(await this.waMonitor.waInstances[r.name].connectToWhatsapp(t),{status:"success"}):(this.logger.error("WebhookService -> receiveWebhookMeta -> instance not found"),{status:"success"})})}return{status:"success"}}};function mo(p){return p.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}function ho(p,i){let t=i.split(" ").reduce((s,r)=>{let[n,...o]=r.split(":"),a=o.join(":");return s[n]||(s[n]=[]),s[n].push(a),s},{}),e=mo(p);return Object.entries(t).every(([s,r])=>r.some(n=>n.split(",").every(a=>{let c=mo(a);switch(s.toLowerCase()){case"contains":return e.includes(c);case"notcontains":return!e.includes(c);case"startswith":return e.startsWith(c);case"endswith":return e.endsWith(c);case"exact":return e===c;default:return!1}})))}var yo=async(p,i,t,e)=>{let s=await p.findFirst({where:{enabled:!0,triggerType:"all",instanceId:e}});if(s)return s;let r=await p.findMany({where:{enabled:!0,triggerType:"advanced",instanceId:e}});for(let m of r)if(ho(t,m.triggerValue))return m;let n=await p.findFirst({where:{enabled:!0,triggerType:"keyword",triggerOperator:"equals",triggerValue:t,instanceId:e}});if(n)return n;let o=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"regex",instanceId:e}}),a=null;for(let m of o)if(new RegExp(m.triggerValue).test(t)){a=m;break}if(a)return a;let c=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"startsWith",instanceId:e}}),u=null;for(let m of c)if(t.startsWith(m.triggerValue)){u=m;break}if(u)return u;let d=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"endsWith",instanceId:e}}),l=null;for(let m of d)if(t.endsWith(m.triggerValue)){l=m;break}if(l)return l;let g=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"contains",instanceId:e}}),y=null;for(let m of g)if(t.includes(m.triggerValue)){y=m;break}return y||null};var ae=class{constructor(i,t){this.logger=new T("ChatbotController");this.prisma=i,this.monitor=t}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}async emit({instance:i,remoteJid:t,msg:e,pushName:s,isIntegration:r=!1}){let n={instance:i,remoteJid:t,msg:e,pushName:s,isIntegration:r};await ue.emit(n),await ce.emit(n),await te.emit(n),await le.emit(n),await de.emit(n)}processDebounce(i,t,e,s,r){i[e]?(i[e].message+=`
${t}`,this.logger.log("message debounced: "+i[e].message),clearTimeout(i[e].timeoutId)):i[e]={message:t,timeoutId:null},i[e].timeoutId=setTimeout(()=>{let n=i[e].message;this.logger.log("Debounce complete. Processing message: "+n),delete i[e],r(n)},s*1e3)}checkIgnoreJids(i,t){if(i&&i.length>0){let e=!1,s=!1;return i.includes("@g.us")&&(e=!0),i.includes("@s.whatsapp.net")&&(s=!0),e&&t.endsWith("@g.us")?(this.logger.warn("Ignoring message from group: "+t),!0):s&&t.endsWith("@s.whatsapp.net")?(this.logger.warn("Ignoring message from contact: "+t),!0):i.includes(t)?(this.logger.warn("Ignoring message from jid: "+t),!0):!1}return!1}async getSession(i,t){let e=await this.prismaRepository.integrationSession.findFirst({where:{remoteJid:i,instanceId:t.instanceId},orderBy:{createdAt:"desc"}});if(e)if(e.status!=="closed"&&!e.botId){this.logger.warn("Session is already opened in another integration");return}else e.botId||(e=null);return e}async findBotTrigger(i,t,e,s,r){let n;if(r)n=await i.findFirst({where:{id:r.botId}});else if(n=await yo(i,t,e,s.instanceId),!n)return;return n}};var fo=require("class-validator"),vs=class{constructor(i,t,e){this.chatwootService=i;this.configService=t;this.prismaRepository=e}async createChatwoot(i,t){if(!this.configService.get("CHATWOOT").ENABLED)throw new h("Chatwoot is disabled");if(t?.enabled){if(!(0,fo.isURL)(t.url,{require_tld:!1}))throw new h("url is not valid");if(!t.accountId)throw new h("accountId is required");if(!t.token)throw new h("token is required");if(t.signMsg!==!0&&t.signMsg!==!1)throw new h("signMsg is required");t.signMsg===!1&&(t.signDelimiter=null)}(!t.nameInbox||t.nameInbox==="")&&(t.nameInbox=i.instanceName);let e=await this.chatwootService.create(i,t),s=this.configService.get("SERVER").URL;return{...e,webhook_url:`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async findChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)throw new h("Chatwoot is disabled");let t=await this.chatwootService.find(i),e=this.configService.get("SERVER").URL;return Object.keys(t||{}).length===0?{enabled:!1,url:"",accountId:"",token:"",signMsg:!1,nameInbox:"",webhook_url:""}:{...t,webhook_url:`${e}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async receiveWebhook(i,t){if(!this.configService.get("CHATWOOT").ENABLED)throw new h("Chatwoot is disabled");let e=new Re(new Ce(this.configService,Ae.name).getEngine());return new Ae(k,this.configService,this.prismaRepository,e).receiveWebhook(i,t)}};var As=class extends ae{constructor(t,e,s){super(e,s);this.difyService=t;this.logger=new T("DifyController");this.integrationEnabled=C.get("DIFY").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.dify,this.settingsRepository=this.prismaRepository.difySetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id);if(!e.expire||!e.keywordFinish||!e.delayMessage||!e.unknownMessage||!e.listeningFromMe||!e.stopBotFromMe||!e.keepOpen||!e.debounceTime||!e.ignoreJids||!e.splitMessages||!e.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(e.expire===void 0||e.expire===null)&&(e.expire=o.expire),(e.keywordFinish===void 0||e.keywordFinish===null)&&(e.keywordFinish=o.keywordFinish),(e.delayMessage===void 0||e.delayMessage===null)&&(e.delayMessage=o.delayMessage),(e.unknownMessage===void 0||e.unknownMessage===null)&&(e.unknownMessage=o.unknownMessage),(e.listeningFromMe===void 0||e.listeningFromMe===null)&&(e.listeningFromMe=o.listeningFromMe),(e.stopBotFromMe===void 0||e.stopBotFromMe===null)&&(e.stopBotFromMe=o.stopBotFromMe),(e.keepOpen===void 0||e.keepOpen===null)&&(e.keepOpen=o.keepOpen),(e.debounceTime===void 0||e.debounceTime===null)&&(e.debounceTime=o.debounceTime),(e.ignoreJids===void 0||e.ignoreJids===null)&&(e.ignoreJids=o.ignoreJids),(e.splitMessages===void 0||e.splitMessages===null)&&(e.splitMessages=o?.splitMessages??!1),(e.timePerChar===void 0||e.timePerChar===null)&&(e.timePerChar=o?.timePerChar??0),o||await this.settings(t,{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&e.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,botType:e.botType,apiUrl:e.apiUrl,apiKey:e.apiKey}}))throw new Error("Dify already exists");if(e.triggerType==="keyword"){if(!e.triggerOperator||!e.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(e.triggerType==="advanced"){if(!e.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:e?.enabled,description:e.description,botType:e.botType,apiUrl:e.apiUrl,apiKey:e.apiKey,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,instanceId:s,triggerType:e.triggerType,triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating dify")}}async findBot(t){if(!this.integrationEnabled)throw new h("Dify is disabled");let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:e}});return s.length?s:null}async fetchBot(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");return r}async updateBot(t,e,s){if(!this.integrationEnabled)throw new h("Dify is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:e}});if(!n)throw new Error("Dify not found");if(n.instanceId!==r)throw new Error("Dify not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:e},instanceId:r}}))throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:e},instanceId:r,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Dify already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:e},data:{enabled:s?.enabled,description:s.description,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating dify")}}async deleteBot(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Dify not found");if(r.instanceId!==s)throw new Error("Dify not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:e}}),await this.botRepository.delete({where:{id:e}}),{bot:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting dify bot")}}async settings(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,difyIdFallback:e.difyIdFallback,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,difyIdFallback:o.difyIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,difyIdFallback:e.difyIdFallback,ignoreJids:e.ignoreJids,instanceId:s,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,difyIdFallback:n.difyIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(t){if(!this.integrationEnabled)throw new h("Dify is disabled");try{let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,difyIdFallback:s.difyIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,difyIdFallback:"",fallback:null}}catch(e){throw this.logger.error(e),new Error("Error fetching default settings")}}async changeStatus(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=e.remoteJid,o=e.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...t,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...t,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(t,e,s){if(!this.integrationEnabled)throw new h("Dify is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:e}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?e:{not:null},type:"dify"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(t,e){if(!this.integrationEnabled)throw new h("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(e.action==="add"){if(n.includes(e.remoteJid))return{ignoreJids:n};n.push(e.remoteJid)}else n=n.filter(a=>a!==e.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:t,remoteJid:e,msg:s}){if(this.integrationEnabled)try{let r=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,e))return;let n=await this.getSession(e,t),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,t,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(E?.difyIdFallback)a=await this.botRepository.findFirst({where:{id:E.difyIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,y=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),y==null&&(y=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(y&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,e,f,async E=>{await this.difyService.processDify(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.difyService.processDify(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var Rs=class extends ae{constructor(t,e,s){super(e,s);this.evolutionBotService=t;this.logger=new T("EvolutionBotController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.evolutionBot,this.settingsRepository=this.prismaRepository.evolutionBotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id);if(!e.expire||!e.keywordFinish||!e.delayMessage||!e.unknownMessage||!e.listeningFromMe||!e.stopBotFromMe||!e.keepOpen||!e.debounceTime||!e.ignoreJids||!e.splitMessages||!e.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(e.expire===void 0||e.expire===null)&&(e.expire=o.expire),(e.keywordFinish===void 0||e.keywordFinish===null)&&(e.keywordFinish=o.keywordFinish),(e.delayMessage===void 0||e.delayMessage===null)&&(e.delayMessage=o.delayMessage),(e.unknownMessage===void 0||e.unknownMessage===null)&&(e.unknownMessage=o.unknownMessage),(e.listeningFromMe===void 0||e.listeningFromMe===null)&&(e.listeningFromMe=o.listeningFromMe),(e.stopBotFromMe===void 0||e.stopBotFromMe===null)&&(e.stopBotFromMe=o.stopBotFromMe),(e.keepOpen===void 0||e.keepOpen===null)&&(e.keepOpen=o.keepOpen),(e.debounceTime===void 0||e.debounceTime===null)&&(e.debounceTime=o.debounceTime),(e.ignoreJids===void 0||e.ignoreJids===null)&&(e.ignoreJids=o.ignoreJids),(e.splitMessages===void 0||e.splitMessages===null)&&(e.splitMessages=o?.splitMessages??!1),(e.timePerChar===void 0||e.timePerChar===null)&&(e.timePerChar=o?.timePerChar??0),o||await this.settings(t,{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&e.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:e.apiUrl,apiKey:e.apiKey}}))throw new Error("Dify already exists");if(e.triggerType==="keyword"){if(!e.triggerOperator||!e.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(e.triggerType==="advanced"){if(!e.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:e?.enabled,description:e.description,apiUrl:e.apiUrl,apiKey:e.apiKey,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,instanceId:s,triggerType:e.triggerType,triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(t){let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:e}});return s.length?s:null}async fetchBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(t,e,s){let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:e}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:e},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:e},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:e},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:e}}),await this.botRepository.delete({where:{id:e}}),{bot:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,botIdFallback:e.botIdFallback,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,botIdFallback:o.botIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,botIdFallback:e.botIdFallback,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,botIdFallback:n.botIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(t){try{let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,botIdFallback:s.botIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,botIdFallback:"",fallback:null}}catch(e){throw this.logger.error(e),new Error("Error fetching default settings")}}async changeStatus(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=e.remoteJid,o=e.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...t,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...t,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(t,e,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:e}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?e:{not:null},type:"evolution"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(e.action==="add"){if(n.includes(e.remoteJid))return{ignoreJids:n};n.push(e.remoteJid)}else n=n.filter(a=>a!==e.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:t,remoteJid:e,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,e))return;let n=await this.getSession(e,t),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,t,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(E?.botIdFallback)a=await this.botRepository.findFirst({where:{id:E.botIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,y=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),y==null&&(y=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(y&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,e,f,async E=>{await this.evolutionBotService.processBot(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.evolutionBotService.processBot(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var wo=A(require("axios")),Ds=class{constructor(i,t,e){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.logger=new T("EvolutionBotService")}async createNewSession(i,t){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName,sessionId:t.remoteJid,status:"opened",awaitUser:!1,botId:t.botId,instanceId:i.instanceId,type:"evolution"}})}}catch(e){this.logger.error(e);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,t,e,s,r,n){let o={inputs:{sessionId:t.id,remoteJid:s,pushName:r,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:n,conversation_id:t.sessionId===s?void 0:t.sessionId,user:s};if(this.isImageMessage(n)){let d=n.split("|");o.files=[{type:"image",url:d[1].split("?")[0]}],o.query=d[2]||n}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(s),await i.client.sendPresenceUpdate("composing",s));let a={"Content-Type":"application/json"};e.apiKey&&(a={...a,Authorization:`Bearer ${e.apiKey}`});let c=await wo.default.post(e.apiUrl,o,{headers:a});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",s),c?.data?.message}async sendMessageWhatsApp(i,t,e,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,M=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*M,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,y=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),y);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,t,e,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:t,pushName:o,botId:e.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,r,e,t,o,n);c&&await this.sendMessageWhatsApp(i,t,r,s,c)}async processBot(i,t,e,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}}),await this.initNewSession(i,t,e,r,s,n,o);return}}if(!s){await this.initNewSession(i,t,e,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:t.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}});return}let a=await this.sendMessageToBot(i,s,e,t,o,n);a&&await this.sendMessageWhatsApp(i,t,s,r,a)}};var Ps=class extends ae{constructor(t,e,s){super(e,s);this.flowiseService=t;this.logger=new T("FlowiseController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.flowise,this.settingsRepository=this.prismaRepository.flowiseSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id);if(!e.expire||!e.keywordFinish||!e.delayMessage||!e.unknownMessage||!e.listeningFromMe||!e.stopBotFromMe||!e.keepOpen||!e.debounceTime||!e.ignoreJids||!e.splitMessages||!e.timePerChar){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});(e.expire===void 0||e.expire===null)&&(e.expire=o.expire),(e.keywordFinish===void 0||e.keywordFinish===null)&&(e.keywordFinish=o.keywordFinish),(e.delayMessage===void 0||e.delayMessage===null)&&(e.delayMessage=o.delayMessage),(e.unknownMessage===void 0||e.unknownMessage===null)&&(e.unknownMessage=o.unknownMessage),(e.listeningFromMe===void 0||e.listeningFromMe===null)&&(e.listeningFromMe=o.listeningFromMe),(e.stopBotFromMe===void 0||e.stopBotFromMe===null)&&(e.stopBotFromMe=o.stopBotFromMe),(e.keepOpen===void 0||e.keepOpen===null)&&(e.keepOpen=o.keepOpen),(e.debounceTime===void 0||e.debounceTime===null)&&(e.debounceTime=o.debounceTime),(e.ignoreJids===void 0||e.ignoreJids===null)&&(e.ignoreJids=o.ignoreJids),(e.splitMessages===void 0||e.splitMessages===null)&&(e.splitMessages=o?.splitMessages??!1),(e.timePerChar===void 0||e.timePerChar===null)&&(e.timePerChar=o?.timePerChar??0),o||await this.settings(t,{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&e.triggerType==="all")throw new Error('You already have a Flowise with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:e.apiUrl,apiKey:e.apiKey}}))throw new Error("Flowise already exists");if(e.triggerType==="keyword"){if(!e.triggerOperator||!e.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(e.triggerType==="advanced"){if(!e.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:e?.enabled,description:e.description,apiUrl:e.apiUrl,apiKey:e.apiKey,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,instanceId:s,triggerType:e.triggerType,triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}})}catch(o){throw this.logger.error(o),new Error("Error creating bot")}}async findBot(t){let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:e}});return s.length?s:null}async fetchBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");return r}async updateBot(t,e,s){let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:e}});if(!n)throw new Error("Bot not found");if(n.instanceId!==r)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:e},instanceId:r}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:e},instanceId:r,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:e},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(t,e){let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Bot not found");if(r.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:e}}),await this.botRepository.delete({where:{id:e}}),{bot:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,flowiseIdFallback:e.flowiseIdFallback,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,flowiseIdFallback:o.flowiseIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,flowiseIdFallback:e.flowiseIdFallback,ignoreJids:e.ignoreJids,instanceId:s,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,flowiseIdFallback:n.flowiseIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(t){try{let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,flowiseIdFallback:s.flowiseIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,flowiseIdFallback:"",fallback:null}}catch(e){throw this.logger.error(e),new Error("Error fetching default settings")}}async changeStatus(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=e.remoteJid,o=e.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...t,bot:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{bot:{...t,bot:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(t,e,s){try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:e}});if(n&&n.instanceId!==r)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?e:{not:null},type:"flowise"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(t,e){try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(e.action==="add"){if(n.includes(e.remoteJid))return{ignoreJids:n};n.push(e.remoteJid)}else n=n.filter(a=>a!==e.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:t,remoteJid:e,msg:s}){try{let r=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(this.checkIgnoreJids(r?.ignoreJids,e))return;let n=await this.getSession(e,t),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,t,n);if(!a){let E=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(E?.flowiseIdFallback)a=await this.botRepository.findFirst({where:{id:E.flowiseIdFallback}});else return}let c=a?.expire,u=a?.keywordFinish,d=a?.delayMessage,l=a?.unknownMessage,g=a?.listeningFromMe,y=a?.stopBotFromMe,m=a?.keepOpen,f=a?.debounceTime,b=a?.ignoreJids,S=a?.splitMessages,w=a?.timePerChar;c==null&&(c=r.expire),u==null&&(u=r.keywordFinish),d==null&&(d=r.delayMessage),l==null&&(l=r.unknownMessage),g==null&&(g=r.listeningFromMe),y==null&&(y=r.stopBotFromMe),m==null&&(m=r.keepOpen),f==null&&(f=r.debounceTime),b==null&&(b=r.ignoreJids),S==null&&(S=r?.splitMessages??!1),w==null&&(w=r?.timePerChar??0);let I=s.key;if(y&&I.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&I.fromMe||n&&!n.awaitUser)return;f&&f>0?this.processDebounce(this.userMessageDebounce,o,e,f,async E=>{await this.flowiseService.processBot(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},E,s?.pushName)}):await this.flowiseService.processBot(this.waMonitor.waInstances[t.instanceName],e,a,n,{...r,expire:c,keywordFinish:u,delayMessage:d,unknownMessage:l,listeningFromMe:g,stopBotFromMe:y,keepOpen:m,debounceTime:f,ignoreJids:b,splitMessages:S,timePerChar:w},o,s?.pushName);return}catch(r){this.logger.error(r);return}}};var bo=A(require("axios")),xs=class{constructor(i,t,e){this.waMonitor=i;this.configService=t;this.prismaRepository=e;this.logger=new T("FlowiseService")}async createNewSession(i,t){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:t.remoteJid,pushName:t.pushName,sessionId:t.remoteJid,status:"opened",awaitUser:!1,botId:t.botId,instanceId:i.instanceId,type:"flowise"}})}}catch(e){this.logger.error(e);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,t,e,s,r){let n={question:r,overrideConfig:{sessionId:e,vars:{remoteJid:e,pushName:s,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY}}};if(this.isImageMessage(r)){let d=r.split("|");n.uploads=[{data:d[1].split("?")[0],type:"url",name:"Flowise.png",mime:"image/png"}],n.question=d[2]||r}i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e));let o={"Content-Type":"application/json"};t.apiKey&&(o={...o,Authorization:`Bearer ${t.apiKey}`});let a=t.apiUrl;if(!a)return null;let c=await bo.default.post(a,n,{headers:o});return i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e),c?.data?.text}async sendMessageWhatsApp(i,t,e,s,r){let n=/(!?)\[(.*?)\]\((.*?)\)/g,o="",a=0,c,u=m=>{let f=m.split(".").pop()?.toLowerCase(),b=["jpg","jpeg","png","gif","bmp","webp"],S=["mp3","wav","aac","ogg"],w=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return b.includes(f||"")?"image":S.includes(f||"")?"audio":w.includes(f||"")?"video":I.includes(f||"")?"document":null};for(;(c=n.exec(r))!==null;){let[m,f,b,S]=c,w=u(S),I=r.slice(a,c.index);if(I&&(o+=I),w){let E=s.splitMessages??!1,M=s.timePerChar??0,O=1e3,N=2e4;if(o.trim())if(E){let _=o.trim().split(`

`);for(let L=0;L<_.length;L++){let q=_[L],H=Math.min(Math.max(q.length*M,O),N);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(V=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:q},!1),V()},H)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";w==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:S,caption:b}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:w,media:S,caption:b},null,!1)}else o+=`[${b}](${S})`;a=n.lastIndex}if(a<r.length){let m=r.slice(a);m.trim()&&(o+=m)}let d=s.splitMessages??!1,l=s.timePerChar??0,g=1e3,y=2e4;if(o.trim())if(d){let m=o.trim().split(`

`);for(let f=0;f<m.length;f++){let b=m[f],S=Math.min(Math.max(b.length*l,g),y);i.integration===P.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(w=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:b},!1),w()},S)}),i.integration===P.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:o.trim()},!1),o="";$("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,t,e,s,r,n,o){let a=await this.createNewSession(i,{remoteJid:t,pushName:o,botId:e.id});a.session&&(r=a.session);let c=await this.sendMessageToBot(i,e,t,o,n);await this.sendMessageWhatsApp(i,t,r,s,c)}async processBot(i,t,e,s,r,n,o){if(s&&s.status!=="opened")return;if(s&&r.expire&&r.expire>0){let c=Date.now(),u=new Date(s.updatedAt).getTime(),d=c-u;if(Math.floor(d/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}}),await this.initNewSession(i,t,e,r,s,n,o);return}}if(!s){await this.initNewSession(i,t,e,r,s,n,o);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:t.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),$("/message/sendText"));return}if(r.keywordFinish&&n.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:e.id,remoteJid:t}});return}let a=await this.sendMessageToBot(i,e,t,o,n);await this.sendMessageWhatsApp(i,t,s,r,a)}};var So=A(require("openai"));var Os=class extends ae{constructor(t,e,s){super(e,s);this.openaiService=t;this.logger=new T("OpenaiController");this.integrationEnabled=C.get("OPENAI").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.openaiBot,this.settingsRepository=this.prismaRepository.openaiSetting,this.sessionRepository=this.prismaRepository.integrationSession,this.credsRepository=this.prismaRepository.openaiCreds}async createOpenaiCreds(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id);if(!e.apiKey)throw new Error("API Key is required");if(!e.name)throw new Error("Name is required");try{return await this.credsRepository.create({data:{name:e.name,apiKey:e.apiKey,instanceId:s}})}catch(r){throw this.logger.error(r),new Error("Error creating openai creds")}}async findOpenaiCreds(t){if(!this.integrationEnabled)throw new h("Openai is disabled");let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id);return await this.credsRepository.findMany({where:{instanceId:e},include:{OpenaiAssistant:!0}})}async deleteCreds(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.credsRepository.findFirst({where:{id:e}});if(!r)throw new Error("Openai Creds not found");if(r.instanceId!==s)throw new Error("Openai Creds not found");try{return await this.credsRepository.delete({where:{id:e}}),{openaiCreds:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai creds")}}async getModels(t){if(!this.integrationEnabled)throw new h("Openai is disabled");let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id);if(!e)throw new Error("Instance not found");let s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{OpenaiCreds:!0}});if(!s)throw new Error("Settings not found");let{apiKey:r}=s.OpenaiCreds;try{return this.client=new So.default({apiKey:r}),(await this.client.models.list())?.body?.data}catch(n){throw this.logger.error(n),new Error("Error fetching models")}}async createBot(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id);if(!e.openaiCredsId||!e.expire||!e.keywordFinish||!e.delayMessage||!e.unknownMessage||!e.listeningFromMe||!e.stopBotFromMe||!e.keepOpen||!e.debounceTime||!e.ignoreJids||!e.splitMessages||!e.timePerChar){let a=await this.settingsRepository.findFirst({where:{instanceId:s}});if((e.expire===void 0||e.expire===null)&&(e.expire=a.expire),(e.keywordFinish===void 0||e.keywordFinish===null)&&(e.keywordFinish=a.keywordFinish),(e.delayMessage===void 0||e.delayMessage===null)&&(e.delayMessage=a.delayMessage),(e.unknownMessage===void 0||e.unknownMessage===null)&&(e.unknownMessage=a.unknownMessage),(e.listeningFromMe===void 0||e.listeningFromMe===null)&&(e.listeningFromMe=a.listeningFromMe),(e.stopBotFromMe===void 0||e.stopBotFromMe===null)&&(e.stopBotFromMe=a.stopBotFromMe),(e.keepOpen===void 0||e.keepOpen===null)&&(e.keepOpen=a.keepOpen),(e.debounceTime===void 0||e.debounceTime===null)&&(e.debounceTime=a.debounceTime),(e.ignoreJids===void 0||e.ignoreJids===null)&&(e.ignoreJids=a.ignoreJids),(e.splitMessages===void 0||e.splitMessages===null)&&(e.splitMessages=a?.splitMessages??!1),(e.timePerChar===void 0||e.timePerChar===null)&&(e.timePerChar=a?.timePerChar??0),!e.openaiCredsId)throw new Error("Openai Creds Id is required");a||await this.settings(t,{openaiCredsId:e.openaiCredsId,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&e.triggerType==="all")throw new Error('You already have a openai with an "All" trigger, you cannot have more bots while it is active');let n={instanceId:s};if(e.botType==="assistant"){if(!e.assistantId)throw new Error("Assistant ID is required");n={...n,assistantId:e.assistantId,botType:e.botType}}else if(e.botType==="chatCompletion"){if(!e.model)throw new Error("Model is required");if(!e.maxTokens)throw new Error("Max tokens is required");n={...n,model:e.model,maxTokens:e.maxTokens,botType:e.botType}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:n}))throw new Error("Openai Bot already exists");if(e.triggerType==="keyword"){if(!e.triggerOperator||!e.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(e.triggerType==="advanced"){if(!e.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:e?.enabled,description:e.description,openaiCredsId:e.openaiCredsId,botType:e.botType,assistantId:e.assistantId,functionUrl:e.functionUrl,model:e.model,systemMessages:e.systemMessages,assistantMessages:e.assistantMessages,userMessages:e.userMessages,maxTokens:e.maxTokens,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,instanceId:s,triggerType:e.triggerType,triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error creating openai bot")}}async findBot(t){if(!this.integrationEnabled)throw new h("Openai is disabled");let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:e}});return s.length?s:null}async fetchBot(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Openai Bot not found");if(r.instanceId!==s)throw new Error("Openai Bot not found");return r}async updateBot(t,e,s){if(!this.integrationEnabled)throw new h("Openai is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(c=>c.id),n=await this.botRepository.findFirst({where:{id:e}});if(!n)throw new Error("Openai Bot not found");if(n.instanceId!==r)throw new Error("Openai Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:e},instanceId:r}}))throw new Error('You already have a openai bot with an "All" trigger, you cannot have more bots while it is active');let o={id:{not:e},instanceId:r};if(s.botType==="assistant"){if(!s.assistantId)throw new Error("Assistant ID is required");o={...o,assistantId:s.assistantId}}else if(s.botType==="chatCompletion"){if(!s.model)throw new Error("Model is required");if(!s.maxTokens)throw new Error("Max tokens is required");o={...o,model:s.model,maxTokens:s.maxTokens}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:o}))throw new Error("Openai Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:e},data:{enabled:s?.enabled,description:s.description,openaiCredsId:s.openaiCredsId,botType:s.botType,assistantId:s.assistantId,functionUrl:s.functionUrl,model:s.model,systemMessages:s.systemMessages,assistantMessages:s.assistantMessages,userMessages:s.userMessages,maxTokens:s.maxTokens,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:r,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(c){throw this.logger.error(c),new Error("Error updating openai bot")}}async deleteBot(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Openai bot not found");if(r.instanceId!==s)throw new Error("Openai bot not found");try{return await this.sessionRepository.deleteMany({where:{botId:e}}),await this.botRepository.delete({where:{id:e}}),{bot:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai bot")}}async settings(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{openaiCredsId:e.openaiCredsId,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,speechToText:e.speechToText,openaiIdFallback:e.openaiIdFallback,ignoreJids:e.ignoreJids,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{openaiCredsId:o.openaiCredsId,expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,speechToText:o.speechToText,openaiIdFallback:o.openaiIdFallback,ignoreJids:o.ignoreJids,splitMessages:o.splitMessages,timePerChar:o.timePerChar}}let n=await this.settingsRepository.create({data:{openaiCredsId:e.openaiCredsId,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,openaiIdFallback:e.openaiIdFallback,ignoreJids:e.ignoreJids,speechToText:e.speechToText,instanceId:s,splitMessages:e.splitMessages,timePerChar:e.timePerChar}});return{openaiCredsId:n.openaiCredsId,expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,openaiIdFallback:n.openaiIdFallback,ignoreJids:n.ignoreJids,speechToText:n.speechToText,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(t){if(!this.integrationEnabled)throw new h("Openai is disabled");try{let e=(await this.prismaRepository.instance.findFirst({select:{id:!0},where:{name:t.instanceName}}))?.id,s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{Fallback:!0}});return s?{openaiCredsId:s.openaiCredsId,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,openaiIdFallback:s.openaiIdFallback,speechToText:s.speechToText,fallback:s.Fallback}:{openaiCredsId:null,expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,openaiIdFallback:null,speechToText:!1,fallback:null}}catch(e){throw this.logger.error(e),new Error("Error fetching default settings")}}async changeStatus(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=e.remoteJid,o=e.status;if(o==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{openai:{remoteJid:n,status:o}};if(o==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null},status:{not:"closed"}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n}}),{openai:{...t,openai:{remoteJid:n,status:o}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:o}});return{openai:{...t,openai:{remoteJid:n,status:o,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(t,e,s){if(!this.integrationEnabled)throw new h("Openai is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:e}});if(n&&n.instanceId!==r)throw new Error("Openai Bot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:n?e:{not:null},type:"openai"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(t,e){if(!this.integrationEnabled)throw new h("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(e.action==="add"){if(n.includes(e.remoteJid))return{ignoreJids:n};n.push(e.remoteJid)}else n=n.filter(a=>a!==e.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:t,remoteJid:e,msg:s,pushName:r}){if(this.integrationEnabled)try{let n=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(this.checkIgnoreJids(n?.ignoreJids,e))return;let o=await this.getSession(e,t),a=he(s),c=await this.findBotTrigger(this.botRepository,this.settingsRepository,a,t,o);if(!c){let M=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(M?.openaiIdFallback)c=await this.botRepository.findFirst({where:{id:M.openaiIdFallback}});else return}let u=c?.expire,d=c?.keywordFinish,l=c?.delayMessage,g=c?.unknownMessage,y=c?.listeningFromMe,m=c?.stopBotFromMe,f=c?.keepOpen,b=c?.debounceTime,S=c?.ignoreJids,w=c?.splitMessages,I=c?.timePerChar;u==null&&(u=n.expire),d==null&&(d=n.keywordFinish),l==null&&(l=n.delayMessage),g==null&&(g=n.unknownMessage),y==null&&(y=n.listeningFromMe),m==null&&(m=n.stopBotFromMe),f==null&&(f=n.keepOpen),b==null&&(b=n.debounceTime),S==null&&(S=n.ignoreJids),w==null&&(w=n?.splitMessages??!1),I==null&&(I=n?.timePerChar??0);let E=s.key;if(m&&E.fromMe&&o&&(o=await this.sessionRepository.update({where:{id:o.id},data:{status:"paused"}})),!y&&E.fromMe||o&&!o.awaitUser)return;b&&b>0?this.processDebounce(this.userMessageDebounce,a,e,b,async M=>{c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[t.instanceName],e,r,E.fromMe,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:y,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:I},M),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[t.instanceName],e,r,c,o,{...n,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:y,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S,splitMessages:w,timePerChar:I},M)}):(c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[t.instanceName],e,r,E.fromMe,c,o,n,a),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[t.instanceName],e,r,c,o,n,a));return}catch(n){this.logger.error(n);return}}};var Eo=A(require("axios"));var _s=class extends ae{constructor(t,e,s){super(e,s);this.typebotService=t;this.logger=new T("TypebotController");this.integrationEnabled=C.get("TYPEBOT").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.typebot,this.settingsRepository=this.prismaRepository.typebotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id);if(!e.expire||!e.keywordFinish||!e.delayMessage||!e.unknownMessage||!e.listeningFromMe||!e.stopBotFromMe||!e.keepOpen||!e.debounceTime||!e.ignoreJids){let o=await this.settingsRepository.findFirst({where:{instanceId:s}});e.expire||(e.expire=o?.expire||0),e.keywordFinish||(e.keywordFinish=o?.keywordFinish||"#SAIR"),e.delayMessage||(e.delayMessage=o?.delayMessage||1e3),e.unknownMessage||(e.unknownMessage=o?.unknownMessage||"Desculpe, n\xE3o entendi"),e.listeningFromMe||(e.listeningFromMe=o?.listeningFromMe||!1),e.stopBotFromMe||(e.stopBotFromMe=o?.stopBotFromMe||!1),e.keepOpen||(e.keepOpen=o?.keepOpen||!1),e.debounceTime||(e.debounceTime=o?.debounceTime||0),e.ignoreJids||(e.ignoreJids=o?.ignoreJids||[]),o||await this.settings(t,{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,ignoreJids:e.ignoreJids})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&e.triggerType==="all")throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:e.url,typebot:e.typebot,instanceId:s}}))throw new Error("Typebot already exists");if(e.triggerType==="keyword"){if(!e.triggerOperator||!e.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(e.triggerType==="advanced"){if(!e.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:e.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:e?.enabled,description:e.description,url:e.url,typebot:e.typebot,expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,instanceId:s,triggerType:e.triggerType,triggerOperator:e.triggerOperator,triggerValue:e.triggerValue,ignoreJids:e.ignoreJids}})}catch(o){throw this.logger.error(o),new Error("Error creating typebot")}}async findBot(t){if(!this.integrationEnabled)throw new h("Typebot is disabled");let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.botRepository.findMany({where:{instanceId:e}});return s.length?s:null}async fetchBot(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");return r}async updateBot(t,e,s){if(!this.integrationEnabled)throw new h("Typebot is disabled");let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:e}});if(!n)throw new Error("Typebot not found");if(n.instanceId!==r)throw new Error("Typebot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:e},instanceId:r}}))throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:s.url,typebot:s.typebot,id:{not:e},instanceId:r}}))throw new Error("Typebot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:e},instanceId:r}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:e},data:{enabled:s?.enabled,description:s.description,url:s.url,typebot:s.typebot,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids}})}catch(a){throw this.logger.error(a),new Error("Error updating typebot")}}async deleteBot(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(n=>n.id),r=await this.botRepository.findFirst({where:{id:e}});if(!r)throw new Error("Typebot not found");if(r.instanceId!==s)throw new Error("Typebot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:e}}),await this.botRepository.delete({where:{id:e}}),{typebot:{id:e}}}catch(n){throw this.logger.error(n),new Error("Error deleting typebot")}}async settings(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(r){let o=await this.settingsRepository.update({where:{id:r.id},data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,typebotIdFallback:e.typebotIdFallback,ignoreJids:e.ignoreJids}});return{expire:o.expire,keywordFinish:o.keywordFinish,delayMessage:o.delayMessage,unknownMessage:o.unknownMessage,listeningFromMe:o.listeningFromMe,stopBotFromMe:o.stopBotFromMe,keepOpen:o.keepOpen,debounceTime:o.debounceTime,typebotIdFallback:o.typebotIdFallback,ignoreJids:o.ignoreJids}}let n=await this.settingsRepository.create({data:{expire:e.expire,keywordFinish:e.keywordFinish,delayMessage:e.delayMessage,unknownMessage:e.unknownMessage,listeningFromMe:e.listeningFromMe,stopBotFromMe:e.stopBotFromMe,keepOpen:e.keepOpen,debounceTime:e.debounceTime,typebotIdFallback:e.typebotIdFallback,ignoreJids:e.ignoreJids,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,typebotIdFallback:n.typebotIdFallback,ignoreJids:n.ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(t){if(!this.integrationEnabled)throw new h("Typebot is disabled");try{let e=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(r=>r.id),s=await this.settingsRepository.findFirst({where:{instanceId:e},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,typebotIdFallback:s.typebotIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],typebotIdFallback:null,fallback:null}}catch(e){throw this.logger.error(e),new Error("Error fetching default settings")}}async startBot(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");if(e.remoteJid==="status@broadcast")return;let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}});if(!s)throw new Error("Instance not found");let r=e.remoteJid,n=e.url,o=e.typebot,a=e.startSession,c=e.variables,u=e?.typebot?.expire,d=e?.typebot?.keywordFinish,l=e?.typebot?.delayMessage,g=e?.typebot?.unknownMessage,y=e?.typebot?.listeningFromMe,m=e?.typebot?.stopBotFromMe,f=e?.typebot?.keepOpen,b=e?.typebot?.debounceTime,S=e?.typebot?.ignoreJids,w=await this.settingsRepository.findFirst({where:{instanceId:s.id}});if(this.checkIgnoreJids(w?.ignoreJids,r))throw new Error("Jid not allowed");(!u||!d||!l||!g||!y||!m||!f||!b||!S)&&(u==null&&(u=w.expire),d==null&&(d=w.keywordFinish),l==null&&(l=w.delayMessage),g==null&&(g=w.unknownMessage),y==null&&(y=w.listeningFromMe),m==null&&(m=w.stopBotFromMe),f==null&&(f=w.keepOpen),b==null&&(b=w.debounceTime),S==null&&(S=w.ignoreJids),w||await this.settings(t,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:y,stopBotFromMe:m,keepOpen:f,debounceTime:b,ignoreJids:S}));let I={};if(c?.length&&c.forEach(E=>{I[E.name]=E.value}),a){let E=await this.botRepository.findFirst({where:{url:n,typebot:o,instanceId:s.id}});E||(E=await this.botRepository.create({data:{enabled:!0,url:n,typebot:o,instanceId:s.id,expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:y,stopBotFromMe:m,keepOpen:f}})),await this.prismaRepository.integrationSession.deleteMany({where:{remoteJid:r,instanceId:s.id,botId:{not:null}}}),await this.typebotService.processTypebot(s,r,null,null,E,n,u,o,d,l,g,y,m,f,"init",I)}else{let E=Math.floor(Math.random()*1e10).toString();try{let M=C.get("TYPEBOT").API_VERSION,O,N;M==="latest"?(O=`${e.url}/api/v1/typebots/${e.typebot}/startChat`,N={prefilledVariables:I}):(O=`${e.url}/api/v1/sendMessage`,N={startParams:{publicId:e.typebot,prefilledVariables:I}});let _=await Eo.default.post(O,N);await this.typebotService.sendWAMessage(s,null,{expire:u,keywordFinish:d,delayMessage:l,unknownMessage:g,listeningFromMe:y,stopBotFromMe:m,keepOpen:f},r,_.data.messages,_.data.input,_.data.clientSideActions),this.waMonitor.waInstances[t.instanceName].sendDataWebhook("typebot.start",{remoteJid:r,url:O,typebot:o,variables:c,sessionId:E})}catch(M){this.logger.error(M);return}}return{typebot:{...t,typebot:{url:n,remoteJid:r,typebot:o,prefilledVariables:I}}}}async changeStatus(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(u=>u.id),r=e.remoteJid,n=e.status,o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(n==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...t,typebot:{remoteJid:r,status:n}}};if(n==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}):await this.sessionRepository.deleteMany({where:{remoteJid:r,instanceId:s,botId:{not:null}}}),{typebot:{...t,typebot:{remoteJid:r,status:n}}};let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:r,botId:{not:null}},data:{status:n}}),c={remoteJid:r,status:n,session:a};return this.waMonitor.waInstances[t.instanceName].sendDataWebhook("typebot.change-status",c),{typebot:{...t,typebot:c}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(t,e,s){if(!this.integrationEnabled)throw new h("Typebot is disabled");try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(o=>o.id),n=await this.botRepository.findFirst({where:{id:e}});if(n&&n.instanceId!==r)throw new Error("Typebot not found");return await this.sessionRepository.findMany({where:{instanceId:r,remoteJid:s,botId:e??{not:null},type:"typebot"}})}catch(r){throw this.logger.error(r),new Error("Error fetching sessions")}}async ignoreJid(t,e){if(!this.integrationEnabled)throw new h("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}}).then(a=>a.id),r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!r)throw new Error("Settings not found");let n=r?.ignoreJids||[];if(e.action==="add"){if(n.includes(e.remoteJid))return{ignoreJids:n};n.push(e.remoteJid)}else n=n.filter(a=>a!==e.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:r.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:t,remoteJid:e,msg:s}){if(this.integrationEnabled)try{let r=await this.prismaRepository.instance.findFirst({where:{name:t.instanceName}});if(!r)throw new Error("Instance not found");let n=await this.getSession(e,t),o=he(s),a=await this.findBotTrigger(this.botRepository,this.settingsRepository,o,t,n);if(!a){let M=await this.settingsRepository.findFirst({where:{instanceId:t.instanceId}});if(M?.typebotIdFallback)a=await this.botRepository.findFirst({where:{id:M.typebotIdFallback}});else return}let c=await this.prismaRepository.typebotSetting.findFirst({where:{instanceId:t.instanceId}}),u=a?.url,d=a?.typebot,l=a?.expire,g=a?.keywordFinish,y=a?.delayMessage,m=a?.unknownMessage,f=a?.listeningFromMe,b=a?.stopBotFromMe,S=a?.keepOpen,w=a?.debounceTime,I=a?.ignoreJids;if(l==null&&(l=c.expire),g==null&&(g=c.keywordFinish),y==null&&(y=c.delayMessage),m==null&&(m=c.unknownMessage),f==null&&(f=c.listeningFromMe),b==null&&(b=c.stopBotFromMe),S==null&&(S=c.keepOpen),w==null&&(w=c.debounceTime),I==null&&(I=c.ignoreJids),this.checkIgnoreJids(I,e))return;let E=s.key;if(b&&E.fromMe&&n){await this.sessionRepository.update({where:{id:n.id},data:{status:"paused"}});return}if(!f&&E.fromMe||n&&!n.awaitUser||(w&&w>0?this.processDebounce(this.userMessageDebounce,o,e,w,async M=>{await this.typebotService.processTypebot(r,e,s,n,a,u,l,d,g,y,m,f,b,S,M)}):await this.typebotService.processTypebot(r,e,s,n,a,u,l,d,g,y,m,f,b,S,o),n&&!n.awaitUser))return}catch(r){this.logger.error(r);return}}};var ks=A(require("pusher"));var Ns=class Ns{constructor(i,t,e,s){this.prisma=i,this.monitor=t,this.status=e,this.name=s}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set name(i){this.integrationName=i}get name(){return this.integrationName}set status(i){this.integrationStatus=i}get status(){return this.integrationStatus}async set(i,t){if(this.status)return t[this.name]?.enabled?t[this.name].events.length===0&&(t[this.name].events=Ns.events):t[this.name].events=[],this.prisma[this.name].upsert({where:{instanceId:this.monitor.waInstances[i].instanceId},update:{enabled:t[this.name]?.enabled,events:t[this.name].events},create:{enabled:t[this.name]?.enabled,events:t[this.name].events,instanceId:this.monitor.waInstances[i].instanceId}})}async get(i){if(!this.status)return;if(this.monitor.waInstances[i]===void 0)return null;let t=await this.prisma[this.name].findUnique({where:{instanceId:this.monitor.waInstances[i].instanceId}});return t||null}};Ns.events=["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS","REMOVE_INSTANCE","LOGOUT_INSTANCE"];var Q=Ns;var Bs=class extends Q{constructor(t,e){super(t,e,C.get("PUSHER")?.ENABLED,"pusher");this.logger=new T("PusherController");this.pusherClients={};this.globalPusherClient=null;this.pusherConfig=C.get("PUSHER");this.init()}async init(){if(!this.status)return;if(this.pusherConfig.GLOBAL?.ENABLED){let{APP_ID:e,KEY:s,SECRET:r,CLUSTER:n,USE_TLS:o}=this.pusherConfig.GLOBAL;e&&s&&r&&n&&(this.globalPusherClient=new ks.default({appId:e,key:s,secret:r,cluster:n,useTLS:o}),this.logger.info("Pusher global client initialized"))}(await this.prismaRepository.instance.findMany({where:{Pusher:{isNot:null}},include:{Pusher:!0}})).forEach(e=>{e.Pusher.enabled&&e.Pusher.appId&&e.Pusher.key&&e.Pusher.secret&&e.Pusher.cluster?(this.pusherClients[e.name]=new ks.default({appId:e.Pusher.appId,key:e.Pusher.key,secret:e.Pusher.secret,cluster:e.Pusher.cluster,useTLS:e.Pusher.useTLS}),this.logger.info(`Pusher client initialized for instance ${e.name}`)):(delete this.pusherClients[e.name],this.logger.warn(`Pusher client disabled or misconfigured for instance ${e.name}`))})}async set(t,e){e.pusher?.enabled?e.pusher.events.length===0&&(e.pusher.events=Q.events):e.pusher.events=[];let s=await this.prisma.pusher.upsert({where:{instanceId:this.monitor.waInstances[t].instanceId},update:{enabled:e.pusher.enabled,events:e.pusher.events,appId:e.pusher.appId,key:e.pusher.key,secret:e.pusher.secret,cluster:e.pusher.cluster,useTLS:e.pusher.useTLS},create:{enabled:e.pusher.enabled,events:e.pusher.events,instanceId:this.monitor.waInstances[t].instanceId,appId:e.pusher.appId,key:e.pusher.key,secret:e.pusher.secret,cluster:e.pusher.cluster,useTLS:e.pusher.useTLS}});return s.enabled&&s.appId&&s.key&&s.secret&&s.cluster?(this.pusherClients[t]=new ks.default({appId:s.appId,key:s.key,secret:s.secret,cluster:s.cluster,useTLS:s.useTLS}),this.logger.info(`Pusher client initialized for instance ${t}`)):(delete this.pusherClients[t],this.logger.warn(`Pusher client disabled or misconfigured for instance ${t}`)),s}async emit({instanceName:t,origin:e,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){if(!this.status)return;let d=await this.get(t),l=s.replace(/[.-]/gm,"_").toUpperCase(),g=C.get("LOG").LEVEL.includes("WEBHOOKS"),y=s.replace(/_/g,".").toLowerCase(),m={event:s,instance:t,data:r,destination:d?.appId||this.pusherConfig.GLOBAL?.APP_ID,date_time:o,sender:a,server_url:n,apikey:c};s=="qrcode.updated"&&delete m.data.qrcode.base64;let f=JSON.stringify(m),b=Buffer.byteLength(f,"utf8");if(b>10240){this.logger.error({local:`${e}.sendData-Pusher`,message:"Payload size exceeds Pusher limit",event:s,instanceName:t,payloadSize:b});return}if(u&&d&&d.enabled){let w=d.events;if(Array.isArray(w)&&w.includes(l)){g&&this.logger.log({local:`${e}.sendData-Pusher`,appId:d.appId,...m});try{let I=this.pusherClients[t];I?I.trigger(t,y,m):this.logger.error(`Pusher client not found for instance ${t}`)}catch(I){this.logger.error({local:`${e}.sendData-Pusher`,message:I?.message,error:I})}}}if(this.pusherConfig.GLOBAL?.ENABLED&&this.pusherConfig.EVENTS[l]){g&&this.logger.log({local:`${e}.sendData-Pusher-Global`,appId:this.pusherConfig.GLOBAL?.APP_ID,...m});try{this.globalPusherClient?this.globalPusherClient.trigger(t,y,m):this.logger.error("Global Pusher client not initialized")}catch(I){this.logger.error({local:`${e}.sendData-Pusher-Global`,message:I?.message,error:I})}}}};var Io=A(require("amqplib/callback_api"));var Ls=class extends Q{constructor(t,e){super(t,e,C.get("RABBITMQ")?.ENABLED,"rabbitmq");this.amqpChannel=null;this.logger=new T("RabbitmqController")}async init(){this.status&&await new Promise((t,e)=>{let s=C.get("RABBITMQ").URI,r=C.get("RABBITMQ").EXCHANGE_NAME;Io.connect(s,(n,o)=>{if(n){e(n);return}o.createChannel((a,c)=>{if(a){e(a);return}let u=r;c.assertExchange(u,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel=c,this.logger.info("AMQP initialized"),t()})})}).then(()=>{C.get("RABBITMQ")?.GLOBAL_ENABLED&&this.initGlobalQueues()})}set channel(t){this.amqpChannel=t}get channel(){return this.amqpChannel}async emit({instanceName:t,origin:e,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(t),d=u?.events,l=C.get("RABBITMQ").GLOBAL_ENABLED,g=C.get("RABBITMQ").EVENTS,y=C.get("RABBITMQ").EXCHANGE_NAME,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=C.get("LOG").LEVEL.includes("WEBHOOKS"),b={event:s,instance:t,data:r,server_url:n,date_time:o,sender:a,apikey:c};if(u?.enabled&&this.amqpChannel&&Array.isArray(d)&&d.includes(m)){let S=t??y,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let I=s.replace(/_/g,".").toLowerCase(),E=`${t}.${I}`;if(await this.amqpChannel.assertQueue(E,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(E,S,I),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let M={local:`${e}.sendData-RabbitMQ`,...b};this.logger.log(M)}break}catch{w++}}if(l&&g[m]&&this.amqpChannel){let S=y,w=0;for(;w<3;)try{await this.amqpChannel.assertExchange(S,"topic",{durable:!0,autoDelete:!1});let I=s;if(await this.amqpChannel.assertQueue(I,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(I,S,s),await this.amqpChannel.publish(S,s,Buffer.from(JSON.stringify(b))),f){let E={local:`${e}.sendData-RabbitMQ-Global`,...b};this.logger.log(E)}break}catch{w++}}}async initGlobalQueues(){this.logger.info("Initializing global queues");let t=C.get("RABBITMQ").EXCHANGE_NAME,e=C.get("RABBITMQ").EVENTS;if(!e){this.logger.warn("No events to initialize on AMQP");return}Object.keys(e).forEach(r=>{if(e[r]===!1)return;let n=`${r.replace(/_/g,".").toLowerCase()}`,o=t;this.amqpChannel.assertExchange(o,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel.assertQueue(n,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),this.amqpChannel.bindQueue(n,o,r)})}};var Mo=require("@aws-sdk/client-sqs");var Fs=class extends Q{constructor(t,e){super(t,e,C.get("SQS")?.ENABLED,"sqs");this.logger=new T("SqsController")}init(){this.status&&new Promise(t=>{let e=C.get("SQS");this.sqs=new Mo.SQS({credentials:{accessKeyId:e.ACCESS_KEY_ID,secretAccessKey:e.SECRET_ACCESS_KEY},region:e.REGION}),this.logger.info("SQS initialized"),t()})}set channel(t){this.sqs=t}get channel(){return this.sqs}async emit({instanceName:t,origin:e,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=await this.get(t),d=u?.events,l=s.replace(/[.-]/gm,"_").toUpperCase();if(u?.enabled&&this.sqs&&Array.isArray(d)&&d.includes(l)){let g=`${s.replace(".","_").toLowerCase()}`,y=`${t}_${g}.fifo`,m=C.get("SQS"),f=`https://sqs.${m.REGION}.amazonaws.com/${m.ACCOUNT_ID}/${y}`,b={event:s,instance:t,data:r,server_url:n,date_time:o,sender:a,apikey:c},S={MessageBody:JSON.stringify(b),MessageGroupId:"evolution",MessageDeduplicationId:`${t}_${g}_${Date.now()}`,QueueUrl:f};this.sqs.sendMessage(S,w=>{if(w)this.logger.error({local:`${e}.sendData-SQS`,message:w?.message,hostName:w?.hostname,code:w?.code,stack:w?.stack,name:w?.name,url:y,server_url:n});else if(C.get("LOG").LEVEL.includes("WEBHOOKS")){let I={local:`${e}.sendData-SQS`,...b};this.logger.log(I)}})}}async initQueues(t,e){if(!e||!e.length)return;e.map(r=>`${r.replace(/_/g,"_").toLowerCase()}`).forEach(r=>{let n=`${t}_${r}.fifo`;this.sqs.createQueue({QueueName:n,Attributes:{FifoQueue:"true"}},(o,a)=>{o?this.logger.error(`Error creating queue ${n}: ${o.message}`):this.logger.info(`Queue ${n} created: ${a.QueueUrl}`)})})}async removeQueues(t,e){let s=Array.isArray(e)?e.map(n=>String(n)):[];if(!e||!s.length)return;s.map(n=>`${n.replace(/_/g,"_").toLowerCase()}`).forEach(n=>{let o=`${t}_${n}.fifo`;this.sqs.getQueueUrl({QueueName:o},(a,c)=>{if(a)this.logger.error(`Error getting queue URL for ${o}: ${a.message}`);else{let u=c.QueueUrl;this.sqs.deleteQueue({QueueUrl:u},d=>{d?this.logger.error(`Error deleting queue ${o}: ${d.message}`):this.logger.info(`Queue ${o} deleted`)})}})})}};var Kn=A(require("axios")),Us=require("class-validator");var Js=class extends Q{constructor(t,e){super(t,e,!0,"webhook");this.logger=new T("WebhookController")}async set(t,e){if(!(0,Us.isURL)(e.webhook.url,{require_tld:!1}))throw new h('Invalid "url" property');return e.webhook?.enabled?e.webhook.events.length===0&&(e.webhook.events=Q.events):e.webhook.events=[],this.prisma.webhook.upsert({where:{instanceId:this.monitor.waInstances[t].instanceId},update:{enabled:e.webhook?.enabled,events:e.webhook?.events,url:e.webhook?.url,headers:e.webhook?.headers,webhookBase64:e.webhook.base64,webhookByEvents:e.webhook.byEvents},create:{enabled:e.webhook?.enabled,events:e.webhook?.events,instanceId:this.monitor.waInstances[t].instanceId,url:e.webhook?.url,headers:e.webhook?.headers,webhookBase64:e.webhook.base64,webhookByEvents:e.webhook.byEvents}})}async emit({instanceName:t,origin:e,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c,local:u}){let d=await this.get(t);if(!d||!d?.enabled)return;let l=C.get("WEBHOOK"),g=d?.events,y=d?.headers,m=s.replace(/[.-]/gm,"_").toUpperCase(),f=m.replace(/_/gm,"-").toLowerCase(),b=C.get("LOG").LEVEL.includes("WEBHOOKS"),S={event:s,instance:t,data:r,destination:d?.url,date_time:o,sender:a,server_url:n,apikey:c};if(u&&Array.isArray(g)&&g.includes(m)){let w;if(d?.webhookByEvents?w=`${d?.url}/${f}`:w=d?.url,b){let I={local:`${e}.sendData-Webhook`,url:w,...S};this.logger.log(I)}try{d?.enabled&&(0,Us.isURL)(d.url,{require_tld:!1})&&await Kn.default.create({baseURL:w,headers:y}).post("",S)}catch(I){this.logger.error({local:`${e}.sendData-Webhook`,message:I?.message,hostName:I?.hostname,syscall:I?.syscall,code:I?.code,error:I?.errno,stack:I?.stack,name:I?.name,url:w,server_url:n})}}if(l.GLOBAL?.ENABLED&&l.EVENTS[m]){let w=l.GLOBAL.URL;if(l.GLOBAL.WEBHOOK_BY_EVENTS&&(w=`${w}/${f}`),b){let I={local:`${e}.sendData-Webhook-Global`,url:w,...S};this.logger.log(I)}try{(0,Us.isURL)(w)&&await Kn.default.create({baseURL:w}).post("",S)}catch(I){this.logger.error({local:`${e}.sendData-Webhook-Global`,message:I?.message,hostName:I?.hostname,syscall:I?.syscall,code:I?.code,error:I?.errno,stack:I?.stack,name:I?.name,url:w,server_url:n})}}}};var To=require("socket.io");var Ws=class extends Q{constructor(t,e){super(t,e,C.get("WEBSOCKET")?.ENABLED,"websocket");this.logger=new T("WebsocketController");this.cors=C.get("CORS").ORIGIN}init(t){this.status&&(this.socket=new To.Server(t,{cors:{origin:this.cors}}),this.socket.on("connection",e=>{this.logger.info("User connected"),e.on("disconnect",()=>{this.logger.info("User disconnected")})}),this.logger.info("Socket.io initialized"))}set cors(t){this.corsConfig=t}get cors(){return this.corsConfig?.includes("*")?"*":this.corsConfig}set socket(t){this.io=t}get socket(){return this.io}async emit({instanceName:t,origin:e,event:s,data:r,serverUrl:n,dateTime:o,sender:a,apiKey:c}){if(!this.status)return;let u=s.replace(/[.-]/gm,"_").toUpperCase(),d=C.get("LOG").LEVEL.includes("WEBSOCKET"),l={event:s,instance:t,data:r,server_url:n,date_time:o,sender:a,apikey:c};C.get("WEBSOCKET")?.GLOBAL_EVENTS&&(this.socket.emit(s,l),d&&this.logger.log({local:`${e}.sendData-WebsocketGlobal`,...l}));try{let g=await this.get(t);if(!g?.enabled)return;Array.isArray(g?.events)&&g?.events.includes(u)&&(this.socket.of(`/${t}`).emit(s,l),d&&this.logger.log({local:`${e}.sendData-Websocket`,...l}))}catch(g){d&&this.logger.log(g)}}};var $s=class{constructor(i,t){this.prisma=i,this.monitor=t,this.websocket=new Ws(i,t),this.webhook=new Js(i,t),this.rabbitmq=new Ls(i,t),this.sqs=new Fs(i,t),this.pusher=new Bs(i,t)}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set websocket(i){this.websocketController=i}get websocket(){return this.websocketController}set webhook(i){this.webhookController=i}get webhook(){return this.webhookController}set rabbitmq(i){this.rabbitmqController=i}get rabbitmq(){return this.rabbitmqController}set sqs(i){this.sqsController=i}get sqs(){return this.sqsController}set pusher(i){this.pusherController=i}get pusher(){return this.pusherController}init(i){this.websocket.init(i),this.rabbitmq.init(),this.sqs.init(),this.pusher.init()}async emit(i){await this.websocket.emit(i),await this.rabbitmq.emit(i),await this.sqs.emit(i),await this.webhook.emit(i),await this.pusher.emit(i)}async setInstance(i,t){t.websocket&&await this.websocket.set(i,{websocket:{enabled:!0,events:t.websocket?.events}}),t.rabbitmq&&await this.rabbitmq.set(i,{rabbitmq:{enabled:!0,events:t.rabbitmq?.events}}),t.sqs&&await this.sqs.set(i,{sqs:{enabled:!0,events:t.sqs?.events}}),t.webhook&&await this.webhook.set(i,{webhook:{enabled:!0,events:t.webhook?.events,url:t.webhook?.url,headers:t.webhook?.headers,base64:t.webhook?.base64,byEvents:t.webhook?.byEvents}}),t.pusher&&await this.pusher.set(i,{pusher:{enabled:!0,events:t.pusher?.events,appId:t.pusher?.appId,key:t.pusher?.key,secret:t.pusher?.secret,cluster:t.pusher?.cluster,useTLS:t.pusher?.useTLS}})}};var qs=class{constructor(i){this.s3Service=i}async getMedia(i,t){return this.s3Service.getMedia(i,t)}async getMediaUrl(i,t){return this.s3Service.getMediaUrl(i,t)}};var Gs=class{constructor(i){this.prismaRepository=i;this.logger=new T("S3Service")}async getMedia(i,t){try{let e={instanceId:i.instanceId,...t},s=await this.prismaRepository.media.findMany({where:e,select:{id:!0,fileName:!0,type:!0,mimetype:!0,createdAt:!0,Message:!0}});if(!s||s.length===0)throw"Media not found";return s}catch(e){throw new h(e)}}async getMediaUrl(i,t){let e=(await this.getMedia(i,{id:t.id}))[0];return{mediaUrl:await qe(e.fileName,t.expiry),...e}}};var xe=A(require("axios")),Co=require("child_process"),Hs=class{constructor(i){this.configService=i;this.logger=new T("ProviderFiles");this.config=Object.freeze(this.configService.get("PROVIDER"));this.baseUrl=`http://${this.config.HOST}:${this.config.PORT}/session/${this.config.PREFIX}`,this.globalApiToken=this.configService.get("AUTHENTICATION").API_KEY.KEY}get isEnabled(){return!!this.config?.ENABLED}async onModuleInit(){if(this.config.ENABLED){let i=`http://${this.config.HOST}:${this.config.PORT}`;try{if((await xe.default.options(i+"/ping"))?.data!="pong")throw new Error("Offline file provider.");await xe.default.post(`${i}/session`,{group:this.config.PREFIX},{headers:{apikey:this.globalApiToken}})}catch(t){this.logger.error(["Failed to connect to the file server",t?.message,t?.stack]);let e=process.pid;(0,Co.execSync)(`kill -9 ${e}`)}}}async onModuleDestroy(){}async create(i){try{let t=await xe.default.post(`${this.baseUrl}`,{instance:i},{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async write(i,t,e){try{let s=await xe.default.post(`${this.baseUrl}/${i}/${t}`,e,{headers:{apikey:this.globalApiToken}});return[{status:s.status,data:s?.data}]}catch(s){return[{status:s?.response?.status,data:s?.response?.data},s]}}async read(i,t){try{let e=await xe.default.get(`${this.baseUrl}/${i}/${t}`,{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}async delete(i,t){try{let e=await xe.default.delete(`${this.baseUrl}/${i}/${t}`,{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}async allInstances(){try{let i=await xe.default.get(`${this.baseUrl}/list-instances`,{headers:{apikey:this.globalApiToken}});return[{status:i.status,data:i?.data}]}catch(i){return[{status:i?.response?.status,data:i?.response?.data},i]}}async removeSession(i){try{let t=await xe.default.delete(`${this.baseUrl}/${i}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}};var vo=require("@prisma/client"),Ye=class{},Vs=class extends vo.PrismaClient{constructor(t){super();this.configService=t;this.logger=new T("PrismaRepository")}async onModuleInit(){await this.$connect(),this.logger.info("Repository:Prisma - ON")}async onModuleDestroy(){await this.$disconnect(),this.logger.warn("Repository:Prisma - OFF")}};var Ao=require("child_process"),Yn=require("fs"),js=require("path"),Ks=class{constructor(i,t,e,s,r,n,o){this.eventEmitter=i;this.configService=t;this.prismaRepository=e;this.providerFiles=s;this.cache=r;this.chatwootCache=n;this.baileysCache=o;this.db={};this.redis={};this.logger=new T("WAMonitoringService");this.waInstances={};this.providerSession=Object.freeze(this.configService.get("PROVIDER"));this.removeInstance(),this.noConnection(),Object.assign(this.db,t.get("DATABASE")),Object.assign(this.redis,t.get("CACHE"))}delInstanceTime(i){let t=this.configService.get("DEL_INSTANCE");typeof t=="number"&&t>0&&setTimeout(async()=>{this.waInstances[i]?.connectionStatus?.state!=="open"&&(this.waInstances[i]?.connectionStatus?.state==="connecting"?(await this.waInstances[i].integration===P.WHATSAPP_BAILEYS&&(await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i]?.client?.end(void 0)),this.eventEmitter.emit("remove.instance",i,"inner")):this.eventEmitter.emit("remove.instance",i,"inner"))},1e3*60*t)}async instanceInfo(i){if(i&&i.length>0){let r=i?i.filter(n=>!this.waInstances[n]):[];if(r.length>0)throw new W(`Instance${r.length>1?"s":""} "${r.join(", ")}" not found`)}let t=this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,e=i&&i.length>0?{name:{in:i},clientName:t}:{clientName:t};return await this.prismaRepository.instance.findMany({where:e,include:{Chatwoot:!0,Proxy:!0,Rabbitmq:!0,Sqs:!0,Websocket:!0,Setting:!0,_count:{select:{Message:!0,Contact:!0,Chat:!0}}}})}async instanceInfoById(i,t){let e;if(i){if(e=await this.prismaRepository.instance.findFirst({where:{id:i}}).then(r=>r?.name),!e)throw new W(`Instance "${i}" not found`)}else if(t&&(e=await this.prismaRepository.instance.findFirst({where:{number:t}}).then(r=>r?.name),!e))throw new W(`Instance "${t}" not found`);if(!e)throw new W(`Instance "${i}" not found`);if(e&&!this.waInstances[e])throw new W(`Instance "${e}" not found`);let s=e?[e]:null;return this.instanceInfo(s)}async cleaningUp(i){let t;if(this.db.SAVE_DATA.INSTANCE&&await this.prismaRepository.instance.findFirst({where:{name:i}})){let s=await this.prismaRepository.instance.update({where:{name:i},data:{connectionStatus:"close"}});(0,Yn.rmSync)((0,js.join)(St,s.id),{recursive:!0,force:!0}),t=s.id,await this.prismaRepository.session.deleteMany({where:{sessionId:s.id}})}this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&(await this.cache.delete(i),t&&await this.cache.delete(t)),this.providerSession?.ENABLED&&await this.providerFiles.removeSession(i)}async cleaningStoreData(i){this.configService.get("CHATWOOT").ENABLED&&(0,Ao.execSync)(`rm -rf ${(0,js.join)(Xr,"chatwoot",i+"*")}`);let t=await this.prismaRepository.instance.findFirst({where:{name:i}});t&&((0,Yn.rmSync)((0,js.join)(St,t.id),{recursive:!0,force:!0}),await this.prismaRepository.session.deleteMany({where:{sessionId:t.id}}),await this.prismaRepository.chat.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.contact.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.messageUpdate.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.message.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.webhook.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.chatwoot.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.proxy.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.rabbitmq.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.sqs.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.integrationSession.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.typebot.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.websocket.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.setting.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.label.deleteMany({where:{instanceId:t.id}}),await this.prismaRepository.instance.delete({where:{name:i}}))}async loadInstance(){try{this.providerSession?.ENABLED?await this.loadInstancesFromProvider():this.db.SAVE_DATA.INSTANCE?await this.loadInstancesFromDatabasePostgres():this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&await this.loadInstancesFromRedis()}catch(i){this.logger.error(i)}}async saveInstance(i){try{let t=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME;await this.prismaRepository.instance.create({data:{id:i.instanceId,name:i.instanceName,connectionStatus:i.integration&&i.integration===P.WHATSAPP_BAILEYS?"close":i.status??"open",number:i.number,integration:i.integration||P.WHATSAPP_BAILEYS,token:i.hash,clientName:t,businessId:i.businessId}})}catch(t){this.logger.error(t)}}deleteInstance(i){try{this.eventEmitter.emit("remove.instance",i,"inner")}catch(t){this.logger.error(t)}}async setInstance(i){let t=Vt.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});t&&(t.setInstance({instanceId:i.instanceId,instanceName:i.instanceName,integration:i.integration,token:i.token,number:i.number,businessId:i.businessId}),await t.connectToWhatsapp(),this.waInstances[i.instanceName]=t)}async loadInstancesFromRedis(){let i=await this.cache.keys();i?.length>0&&await Promise.all(i.map(async t=>{let e=await this.prismaRepository.instance.findUnique({where:{id:t.split(":")[1]}});if(!e)return;let s={instanceId:t.split(":")[1],instanceName:t.split(":")[2],integration:e.integration,token:e.token,number:e.number,businessId:e.businessId};this.setInstance(s)}))}async loadInstancesFromDatabasePostgres(){let i=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,t=await this.prismaRepository.instance.findMany({where:{clientName:i}});t.length!==0&&await Promise.all(t.map(async e=>{this.setInstance({instanceId:e.id,instanceName:e.name,integration:e.integration,token:e.token,number:e.number,businessId:e.businessId})}))}async loadInstancesFromProvider(){let[i]=await this.providerFiles.allInstances();i?.data&&await Promise.all(i?.data?.map(async t=>{let e=await this.prismaRepository.instance.findUnique({where:{id:t}});this.setInstance({instanceId:e.id,instanceName:e.name,integration:e.integration,token:e.token,businessId:e.businessId})}))}removeInstance(){this.eventEmitter.on("remove.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("remove.instance",null),this.cleaningUp(i),this.cleaningStoreData(i)}finally{this.logger.warn(`Instance "${i}" - REMOVED`)}try{delete this.waInstances[i]}catch(t){this.logger.error(t)}}),this.eventEmitter.on("logout.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("logout.instance",null),this.configService.get("CHATWOOT").ENABLED&&this.waInstances[i]?.clearCacheChatwoot(),this.cleaningUp(i)}finally{this.logger.warn(`Instance "${i}" - LOGOUT`)}})}noConnection(){this.eventEmitter.on("no.connection",async i=>{try{await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i].instance.qrcode={count:0},this.waInstances[i].stateConnection.state="close"}catch(t){this.logger.error({localError:"noConnection",warn:"Error deleting instance from memory.",error:t})}finally{this.logger.warn(`Instance "${i}" - NOT CONNECTION`)}})}};var Ys=class{constructor(i){this.waMonitor=i;this.logger=new T("ProxyService")}create(i,t){return this.waMonitor.waInstances[i.instanceName].setProxy(t),{proxy:{...i,proxy:t}}}async find(i){try{let t=await this.waMonitor.waInstances[i.instanceName].findProxy();if(Object.keys(t).length===0)throw new Error("Proxy not found");return t}catch{return null}}};var Qs=class{constructor(i){this.waMonitor=i;this.logger=new T("SettingsService")}async create(i,t){return await this.waMonitor.waInstances[i.instanceName].setSettings(t),{settings:{...i,settings:t}}}async find(i){try{let t=await this.waMonitor.waInstances[i.instanceName].findSettings();if(Object.keys(t).length===0)throw new Error("Settings not found");return t}catch{return null}}};var Qn=A(require("axios")),zs=class{constructor(i,t,e){this.waMonitor=i;this.prismaRepository=t;this.configService=e;this.logger=new T("TemplateService")}async find(i){let t=await this.waMonitor.waInstances[i.instanceName].instance;if(!t)throw new Error("Instance not found");this.businessId=t.businessId,this.token=t.token;let e=await this.requestTemplate({},"GET");if(!e)throw new Error("Error to create template");return e.data}async create(i,t){try{let e=await this.waMonitor.waInstances[i.instanceName].instance;if(!e)throw new Error("Instance not found");this.businessId=e.businessId,this.token=e.token;let s={name:t.name,category:t.category,allow_category_change:t.allowCategoryChange,language:t.language,components:t.components},r=await this.requestTemplate(s,"POST");if(!r||r.error)throw new Error("Error to create template");return await this.prismaRepository.template.create({data:{templateId:r.id,name:t.name,template:r,webhookUrl:t.webhookUrl,instanceId:e.id}})}catch(e){throw this.logger.error(e),new Error("Error to create template")}}async requestTemplate(i,t){try{let e=this.configService.get("WA_BUSINESS").URL,s=this.configService.get("WA_BUSINESS").VERSION;e=`${e}/${s}/${this.businessId}/message_templates`;let r={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};if(t==="GET")return(await Qn.default.get(e,{headers:r})).data;if(t==="POST")return(await Qn.default.post(e,i,{headers:r})).data}catch(e){return this.logger.error(e.response.data),e.response.data.error}}};var op=new T("WA MODULE"),Xs=null;C.get("CHATWOOT").ENABLED&&(Xs=new Re(new Ce(C,Ae.name).getEngine()));var Zs=new Re(new Ce(C,"instance").getEngine()),Ro=new Re(new Ce(C,"baileys").getEngine()),zn=null;C.get("PROVIDER").ENABLED&&(zn=new Hs(C));var B=new Vs(C),k=new Ks(Mn,C,B,zn,Zs,Xs,Ro),ap=new Gs(B),Xn=new qs(ap),cp=new zs(k,B,C),Zn=new zt(cp),pp=new Ys(k),ei=new Kt(pp,k),Do=new Ae(k,C,B,Xs),ti=new vs(Do,C,B),Po=new Qs(k),er=new Qt(Po),Oe=new Ht(k,C,B,Mn,Do,Po,ei,Zs,Xs,Ro,zn),pe=new Yt(k),xo=new $t(k),K=new qt(k),se=new Gt(k),tr=new jt(k),z=new $s(B,k),De=new ae(B,k),Vt=new Fe(B,k),Oo=new Ts(B,k),_o=new Cs(B,k),lp=new Ze(k,C,B),ce=new _s(lp,B,k),up=new Xe(k,C,B),te=new Os(up,B,k),dp=new ze(k,C,B),le=new As(dp,B,k),gp=new Ds(k,C,B),ue=new Rs(gp,B,k),mp=new xs(k,C,B),de=new Ps(mp,B,k);op.info("Module - ON");var hp=new T("GUARD");async function yp(p,i,t){let e=C.get("AUTHENTICATION").API_KEY,s=p.get("apikey"),r=C.get("DATABASE");if(!s)throw new We;if(e.KEY===s)return t();if((p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))&&!s)throw new it("Missing global api key","The global api key must be set");let n=p.params;try{if(n?.instanceName){if((await B.instance.findUnique({where:{name:n.instanceName}})).token===s)return t()}else if(p.originalUrl.includes("/instance/fetchInstances")&&r.SAVE_DATA.INSTANCE&&await B.instance.findFirst({where:{token:s}}))return t()}catch(o){hp.error(o)}throw new We}var sr={apikey:yp};async function No(p){try{let i=C.get("CACHE"),t=!!k.waInstances[p];if(i.REDIS.ENABLED&&i.REDIS.SAVE_INSTANCES){let e=await Zs.has(p);return t||e}return t||(await B.instance.findMany({where:{name:p}})).length>0}catch(i){throw new F(i?.toString())}}async function ko(p,i,t){if(p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))return t();let e=p.params;if(!e?.instanceName)throw new h('"instanceName" not provided.');if(!await No(e.instanceName))throw new W(`The "${e.instanceName}" instance does not exist`);t()}async function Bo(p,i,t){if(p.originalUrl.includes("/instance/create")){let e=p.body;if(await No(e.instanceName))throw new it(`This name "${e.instanceName}" is already in use.`);k.waInstances[e.instanceName]&&delete k.waInstances[e.instanceName]}t()}var ir=class{collectTelemetry(i,t,e){$(i.path),e()}},Lo=ir;var Jo=require("express");var Fo=require("express"),si=class extends x{constructor(t){super();this.configService=t;this.router=(0,Fo.Router)();this.router.post(this.routerPath("webhook/evolution",!1),async(e,s)=>{let{body:r}=e,n=await Oo.receiveWebhook(r);return s.status(200).json(n)})}};var Uo=require("express"),ii=class extends x{constructor(t){super();this.configService=t;this.router=(0,Uo.Router)();this.router.get(this.routerPath("webhook/meta",!1),async(e,s)=>{e.query["hub.verify_token"]===t.get("WA_BUSINESS").TOKEN_WEBHOOK?s.send(e.query["hub.challenge"]):s.send("Error, wrong validation token")}).post(this.routerPath("webhook/meta",!1),async(e,s)=>{let{body:r}=e,n=await _o.receiveWebhook(r);return s.status(200).json(n)})}};var ni=class{constructor(i){this.router=(0,Jo.Router)(),this.router.use("/",new si(i).router),this.router.use("/",new ii(i).router)}};var ri=class{};function Wo(p){return class extends p{}}var ye=class{};function $o(p){return class extends p{}}var oi=class extends $o(Wo(class{})){};var v=class extends oi{},ai=class{};var ie=require("uuid"),ne=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},fp={type:"string",description:"Invalid format"},qo={$id:(0,ie.v4)(),type:"object",properties:{numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",description:'"numbers" must be an array of numeric strings'}}}},Go={$id:(0,ie.v4)(),type:"object",properties:{readMessages:{type:"array",minItems:1,uniqueItems:!0,items:{properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")}}},required:["readMessages"]},Ho={$id:(0,ie.v4)(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...ne("messageTimestamp")},archive:{type:"boolean",enum:[!0,!1]}},required:["archive"]},Vo={$id:(0,ie.v4)(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...ne("messageTimestamp")}},required:["lastMessage"]},jo={$id:(0,ie.v4)(),type:"object",properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"},participant:{type:"string"}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid","participant")},It={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},picture:{type:"string"}}},Ko={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},text:{type:"string"},key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...ne("id","remoteJid")}},...ne("number","text","key")},Yo={$id:(0,ie.v4)(),type:"object",properties:{number:{...fp},delay:{type:"number"},presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["number","presence","delay"]},Qo={$id:(0,ie.v4)(),type:"object",properties:{number:{type:"string"},status:{type:"string",enum:["block","unblock"]}},required:["number","status"],...ne("number","status")},nr={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},pushName:{type:"string",minLength:1},id:{type:"string",minLength:1}},...ne("_id","id","pushName")}}},zo={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},key:{type:"object",if:{propertyNames:{enum:["fromMe","remoteJid","id"]}},then:{properties:{remoteJid:{type:"string",minLength:1,description:"The property cannot be empty"},id:{type:"string",minLength:1,description:"The property cannot be empty"},fromMe:{type:"boolean",enum:[!0,!1]}}}},message:{type:"object"}},...ne("_id")},limit:{type:"integer"}}},Xo={$id:(0,ie.v4)(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string"},remoteJid:{type:"string"},id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},participant:{type:"string"},status:{type:"string",enum:["ERROR","PENDING","SERVER_ACK","DELIVERY_ACK","READ","PLAYED"]}},...ne("_id","remoteJid","id","status")},limit:{type:"integer"}}},Zo={$id:(0,ie.v4)(),type:"object",properties:{readreceipts:{type:"string",enum:["all","none"]},profile:{type:"string",enum:["all","contacts","contact_blacklist","none"]},status:{type:"string",enum:["all","contacts","contact_blacklist","none"]},online:{type:"string",enum:["all","match_last_seen"]},last:{type:"string",enum:["all","contacts","contact_blacklist","none"]},groupadd:{type:"string",enum:["all","contacts","contact_blacklist","none"]}},required:["readreceipts","profile","status","online","last","groupadd"],...ne("readreceipts","profile","status","online","last","groupadd")},ea={$id:(0,ie.v4)(),type:"object",properties:{name:{type:"string"}},...ne("name")},ta={$id:(0,ie.v4)(),type:"object",properties:{status:{type:"string"}},...ne("status")},sa={type:"object",properties:{wuid:{type:"string"},name:{type:"string"},picture:{type:"string"},status:{type:"string"},isBusiness:{type:"boolean"}}};var ge=require("uuid"),fe=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},ia={$id:(0,ge.v4)(),type:"object",properties:{subject:{type:"string"},description:{type:"string"},profilePicture:{type:"string"},promoteParticipants:{type:"boolean",enum:[!0,!1]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["subject","participants"],...fe("subject","description","profilePicture")},Mt={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string",pattern:"^[\\d-]+@g.us$"}},required:["groupJid"],...fe("groupJid")},na={$id:(0,ge.v4)(),type:"object",properties:{getParticipants:{type:"string",enum:["true","false"]}},required:["getParticipants"],...fe("getParticipants")},ra={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"},numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"numbers" must be an array of numeric strings'}}},required:["groupJid","description","numbers"],...fe("groupJid","description","numbers")},oa={$id:(0,ge.v4)(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...fe("inviteCode")},aa={$id:(0,ge.v4)(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...fe("inviteCode")},ca={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["add","remove","promote","demote"]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["groupJid","action","participants"],...fe("groupJid","action")},pa={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["announcement","not_announcement","locked","unlocked"]}},required:["groupJid","action"],...fe("groupJid","action")},la={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},expiration:{type:"number",enum:[0,86400,604800,7776e3]}},required:["groupJid","expiration"],...fe("groupJid","expiration")},ua={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},image:{type:"string"}},required:["groupJid","image"],...fe("groupJid","image")},da={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},subject:{type:"string"}},required:["groupJid","subject"],...fe("groupJid","subject")},ga={$id:(0,ge.v4)(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"}},required:["groupJid","description"],...fe("groupJid","description")};var rr=require("uuid"),wp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},D={$id:(0,rr.v4)(),type:"object",properties:{instanceName:{type:"string"},token:{type:"string"},number:{type:"string",pattern:"^\\d+[\\.@\\w-]+"},businessId:{type:"string"},qrcode:{type:"boolean"},Integration:{type:"string",enum:Object.values(P)},rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"},proxyHost:{type:"string"},proxyPort:{type:"string"},proxyProtocol:{type:"string"},proxyUsername:{type:"string"},proxyPassword:{type:"string"},webhookUrl:{type:"string"},webhookByEvents:{type:"boolean"},webhookBase64:{type:"boolean"},webhookEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},rabbitmqEnabled:{type:"boolean"},rabbitmqEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},sqsEnabled:{type:"boolean"},sqsEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},chatwootAccountId:{type:"string"},chatwootToken:{type:"string"},chatwootUrl:{type:"string"},chatwootSignMsg:{type:"boolean"},chatwootReopenConversation:{type:"boolean"},chatwootConversationPending:{type:"boolean"},chatwootImportContacts:{type:"boolean"},chatwootNameInbox:{type:"string"},chatwootMergeBrazilContacts:{type:"boolean"},chatwootImportMessages:{type:"boolean"},chatwootDaysLimitImportMessages:{type:"number"}},...wp("instanceName")},ma={$id:(0,rr.v4)(),type:"object",properties:{presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["presence"]};var ha=require("uuid"),bp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Sp={type:"string",description:"Invalid format"},ya={$id:(0,ha.v4)(),type:"object",properties:{number:{...Sp},labelId:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["number","labelId","action"],...bp("number","labelId","action")};var re=require("uuid"),nt=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},we={type:"string",description:"Invalid format"},fa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},name:{type:"string"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","language"]},_e={properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id"],...nt("id")},message:{type:"object"}}},wa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},isVideo:{type:"boolean",enum:[!0,!1]},callDuration:{type:"integer",minimum:1,maximum:15}},required:["number","callDuration"]},ba={$id:(0,re.v4)(),type:"object",properties:{number:{...we},text:{type:"string"},linkPreview:{type:"boolean"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","text"]},Sa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},mediatype:{type:"string",enum:["image","document","video","audio"]},mimetype:{type:"string"},media:{type:"string"},fileName:{type:"string"},caption:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","mediatype"]},Ea={$id:(0,re.v4)(),type:"object",properties:{number:{...we},video:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Ia={$id:(0,re.v4)(),type:"object",properties:{number:{...we},audio:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Ma={$id:(0,re.v4)(),type:"object",properties:{type:{type:"string",enum:["text","image","audio","video"]},content:{type:"string"},caption:{type:"string"},backgroundColor:{type:"string"},font:{type:"integer",minimum:0,maximum:5},statusJidList:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"statusJidList" must be an array of numeric strings'}},allContacts:{type:"boolean",enum:[!0,!1]}},required:["type"]},Ta={$id:(0,re.v4)(),type:"object",properties:{number:{...we},sticker:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Ca={$id:(0,re.v4)(),type:"object",properties:{number:{...we},latitude:{type:"number"},longitude:{type:"number"},name:{type:"string"},address:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","latitude","longitude","name","address"]},va={$id:(0,re.v4)(),type:"object",properties:{number:{...we},contact:{type:"array",items:{type:"object",properties:{fullName:{type:"string"},wuid:{type:"string",minLength:10,pattern:"\\d+",description:'"wuid" must be a numeric string'},phoneNumber:{type:"string",minLength:10},organization:{type:"string"},email:{type:"string"},url:{type:"string"}},required:["fullName","phoneNumber"],...nt("fullName")},minItems:1,uniqueItems:!0}},required:["number","contact"]},Aa={$id:(0,re.v4)(),type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","remoteJid","fromMe"],...nt("id","remoteJid")},reaction:{type:"string"}},required:["key","reaction"]},Ra={$id:(0,re.v4)(),type:"object",properties:{number:{...we},name:{type:"string"},selectableCount:{type:"integer",minimum:0,maximum:10},values:{type:"array",minItems:2,maxItems:10,uniqueItems:!0,items:{type:"string"}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","name","selectableCount","values"]},Da={$id:(0,re.v4)(),type:"object",properties:{number:{...we},title:{type:"string"},description:{type:"string"},footerText:{type:"string"},buttonText:{type:"string"},sections:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},rows:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},description:{type:"string"},rowId:{type:"string"}},required:["title","rowId"],...nt("title","description","rowId")}}},required:["title","rows"],...nt("title")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","title","footerText","buttonText","sections"]},Pa={$id:(0,re.v4)(),type:"object",properties:{number:{...we},thumbnailUrl:{type:"string"},title:{type:"string"},description:{type:"string"},footer:{type:"string"},buttons:{type:"array",items:{type:"object",properties:{type:{type:"string",enum:["reply","copy","url","call","pix"]},displayText:{type:"string"},id:{type:"string"},url:{type:"string"},phoneNumber:{type:"string"},currency:{type:"string"},name:{type:"string"},keyType:{type:"string",enum:["phone","email","cpf","cnpj","random"]},key:{type:"string"}},required:["type"],...nt("id","url","phoneNumber")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{..._e},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]};var xa=require("uuid"),Ep=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Oa={$id:(0,xa.v4)(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},host:{type:"string"},port:{type:"string"},protocol:{type:"string"},username:{type:"string"},password:{type:"string"}},required:["enabled","host","port","protocol"],...Ep("enabled","host","port","protocol")};var _a=require("uuid"),Ip=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Na={$id:(0,_a.v4)(),type:"object",properties:{rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"}},required:["rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory"],...Ip("rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory")};var ka=require("uuid"),Mp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ba={$id:(0,ka.v4)(),type:"object",properties:{name:{type:"string"},category:{type:"string",enum:["AUTHENTICATION","MARKETING","UTILITY"]},allowCategoryChange:{type:"boolean"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","category","language","components"],...Mp("name","category","language","components")};var La=require("uuid"),Tp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Fa={$id:(0,La.v4)(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},accountId:{type:"string"},token:{type:"string"},url:{type:"string"},signMsg:{type:"boolean",enum:[!0,!1]},signDelimiter:{type:["string","null"]},nameInbox:{type:["string","null"]},reopenConversation:{type:"boolean",enum:[!0,!1]},conversationPending:{type:"boolean",enum:[!0,!1]},autoCreate:{type:"boolean",enum:[!0,!1]},importContacts:{type:"boolean",enum:[!0,!1]},mergeBrazilContacts:{type:"boolean",enum:[!0,!1]},importMessages:{type:"boolean",enum:[!0,!1]},daysLimitImportMessages:{type:"number"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","accountId","token","url","signMsg","reopenConversation","conversationPending"],...Tp("enabled","accountId","token","url","signMsg","reopenConversation","conversationPending")};var Tt=require("uuid"),ci=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},or={$id:(0,Tt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},botType:{type:"string",enum:["chatBot","textGenerator","agent","workflow"]},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","botType","triggerType"],...ci("enabled","botType","triggerType")},Ua={$id:(0,Tt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...ci("remoteJid","status")},Ja={$id:(0,Tt.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},difyIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...ci("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},Wa={$id:(0,Tt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...ci("remoteJid","action")};var Ct=require("uuid"),pi=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},ar={$id:(0,Ct.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","apiUrl","triggerType"],...pi("enabled","apiUrl","triggerType")},$a={$id:(0,Ct.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...pi("remoteJid","status")},qa={$id:(0,Ct.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...pi("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},Ga={$id:(0,Ct.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...pi("remoteJid","action")};var vt=require("uuid"),li=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},cr={$id:(0,vt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","apiUrl","triggerType"],...li("enabled","apiUrl","triggerType")},Ha={$id:(0,vt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...li("remoteJid","status")},Va={$id:(0,vt.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...li("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},ja={$id:(0,vt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...li("remoteJid","action")};var rt=require("uuid"),At=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},pr={$id:(0,rt.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},openaiCredsId:{type:"string"},botType:{type:"string",enum:["assistant","chatCompletion"]},assistantId:{type:"string"},functionUrl:{type:"string"},model:{type:"string"},systemMessages:{type:"array",items:{type:"string"}},assistantMessages:{type:"array",items:{type:"string"}},userMessages:{type:"array",items:{type:"string"}},maxTokens:{type:"integer"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","openaiCredsId","botType","triggerType"],...At("enabled","openaiCredsId","botType","triggerType")},Ka={$id:(0,rt.v4)(),type:"object",properties:{name:{type:"string"},apiKey:{type:"string"}},required:["name","apiKey"],...At("name","apiKey")},Ya={$id:(0,rt.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...At("remoteJid","status")},Qa={$id:(0,rt.v4)(),type:"object",properties:{openaiCredsId:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},speechToText:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}},openaiIdFallback:{type:"string"}},required:["openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...At("openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},za={$id:(0,rt.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...At("remoteJid","action")};var ot=require("uuid"),Rt=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},lr={$id:(0,ot.v4)(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},url:{type:"string"},typebot:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","url","typebot","triggerType"],...Rt("enabled","url","typebot","triggerType")},Xa={$id:(0,ot.v4)(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Rt("remoteJid","status")},Za={$id:(0,ot.v4)(),type:"object",properties:{remoteJid:{type:"string"},url:{type:"string"},typebot:{type:"string"}},required:["remoteJid","url","typebot"],...Rt("remoteJid","url","typebot")},ec={$id:(0,ot.v4)(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},typebotIdFallback:{type:"string"},ignoreJids:{type:"array",items:{type:"string"}}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe"],...Rt("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe")},tc={$id:(0,ot.v4)(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Rt("remoteJid","action")};var oc=require("uuid");var sc=require("uuid");var Cp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},ic={$id:(0,sc.v4)(),type:"object",properties:{pusher:{type:"object",properties:{enabled:{type:"boolean"},appId:{type:"string"},key:{type:"string"},secret:{type:"string"},cluster:{type:"string"},useTLS:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:Q.events}}},required:["enabled","appId","key","secret","cluster","useTLS"],...Cp("enabled","appId","key","secret","cluster","useTLS")}},required:["pusher"]};var nc=require("uuid");var vp=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},rc={$id:(0,nc.v4)(),type:"object",properties:{webhook:{type:"object",properties:{enabled:{type:"boolean"},url:{type:"string"},headers:{type:"object"},byEvents:{type:"boolean"},base64:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:Q.events}}},required:["enabled","url"],...vp("enabled","url")}},required:["webhook"]};var at={$id:(0,oc.v4)(),type:"object",properties:{websocket:{$ref:"#/$defs/event"},rabbitmq:{$ref:"#/$defs/event"},sqs:{$ref:"#/$defs/event"}},$defs:{event:{type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},events:{type:"array",minItems:0,items:{type:"string",enum:Q.events}}},required:["enabled"]}}};var ac=require("express"),ui=class extends x{constructor(...t){super();this.router=(0,ac.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Fa,ClassRef:ri,execute:(n,o)=>ti.createChatwoot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ti.findChatwoot(n)});s.status(200).json(r)}).post(this.routerPath("webhook"),async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:(n,o)=>ti.receiveWebhook(n,o)});s.status(200).json(r)})}};var be=class{};var Dt=class{},di=class{};var cc=require("express"),gi=class extends x{constructor(...t){super();this.router=(0,cc.Router)();this.router.post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:or,ClassRef:Dt,execute:(n,o)=>le.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>le.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:difyId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>le.fetchBot(n,e.params.difyId)});s.status(200).json(r)}).put(this.routerPath("update/:difyId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:or,ClassRef:Dt,execute:(n,o)=>le.updateBot(n,e.params.difyId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:difyId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>le.deleteBot(n,e.params.difyId)});s.status(200).json(r)}).post(this.routerPath("settings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ja,ClassRef:di,execute:(n,o)=>le.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>le.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ua,ClassRef:v,execute:(n,o)=>le.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:difyId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>le.fetchSessions(n,e.params.difyId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Wa,ClassRef:be,execute:(n,o)=>le.ignoreJid(n,o)});s.status(200).json(r)})}};var mi=class{},Pt=class{},hi=class{};var pc=require("express"),yi=class extends x{constructor(...t){super();this.router=(0,pc.Router)();this.router.post(this.routerPath("creds"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ka,ClassRef:mi,execute:(n,o)=>te.createOpenaiCreds(n,o)});s.status(201).json(r)}).get(this.routerPath("creds"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.findOpenaiCreds(n)});s.status(200).json(r)}).delete(this.routerPath("creds/:openaiCredsId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.deleteCreds(n,e.params.openaiCredsId)});s.status(200).json(r)}).post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:pr,ClassRef:Pt,execute:(n,o)=>te.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:openaiBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.fetchBot(n,e.params.openaiBotId)});s.status(200).json(r)}).put(this.routerPath("update/:openaiBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:pr,ClassRef:Pt,execute:(n,o)=>te.updateBot(n,e.params.openaiBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:openaiBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.deleteBot(n,e.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Qa,ClassRef:hi,execute:(n,o)=>te.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ya,ClassRef:v,execute:(n,o)=>te.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:openaiBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.fetchSessions(n,e.params.openaiBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:za,ClassRef:be,execute:(n,o)=>te.ignoreJid(n,o)});s.status(200).json(r)}).get(this.routerPath("getModels"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>te.getModels(n)});s.status(200).json(r)})}};var xt=class{},fi=class{};var lc=require("express"),wi=class extends x{constructor(...t){super();this.router=(0,lc.Router)();this.router.post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:lr,ClassRef:xt,execute:(n,o)=>ce.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ce.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:typebotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ce.fetchBot(n,e.params.typebotId)});s.status(200).json(r)}).put(this.routerPath("update/:typebotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:lr,ClassRef:xt,execute:(n,o)=>ce.updateBot(n,e.params.typebotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:typebotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ce.deleteBot(n,e.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ec,ClassRef:fi,execute:(n,o)=>ce.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ce.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("start"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Za,ClassRef:v,execute:(n,o)=>ce.startBot(n,o)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Xa,ClassRef:v,execute:(n,o)=>ce.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:typebotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ce.fetchSessions(n,e.params.typebotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:tc,ClassRef:be,execute:(n,o)=>ce.ignoreJid(n,o)});s.status(200).json(r)})}};var gc=require("express");var uc=require("express");var Ot=class{},bi=class{};var Si=class extends x{constructor(...t){super();this.router=(0,uc.Router)();this.router.post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ar,ClassRef:Ot,execute:(n,o)=>ue.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ue.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:evolutionBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ue.fetchBot(n,e.params.evolutionBotId)});s.status(200).json(r)}).put(this.routerPath("update/:evolutionBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ar,ClassRef:Ot,execute:(n,o)=>ue.updateBot(n,e.params.evolutionBotId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:evolutionBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ue.deleteBot(n,e.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("settings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:qa,ClassRef:bi,execute:(n,o)=>ue.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ue.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:$a,ClassRef:v,execute:(n,o)=>ue.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:evolutionBotId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ue.fetchSessions(n,e.params.evolutionBotId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ga,ClassRef:be,execute:(n,o)=>ue.ignoreJid(n,o)});s.status(200).json(r)})}};var dc=require("express");var _t=class{},Ei=class{};var Ii=class extends x{constructor(...t){super();this.router=(0,dc.Router)();this.router.post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:cr,ClassRef:_t,execute:(n,o)=>de.createBot(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>de.findBot(n)});s.status(200).json(r)}).get(this.routerPath("fetch/:flowiseId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>de.fetchBot(n,e.params.flowiseId)});s.status(200).json(r)}).put(this.routerPath("update/:flowiseId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:cr,ClassRef:_t,execute:(n,o)=>de.updateBot(n,e.params.flowiseId,o)});s.status(200).json(r)}).delete(this.routerPath("delete/:flowiseId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>de.deleteBot(n,e.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("settings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Va,ClassRef:Ei,execute:(n,o)=>de.settings(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>de.fetchSettings(n)});s.status(200).json(r)}).post(this.routerPath("changeStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ha,ClassRef:v,execute:(n,o)=>de.changeStatus(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchSessions/:flowiseId"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>de.fetchSessions(n,e.params.flowiseId)});s.status(200).json(r)}).post(this.routerPath("ignoreJid"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ja,ClassRef:be,execute:(n,o)=>de.ignoreJid(n,o)});s.status(200).json(r)})}};var Mi=class{constructor(...i){this.router=(0,gc.Router)(),this.router.use("/evolutionBot",new Si(...i).router),this.router.use("/chatwoot",new ui(...i).router),this.router.use("/typebot",new wi(...i).router),this.router.use("/openai",new yi(...i).router),this.router.use("/dify",new gi(...i).router),this.router.use("/flowise",new Ii(...i).router)}};var mc=require("express"),Ti=class extends x{constructor(...t){super();this.router=(0,mc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ic,ClassRef:ye,execute:(n,o)=>z.pusher.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>z.pusher.get(n.instanceName)});s.status(200).json(r)})}};var hc=require("express"),Ci=class extends x{constructor(...t){super();this.router=(0,hc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:at,ClassRef:ye,execute:(n,o)=>z.rabbitmq.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>z.rabbitmq.get(n.instanceName)});s.status(200).json(r)})}};var yc=require("express"),vi=class extends x{constructor(...t){super();this.router=(0,yc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:at,ClassRef:ye,execute:(n,o)=>z.sqs.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>z.sqs.get(n.instanceName)});s.status(200).json(r)})}};var fc=require("express"),Ai=class extends x{constructor(t,...e){super();this.configService=t;this.router=(0,fc.Router)();this.router.post(this.routerPath("set"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:rc,ClassRef:ye,execute:(o,a)=>z.webhook.set(o.instanceName,a)});r.status(201).json(n)}).get(this.routerPath("find"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:v,execute:o=>z.webhook.get(o.instanceName)});r.status(200).json(n)})}};var wc=require("express"),Ri=class extends x{constructor(...t){super();this.router=(0,wc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:at,ClassRef:ye,execute:(n,o)=>z.websocket.set(n.instanceName,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>z.websocket.get(n.instanceName)});s.status(200).json(r)})}};var bc=require("express"),Di=class{constructor(i,...t){this.router=(0,bc.Router)(),this.router.use("/webhook",new Ai(i,...t).router),this.router.use("/websocket",new Ri(...t).router),this.router.use("/rabbitmq",new Ci(...t).router),this.router.use("/pusher",new Ti(...t).router),this.router.use("/sqs",new vi(...t).router)}};var Nt=class{};var ur=require("uuid"),Sc=(...p)=>{let i={};return p.forEach(t=>i[t]={minLength:1,description:`The "${t}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ec={$id:(0,ur.v4)(),type:"object",properties:{id:{type:"string"},type:{type:"string"},messageId:{type:"integer"}},...Sc("id","type","messageId")},Ic={$id:(0,ur.v4)(),type:"object",properties:{id:{type:"string",pattern:"\\d+",minLength:1},expiry:{type:"string",pattern:"\\d+",minLength:1}},...Sc("id"),required:["id"]};var Mc=require("express"),Pi=class extends x{constructor(...t){super();this.router=(0,Mc.Router)();this.router.post(this.routerPath("getMedia"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ec,ClassRef:Nt,execute:(n,o)=>Xn.getMedia(n,o)});s.status(201).json(r)}).post(this.routerPath("getMediaUrl"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ic,ClassRef:Nt,execute:(n,o)=>Xn.getMediaUrl(n,o)});s.status(200).json(r)})}};var Tc=require("express"),xi=class{constructor(...i){this.router=(0,Tc.Router)(),this.router.use("/s3",new Pi(...i).router)}};var _c=require("express"),yn=A(require("fs")),Nc=A(require("mime")),mr=A(require("path"));var Cc=require("express");var Oi=class extends x{constructor(...t){super();this.router=(0,Cc.Router)();this.router.post(this.routerPath("whatsappNumbers"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:qo,ClassRef:rs,execute:(n,o)=>K.whatsappNumber(n,o)});return s.status(200).json(r)}).post(this.routerPath("markMessageAsRead"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Go,ClassRef:cs,execute:(n,o)=>K.readMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("archiveChat"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ho,ClassRef:ps,execute:(n,o)=>K.archiveChat(n,o)});return s.status(201).json(r)}).post(this.routerPath("markChatUnread"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Vo,ClassRef:ls,execute:(n,o)=>K.markChatUnread(n,o)});return s.status(201).json(r)}).delete(this.routerPath("deleteMessageForEveryone"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:jo,ClassRef:ds,execute:(n,o)=>K.deleteMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("fetchProfilePictureUrl"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:It,ClassRef:wt,execute:(n,o)=>K.fetchProfilePicture(n,o)});return s.status(200).json(r)}).post(this.routerPath("getBase64FromMediaMessage"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:null,ClassRef:ns,execute:(n,o)=>K.getBase64FromMediaMessage(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateMessage"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ko,ClassRef:hs,execute:(n,o)=>K.updateMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("sendPresence"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Yo,ClassRef:ms,execute:(n,o)=>K.sendPresence(n,o)});return s.status(201).json(r)}).post(this.routerPath("updateBlockStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Qo,ClassRef:ys,execute:(n,o)=>K.blockUser(n,o)});return s.status(201).json(r)}).post(this.routerPath("findContacts"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:nr,ClassRef:Ye,execute:(n,o)=>K.fetchContacts(n,o)});return s.status(200).json(r)}).post(this.routerPath("findMessages"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:zo,ClassRef:Ye,execute:(n,o)=>K.fetchMessages(n,o)});return s.status(200).json(r)}).post(this.routerPath("findStatusMessage"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Xo,ClassRef:Ye,execute:(n,o)=>K.fetchStatusMessage(n,o)});return s.status(200).json(r)}).post(this.routerPath("findChats"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:nr,ClassRef:Ye,execute:(n,o)=>K.fetchChats(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchBusinessProfile"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:It,ClassRef:tt,execute:(n,o)=>K.fetchBusinessProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("fetchProfile"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:sa,ClassRef:wt,execute:(n,o)=>K.fetchProfile(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileName"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ea,ClassRef:os,execute:(n,o)=>K.updateProfileName(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfileStatus"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ta,ClassRef:as,execute:(n,o)=>K.updateProfileStatus(n,o)});return s.status(200).json(r)}).post(this.routerPath("updateProfilePicture"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:It,ClassRef:tt,execute:(n,o)=>K.updateProfilePicture(n,o)});return s.status(200).json(r)}).delete(this.routerPath("removeProfilePicture"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:It,ClassRef:tt,execute:n=>K.removeProfilePicture(n)});return s.status(200).json(r)}).get(this.routerPath("fetchPrivacySettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:null,ClassRef:v,execute:n=>K.fetchPrivacySettings(n)});return s.status(200).json(r)}).post(this.routerPath("updatePrivacySettings"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Zo,ClassRef:us,execute:(n,o)=>K.updatePrivacySettings(n,o)});return s.status(201).json(r)})}};var _i=class{},Ni=class{},ki=class{},Bi=class{},Te=class{},Li=class{},Fi=class{},Ui=class{},Ji=class{},Wi=class extends Te{},$i=class extends Te{},qi=class extends Te{};var vc=require("express");var Gi=class extends x{constructor(...t){super();this.router=(0,vc.Router)();this.router.post(this.routerPath("create"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ia,ClassRef:_i,execute:(n,o)=>se.createGroup(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupSubject"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:da,ClassRef:ki,execute:(n,o)=>se.updateGroupSubject(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupPicture"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:ua,ClassRef:Ni,execute:(n,o)=>se.updateGroupPicture(n,o)});s.status(201).json(r)}).post(this.routerPath("updateGroupDescription"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:ga,ClassRef:Bi,execute:(n,o)=>se.updateGroupDescription(n,o)});s.status(201).json(r)}).get(this.routerPath("findGroupInfos"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:Mt,ClassRef:Te,execute:(n,o)=>se.findGroupInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("fetchAllGroups"),...t,async(e,s)=>{let r=await this.getParticipantsValidate({request:e,schema:na,ClassRef:Li,execute:(n,o)=>se.fetchAllGroups(n,o)});s.status(200).json(r)}).get(this.routerPath("participants"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:Mt,ClassRef:Te,execute:(n,o)=>se.findParticipants(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteCode"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:Mt,ClassRef:Te,execute:(n,o)=>se.inviteCode(n,o)});s.status(200).json(r)}).get(this.routerPath("inviteInfo"),...t,async(e,s)=>{let r=await this.inviteCodeValidate({request:e,schema:oa,ClassRef:Fi,execute:(n,o)=>se.inviteInfo(n,o)});s.status(200).json(r)}).get(this.routerPath("acceptInviteCode"),...t,async(e,s)=>{let r=await this.inviteCodeValidate({request:e,schema:aa,ClassRef:Ui,execute:(n,o)=>se.acceptInviteCode(n,o)});s.status(200).json(r)}).post(this.routerPath("sendInvite"),...t,async(e,s)=>{let r=await this.groupNoValidate({request:e,schema:ra,ClassRef:Ji,execute:(n,o)=>se.sendInvite(n,o)});s.status(200).json(r)}).post(this.routerPath("revokeInviteCode"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:Mt,ClassRef:Te,execute:(n,o)=>se.revokeInviteCode(n,o)});s.status(201).json(r)}).post(this.routerPath("updateParticipant"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:ca,ClassRef:Wi,execute:(n,o)=>se.updateGParticipate(n,o)});s.status(201).json(r)}).post(this.routerPath("updateSetting"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:pa,ClassRef:$i,execute:(n,o)=>se.updateGSetting(n,o)});s.status(201).json(r)}).post(this.routerPath("toggleEphemeral"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:la,ClassRef:qi,execute:(n,o)=>se.toggleEphemeral(n,o)});s.status(201).json(r)}).delete(this.routerPath("leaveGroup"),...t,async(e,s)=>{let r=await this.groupValidate({request:e,schema:{},ClassRef:Te,execute:(n,o)=>se.leaveGroup(n,o)});s.status(200).json(r)})}};var Ac=require("express");var Hi=class extends x{constructor(t,...e){super();this.configService=t;this.router=(0,Ac.Router)();this.router.post("/create",...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:v,execute:o=>Oe.createInstance(o)});return r.status(201).json(n)}).post(this.routerPath("restart"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:o=>Oe.restartInstance(o)});return r.status(200).json(n)}).get(this.routerPath("connect"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:o=>Oe.connectToWhatsapp(o)});return r.status(200).json(n)}).get(this.routerPath("connectionState"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:o=>Oe.connectionState(o)});return r.status(200).json(n)}).get(this.routerPath("fetchInstances",!1),...e,async(s,r)=>{let n=s.get("apikey"),o=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:a=>Oe.fetchInstances(a,n)});return r.status(200).json(o)}).post(this.routerPath("setPresence"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:ma,ClassRef:ai,execute:(o,a)=>Oe.setPresence(o,a)});return r.status(201).json(n)}).delete(this.routerPath("logout"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:o=>Oe.logout(o)});return r.status(200).json(n)}).delete(this.routerPath("delete"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:v,execute:o=>Oe.deleteInstance(o)});return r.status(200).json(n)})}};var Vi=class{},ji=class{};var Rc=require("express");var Ki=class extends x{constructor(...t){super();this.router=(0,Rc.Router)();this.router.get(this.routerPath("findLabels"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:null,ClassRef:Vi,execute:n=>tr.fetchLabels(n)});return s.status(200).json(r)}).post(this.routerPath("handleLabel"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ya,ClassRef:ji,execute:(n,o)=>tr.handleLabel(n,o)});return s.status(200).json(r)})}};var Yi=class{};var Dc=require("express");var Qi=class extends x{constructor(...t){super();this.router=(0,Dc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Oa,ClassRef:Yi,execute:(n,o)=>ei.createProxy(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:D,ClassRef:v,execute:n=>ei.findProxy(n)});s.status(200).json(r)})}};var me=class{},zi=class extends me{};var Xi=class extends me{},Zi=class extends me{},kt=class extends me{},en=class extends me{},tn=class extends me{};var sn=class extends me{},nn=class extends me{};var rn=class extends me{};var on=class extends me{},an=class extends me{},cn=class{};var Pc=require("express"),dr=A(require("multer"));var Bt=(0,dr.default)({storage:dr.default.memoryStorage()}),pn=class extends x{constructor(...t){super();this.router=(0,Pc.Router)();this.router.post(this.routerPath("sendTemplate"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:fa,ClassRef:on,execute:(n,o)=>pe.sendTemplate(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendText"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:ba,ClassRef:zi,execute:(n,o)=>pe.sendText(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendMedia"),...t,Bt.single("file"),async(e,s)=>{let r=e.body,n=await this.dataValidate({request:e,schema:Sa,ClassRef:kt,execute:o=>pe.sendMedia(o,r,e.file)});return s.status(201).json(n)}).post(this.routerPath("sendPtv"),...t,Bt.single("file"),async(e,s)=>{let r=e.body,n=await this.dataValidate({request:e,schema:Ea,ClassRef:en,execute:o=>pe.sendPtv(o,r,e.file)});return s.status(201).json(n)}).post(this.routerPath("sendWhatsAppAudio"),...t,Bt.single("file"),async(e,s)=>{let r=e.body,n=await this.dataValidate({request:e,schema:Ia,ClassRef:kt,execute:o=>pe.sendWhatsAppAudio(o,r,e.file)});return s.status(201).json(n)}).post(this.routerPath("sendStatus"),...t,Bt.single("file"),async(e,s)=>{let r=e.body,n=await this.dataValidate({request:e,schema:Ma,ClassRef:Xi,execute:o=>pe.sendStatus(o,r,e.file)});return s.status(201).json(n)}).post(this.routerPath("sendSticker"),...t,Bt.single("file"),async(e,s)=>{let r=e.body,n=await this.dataValidate({request:e,schema:Ta,ClassRef:tn,execute:o=>pe.sendSticker(o,r,e.file)});return s.status(201).json(n)}).post(this.routerPath("sendLocation"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ca,ClassRef:nn,execute:(n,o)=>pe.sendLocation(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendContact"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:va,ClassRef:an,execute:(n,o)=>pe.sendContact(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendReaction"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Aa,ClassRef:cn,execute:(n,o)=>pe.sendReaction(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendPoll"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Ra,ClassRef:Zi,execute:(n,o)=>pe.sendPoll(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendList"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Da,ClassRef:rn,execute:(n,o)=>pe.sendList(n,o)});return s.status(201).json(r)}).post(this.routerPath("sendButtons"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Pa,ClassRef:sn,execute:(n,o)=>pe.sendButtons(n,o)});return s.status(201).json(r)})}};var ln=class{};var xc=require("express");var un=class extends x{constructor(...t){super();this.router=(0,xc.Router)();this.router.post(this.routerPath("set"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:Na,ClassRef:ln,execute:(n,o)=>er.createSettings(n,o)});s.status(201).json(r)}).get(this.routerPath("find"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:null,ClassRef:v,execute:n=>er.findSettings(n)});s.status(200).json(r)})}};var dn=class{};var Oc=require("express");var gn=class extends x{constructor(t,...e){super();this.configService=t;this.router=(0,Oc.Router)();this.router.post(this.routerPath("create"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:Ba,ClassRef:dn,execute:(o,a)=>Zn.createTemplate(o,a)});r.status(201).json(n)}).get(this.routerPath("find"),...e,async(s,r)=>{let n=await this.dataValidate({request:s,schema:D,ClassRef:v,execute:o=>Zn.findTemplate(o)});r.status(200).json(n)})}};var hn=A(require("express")),gr=A(require("path")),mn=class extends x{constructor(){super(),this.router=(0,hn.Router)();let i=gr.default.join(process.cwd(),"manager","dist"),t=gr.default.join(i,"index.html");this.router.use(hn.default.static(i)),this.router.get("*",(e,s)=>{s.sendFile(t)})}};var hr=(0,_c.Router)(),kc=C.get("SERVER"),Se=[ko,Bo,sr.apikey],Ap=new Lo,Rp=JSON.parse(yn.default.readFileSync("./package.json","utf8"));kc.DISABLE_MANAGER||hr.use("/manager",new mn().router);hr.get("/assets/*",(p,i)=>{let t=p.params[0],e=mr.default.join(process.cwd(),"manager","dist"),s=mr.default.join(e,"assets/",t);yn.default.existsSync(s)?(i.set("Content-Type",Nc.default.getType(s)||"text/css"),i.send(yn.default.readFileSync(s))):i.status(404).send("File not found")});hr.use((p,i,t)=>Ap.collectTelemetry(p,i,t)).get("/",(p,i)=>{i.status(200).json({status:200,message:"Welcome to the Evolution API, it is working!",version:Rp.version,clientName:process.env.DATABASE_CONNECTION_CLIENT_NAME,manager:kc.DISABLE_MANAGER?void 0:`${p.protocol}://${p.get("host")}/manager`,documentation:"https://doc.evolution-api.com"})}).post("/verify-creds",sr.apikey,async(p,i)=>i.status(200).json({status:200,message:"Credentials are valid",facebookAppId:process.env.FACEBOOK_APP_ID,facebookConfigId:process.env.FACEBOOK_CONFIG_ID,facebookUserToken:process.env.FACEBOOK_USER_TOKEN})).use("/instance",new Hi(C,...Se).router).use("/message",new pn(...Se).router).use("/call",new Lt(...Se).router).use("/chat",new Oi(...Se).router).use("/group",new Gi(...Se).router).use("/template",new gn(C,...Se).router).use("/settings",new un(...Se).router).use("/proxy",new Qi(...Se).router).use("/label",new Ki(...Se).router).use("",new ni(C).router).use("",new Di(C,...Se).router).use("",new Mi(...Se).router).use("",new xi(...Se).router);var h=class{constructor(...i){throw{status:400,error:"Bad Request",message:i.length>0?i:void 0}}};var We=class{constructor(...i){throw{status:401,error:"Unauthorized",message:i.length>0?i:"Unauthorized"}}};var it=class{constructor(...i){throw{status:403,error:"Forbidden",message:i.length>0?i:void 0}}};var W=class{constructor(...i){throw{status:404,error:"Not Found",message:i.length>0?i:void 0}}};var F=class{constructor(...i){throw{status:500,error:"Internal Server Error",message:i.length>0?i:void 0}}};var ct=require("jsonschema"),Ft=new T("Validate"),x=class{constructor(){}routerPath(i,t=!0){let e="/"+i;return t&&(e+="/:instanceName"),e}async dataValidate(i){let{request:t,schema:e,ClassRef:s,execute:r}=i,n=new s,o=t.body,a=t.params;t?.query&&Object.keys(t.query).length>0&&Object.assign(a,t.query),t.originalUrl.includes("/instance/create")&&Object.assign(a,o),Object.assign(n,o);let c=e?(0,ct.validate)(n,e):{valid:!0,errors:[]};if(!c.valid){let u=c.errors.map(({stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),g});throw Ft.error(u),new h(u)}return await r(a,n)}async groupNoValidate(i){let{request:t,ClassRef:e,schema:s,execute:r}=i,n=t.params,o=new e;Object.assign(o,t.body);let a=(0,ct.validate)(o,s);if(!a.valid){let c=a.errors.map(({property:u,stack:d,schema:l})=>{let g;return l.description?g=l.description:g=d.replace("instance.",""),{property:u.replace("instance.",""),message:g}});throw Ft.error([...c]),new h(...c)}return await r(n,o)}async groupValidate(i){let{request:t,ClassRef:e,schema:s,execute:r}=i,n=t.params,o=t.body,a=o?.groupJid;if(!a)if(t.query?.groupJid)a=t.query.groupJid;else throw new h("The group id needs to be informed in the query",'ex: "groupJid=120362@g.us"');a.endsWith("@g.us")||(a=a+"@g.us"),Object.assign(o,{groupJid:a});let c=new e;Object.assign(c,o);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:y})=>{let m;return y.description?m=y.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Ft.error([...d]),new h(...d)}return await r(n,c)}async inviteCodeValidate(i){let{request:t,ClassRef:e,schema:s,execute:r}=i,n=t.query;if(!n?.inviteCode)throw new h("The group invite code id needs to be informed in the query",'ex: "inviteCode=F1EX5QZxO181L3TMVP31gY" (Obtained from group join link)');let o=t.params,a=t.body,c=new e;Object.assign(a,n),Object.assign(c,a);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:y})=>{let m;return y.description?m=y.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Ft.error([...d]),new h(...d)}return await r(o,c)}async getParticipantsValidate(i){let{request:t,ClassRef:e,schema:s,execute:r}=i,n=t.query;if(!n?.getParticipants)throw new h("The getParticipants needs to be informed in the query");let o=t.params,a=t.body,c=new e;Object.assign(a,n),Object.assign(c,a);let u=(0,ct.validate)(c,s);if(!u.valid){let d=u.errors.map(({property:l,stack:g,schema:y})=>{let m;return y.description?m=y.description:m=g.replace("instance.",""),{property:l.replace("instance.",""),message:m}});throw Ft.error([...d]),new h(...d)}return await r(o,c)}};var yr=class{},fn=class extends yr{};var Bc=require("express");var Lt=class extends x{constructor(...t){super();this.router=(0,Bc.Router)();this.router.post(this.routerPath("offer"),...t,async(e,s)=>{let r=await this.dataValidate({request:e,schema:wa,ClassRef:fn,execute:(n,o)=>xo.offerCall(n,o)});return s.status(201).json(r)})}};0&&(module.exports={CallRouter});
/**
 * ┌──────────────────────────────────────────────────────────────────────────────┐
 * │ @author jrCleber                                                             │
 * │ @filename use-multi-file-auth-state-provider-files.ts                              │
 * │ Developed by: Cleber Wilson                                                  │
 * │ Creation date: May 31, 2024                                                 │
 * │ Contact: contato@codechat.dev                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @copyright © Cleber Wilson 2023. All rights reserved.                        │
 * │ Licensed under the Apache License, Version 2.0                               │
 * │                                                                              │
 * │  @license "https://github.com/code-chat-br/whatsapp-api/blob/main/LICENSE"   │
 * │                                                                              │
 * │ You may not use this file except in compliance with the License.             │
 * │ You may obtain a copy of the License at                                      │
 * │                                                                              │
 * │    http://www.apache.org/licenses/LICENSE-2.0                                │
 * │                                                                              │
 * │ Unless required by applicable law or agreed to in writing, software          │
 * │ distributed under the License is distributed on an "AS IS" BASIS,            │
 * │ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     │
 * │                                                                              │
 * │ See the License for the specific language governing permissions and          │
 * │ limitations under the License.                                               │
 * │                                                                              │
 * │ @type {AuthState}                                                            │
 * │ @function useMultiFileAuthStateRedisDb                                       │
 * │ @returns {Promise<AuthState>}                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @important                                                                   │
 * │ For any future changes to the code in this file, it is recommended to        │
 * │ contain, together with the modification, the information of the developer    │
 * │ who changed it and the date of modification.                                 │
 * └──────────────────────────────────────────────────────────────────────────────┘
 */
//# sourceMappingURL=call.router.js.map